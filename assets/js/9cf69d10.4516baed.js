"use strict";(self.webpackChunkanalytic_project=self.webpackChunkanalytic_project||[]).push([[5955],{9114:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>o});var i=r(4848),t=r(8453);const a={title:"Disruptor",sidebar_position:1,toc_min_heading_level:2,toc_max_heading_level:5,slug:"/middleware/disruptor"},c=void 0,s={id:"middleware/concurrentFramework/Disruptor",title:"Disruptor",description:"Disruptor - Concurrent Programming Framework",source:"@site/docs/middleware/concurrentFramework/Disruptor.mdx",sourceDirName:"middleware/concurrentFramework",slug:"/middleware/disruptor",permalink:"/analysis-project/docs/middleware/disruptor",draft:!1,unlisted:!1,editUrl:"https://github.com/Swagger-Ranger/analysis-project/docs/middleware/concurrentFramework/Disruptor.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Disruptor",sidebar_position:1,toc_min_heading_level:2,toc_max_heading_level:5,slug:"/middleware/disruptor"},sidebar:"middlewareSidebar",next:{title:"influxdb\u624b\u518c",permalink:"/analysis-project/docs/middleware/influxdb/influxdb\u624b\u518c"}},l={},o=[{value:"\u80cc\u666f\u548c\u6838\u5fc3\u601d\u60f3",id:"\u80cc\u666f\u548c\u6838\u5fc3\u601d\u60f3",level:2},{value:"\u4e3a\u4ec0\u4e48\u9700\u8981Disruptor",id:"\u4e3a\u4ec0\u4e48\u9700\u8981disruptor",level:3},{value:"\u5e76\u53d1\u9762\u4e34\u7684\u590d\u6742\u6027",id:"\u5e76\u53d1\u9762\u4e34\u7684\u590d\u6742\u6027",level:3},{value:"\u9501\u7684\u6210\u672c",id:"\u9501\u7684\u6210\u672c",level:4},{value:"CAS\u7684\u6210\u672c",id:"cas\u7684\u6210\u672c",level:4},{value:"CPU\u7f13\u5b58",id:"cpu\u7f13\u5b58",level:4},{value:"\u7f13\u5b58\u884c",id:"\u7f13\u5b58\u884c",level:4},{value:"\u5185\u5b58\u5c4f\u969c",id:"\u5185\u5b58\u5c4f\u969c",level:4},{value:"\u961f\u5217\u7684\u95ee\u9898",id:"\u961f\u5217\u7684\u95ee\u9898",level:4},{value:"\u7ba1\u9053\u548c\u56fe\u7684\u95ee\u9898",id:"\u7ba1\u9053\u548c\u56fe\u7684\u95ee\u9898",level:4},{value:"Disruptor\u7684\u89e3\u51b3\u601d\u8def",id:"disruptor\u7684\u89e3\u51b3\u601d\u8def",level:3},{value:"\u6838\u5fc3\u8bbe\u8ba1",id:"\u6838\u5fc3\u8bbe\u8ba1",level:4},{value:"\u5185\u5b58\u5206\u914d",id:"\u5185\u5b58\u5206\u914d",level:4},{value:"\u5173\u6ce8\u70b9\u5206\u79bb",id:"\u5173\u6ce8\u70b9\u5206\u79bb",level:4},{value:"Disruptor\u7684\u8bbe\u8ba1\u5b9e\u73b0",id:"disruptor\u7684\u8bbe\u8ba1\u5b9e\u73b0",level:2},{value:"\u6838\u5fc3\u5b58\u50a8\u7ed3\u6784",id:"\u6838\u5fc3\u5b58\u50a8\u7ed3\u6784",level:3},{value:"RingBuffer",id:"ringbuffer",level:4},{value:"\u6570\u7ec4\u7684\u5bfb\u5740",id:"\u6570\u7ec4\u7684\u5bfb\u5740",level:4},{value:"\u5e76\u53d1\u534f\u8c03",id:"\u5e76\u53d1\u534f\u8c03",level:4},{value:"\u6838\u5fc3\u534f\u8c03\u5bf9\u8c61",id:"\u6838\u5fc3\u534f\u8c03\u5bf9\u8c61",level:3},{value:"Sequence",id:"sequence",level:4},{value:"Sequenced",id:"sequenced",level:4},{value:"Sequencer",id:"sequencer",level:4},{value:"\u6d88\u8d39",id:"\u6d88\u8d39",level:3},{value:"\u6d88\u8d39\u903b\u8f91\u5904\u7406 EventHandler",id:"\u6d88\u8d39\u903b\u8f91\u5904\u7406-eventhandler",level:4},{value:"\u6d88\u8d39\u6d41\u7a0b\u63a7\u5236 EventProcessor",id:"\u6d88\u8d39\u6d41\u7a0b\u63a7\u5236-eventprocessor",level:4},{value:"\u591a\u6d88\u8d39\u8005\u7684\u534f\u8c03",id:"\u591a\u6d88\u8d39\u8005\u7684\u534f\u8c03",level:4},{value:"\u7b49\u5f85\u7b56\u7565",id:"\u7b49\u5f85\u7b56\u7565",level:4},{value:"workpool\u7684\u79fb\u9664\u548c\u591a\u7ebf\u7a0b\u6d88\u8d39\u7684\u5b9e\u73b0",id:"workpool\u7684\u79fb\u9664\u548c\u591a\u7ebf\u7a0b\u6d88\u8d39\u7684\u5b9e\u73b0",level:4},{value:"\u751f\u4ea7",id:"\u751f\u4ea7",level:3},{value:"\u6570\u636e\u8282\u70b9\u548c\u6570\u636e",id:"\u6570\u636e\u8282\u70b9\u548c\u6570\u636e",level:4},{value:"\u5355\u751f\u4ea7\u8005",id:"\u5355\u751f\u4ea7\u8005",level:4},{value:"\u591a\u751f\u4ea7\u8005",id:"\u591a\u751f\u4ea7\u8005",level:4},{value:"what\u2018s more",id:"whats-more",level:3}];function u(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"Disruptor - Concurrent Programming Framework"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"At LMAX we have built an order matching engine, real-time risk management, and a highly available in-memory transaction processing system all on this pattern to great success. Each of these systems has set new performance standards that, as far as we can tell, are unsurpass."}),"\n",(0,i.jsx)(n.p,{children:"\u5728LMAX\uff0c\u6211\u4eec\u6784\u5efa\u4e86\u4e00\u4e2a\u8ba2\u5355\u5339\u914d\u5f15\u64ce\u3001\u5b9e\u65f6\u98ce\u9669\u7ba1\u7406\u548c\u4e00\u4e2a\u9ad8\u53ef\u7528\u7684\u5185\u5b58\u4e8b\u52a1\u5904\u7406\u7cfb\u7edf\uff0c\u6240\u6709\u8fd9\u4e9b\u90fd\u57fa\u4e8e\u8fd9\u79cd\u6a21\u5f0f\u53d6\u5f97\u4e86\u5de8\u5927\u7684\u6210\u529f\u3002 \u8fd9\u4e9b\u7cfb\u7edf\u4e2d\u7684\u6bcf\u4e00\u4e2a\u90fd\u6811\u7acb\u4e86\u65b0\u7684\u6027\u80fd\u6307\u6807\uff0c\u636e\u6211\u4eec\u6240\u77e5\uff0c\u8fd9\u4e9b\u6307\u6807\u662f\u65e0\u4e0e\u4f26\u6bd4\u7684\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["\u200b            -----Disruptor\u8bba\u6587\uff1a\u300aDisruptor",":High"," performance alternative to bounded queues for exchanging data between concurrent threads\u300b (",(0,i.jsx)(n.strong,{children:"\u5f3a\u70c8\u5efa\u8bae\u8bfb\u4e00\u4e0b\u8fd9\u7bc7\u8bba\u6587"}),")"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\u8ba2\u5355\u5339\u914d\u5f15\u64ce\u3001\u5b9e\u65f6\u98ce\u9669\u7ba1\u7406\u7279\u70b9\u611f\u89c9\u548c",(0,i.jsx)(n.code,{children:"Analysis Project"}),"\u8981\u505a\u7684\u4e8b\u60c5\u6709\u76f8\u5f53\u9ad8\u7684\u76f8\u4f3c\u5ea6\u3002"]}),"\n",(0,i.jsx)(n.h2,{id:"\u80cc\u666f\u548c\u6838\u5fc3\u601d\u60f3",children:"\u80cc\u666f\u548c\u6838\u5fc3\u601d\u60f3"}),"\n",(0,i.jsx)(n.h3,{id:"\u4e3a\u4ec0\u4e48\u9700\u8981disruptor",children:"\u4e3a\u4ec0\u4e48\u9700\u8981Disruptor"}),"\n",(0,i.jsx)(n.p,{children:"\u5982\u679c\u662f\u5e38\u89c4\u7684\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u662f\u5404\u81ea\u4e00\u6761\u94fe\u8def\u5904\u7406\u4e0b\u6765\uff0c\u5fc5\u7136\u6709\u4e2d\u95f4\u5f88\u591a\u7b49\u5f85\u800c\u672a\u5c06cpu\u6027\u80fd\u5145\u5206\u91ca\u653e\uff1b\u800c\u901a\u8fc7\u52a0\u5165Disruptor\uff0c\u5c06\u903b\u8f91\u62c6\u5206\u6210\u4e0d\u540c\u9636\u6bb5\u7684Pipeline\uff0c\u8fdb\u800c\u53ef\u4ee5\u5747\u8861\u7ebf\u7a0b\u7684\u5206\u914d\uff0c\u6bd4\u5982\u8017\u65f6\u957f\u7684\u591a\u52a0\u7ebf\u7a0b\u6765\u5904\u7406\uff0c\u6240\u6709\u7684\u7ebf\u7a0b\u90fd\u88ab\u5206\u914d\u6765\u59cb\u7ec8\u5904\u4e8e\u5bc6\u96c6\u6267\u884c\u7684\u72b6\u6001\uff0c\u8fd9\u6837\u5c31\u80fd\u8ba9cpu\u8ba1\u7b97\u80fd\u529b\u5145\u5206\u91ca\u653e\uff0c\u63d0\u5347\u6574\u4e2a\u7cfb\u7edf\u7684\u6548\u7387\u3002\u5177\u4f53\u539f\u56e0\u5982\u4e0b\uff1a"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u6d88\u9664\u4e0d\u5fc5\u8981\u7684\u7b49\u5f85"}),"\uff1a\u5728\u4f20\u7edf\u7684\u5904\u7406\u6a21\u5f0f\u4e2d\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u901a\u5e38\u90fd\u662f\u987a\u5e8f\u5730\u5b8c\u6210\u6240\u6709\u4efb\u52a1\u6b65\u9aa4\u3002\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u67d0\u4e9b\u7ebf\u7a0b\u53ef\u80fd\u4f1a\u56e0\u4e3a\u7b49\u5f85\u8d44\u6e90\u6216\u9501\u800c\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\uff0c\u6d6a\u8d39\u4e86 CPU \u8d44\u6e90\u3002\u800c Disruptor \u901a\u8fc7\u8ba9\u4e0d\u540c\u7684\u7ebf\u7a0b\u4e13\u6ce8\u4e8e\u4e0d\u540c\u7684\u9636\u6bb5\u6216\u4e0d\u540c\u7684\u4efb\u52a1\uff0c\u53ef\u4ee5\u6d88\u9664\u8fd9\u79cd\u4e0d\u5fc5\u8981\u7684\u7b49\u5f85\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u51cf\u5c11\u7ade\u4e89\u5145\u5206\u5229\u7528 CPU"}),"\uff1a\u7531\u4e8e Disruptor \u7684\u8bbe\u8ba1\u76ee\u6807\u4e4b\u4e00\u662f\u51cf\u5c11\u7ebf\u7a0b\u95f4\u7684\u9501\u7ade\u4e89\u548c\u4e0a\u4e0b\u6587\u5207\u6362\uff0c\u6240\u4ee5\u5b83\u80fd\u66f4\u9ad8\u6548\u5730\u5229\u7528 CPU\u3002\u5c06\u4efb\u52a1\u5206\u6210\u591a\u4e2a\u9636\u6bb5\u4e4b\u540e\uff0c\u53ef\u4ee5\u6839\u636e\u6bcf\u4e2a\u9636\u6bb5\u7684\u590d\u6742\u5ea6\u548c\u6267\u884c\u65f6\u95f4\u5206\u914d\u9002\u91cf\u7684\u7ebf\u7a0b\u8d44\u6e90\u3002\u4f8b\u5982\uff0c\u67d0\u4e9b\u8017\u65f6\u8f83\u957f\u7684\u4efb\u52a1\u9636\u6bb5\u53ef\u4ee5\u5206\u914d\u66f4\u591a\u7684\u7ebf\u7a0b\uff0c\u786e\u4fdd\u8fd9\u4e9b\u4efb\u52a1\u5f97\u5230\u66f4\u597d\u7684\u5904\u7406\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u63d0\u9ad8\u7cfb\u7edf\u541e\u5410\u91cf"}),"\uff1aDisruptor \u91c7\u7528\u73af\u5f62\u7f13\u51b2\u533a\uff08Ring Buffer\uff09\u548c\u65e0\u9501\u7b97\u6cd5\u6765\u5b9e\u73b0\u6570\u636e\u7684\u9ad8\u6548\u4f20\u9012\uff0c\u51cf\u5c11\u4e86\u9501\u548c\u7b49\u5f85\u7684\u5f00\u9500\uff0c\u8fd9\u5c31\u4f7f\u5f97\u5728\u9ad8\u5e76\u53d1\u573a\u666f\u4e0b\uff0c\u7cfb\u7edf\u7684\u541e\u5410\u91cf\u80fd\u591f\u5f97\u5230\u663e\u8457\u63d0\u5347\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u6570\u636e\u7684\u6709\u5e8f\u5904\u7406\u548c\u7f13\u5b58\u547d\u4e2d\u4f18\u5316"}),"\uff1aDisruptor \u7684\u6570\u636e\u7ed3\u6784\u8bbe\u8ba1Ring Buffer\u4f7f\u5f97\u6570\u636e\u5728\u5185\u5b58\u4e2d\u662f\u7ebf\u6027\u5b58\u50a8\u7684\uff0c\u8fd9\u79cd\u65b9\u5f0f\u66f4\u6709\u5229\u4e8e CPU \u7f13\u5b58\u7684\u547d\u4e2d\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u7f13\u5b58\u5931\u6548\u7684\u60c5\u51b5\u53d1\u751f\uff0c\u63d0\u9ad8\u4e86\u5904\u7406\u6027\u80fd\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u6839\u636e\u4e0d\u540c\u7684\u5904\u7406\u9636\u6bb5\u52a8\u6001\u8c03\u6574\u7ebf\u7a0b"}),"\uff1aDisruptor \u53ef\u4ee5\u6839\u636e\u4e0d\u540c\u9636\u6bb5\u7684\u4efb\u52a1\u8d1f\u8f7d\u52a8\u6001\u8c03\u6574\u7ebf\u7a0b\u7684\u5206\u914d\u3002\u4f8b\u5982\uff0c\u5982\u679c\u67d0\u4e2a\u9636\u6bb5\u7684\u4efb\u52a1\u9700\u8981\u66f4\u591a\u7684\u8ba1\u7b97\u8d44\u6e90\uff0c\u800c\u5176\u4ed6\u9636\u6bb5\u7684\u4efb\u52a1\u8f83\u8f7b\uff0c\u5219\u53ef\u4ee5\u52a8\u6001\u5730\u8c03\u6574\u7ebf\u7a0b\uff0c\u4f7f\u5f97\u8d44\u6e90\u80fd\u591f\u66f4\u597d\u5730\u670d\u52a1\u4e8e\u5f53\u524d\u7684\u8ba1\u7b97\u5bc6\u96c6\u578b\u4efb\u52a1\u3002"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u540c\u65f6\u57fa\u4e8e\u5df2\u6709\u963b\u585e\u961f\u5217\u7684\u7ebf\u7a0b\u95f4\u6570\u636e\u4f20\u9012\u65b9\u6848\u5176\u961f\u5217\u7684\u5934\u5c3e\u5b58\u5728\u7ade\u4e89\uff0c\u4e5f\u9700\u8981\u4e00\u79cd\u66f4\u9ad8\u6548\u7684\u7ebf\u7a0b\u5e76\u53d1\u534f\u4f5c\u65b9\u6848\u3002"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"\u4e0a\u9762\u63d0\u5230\u7684\u672f\u8bed\u4e0b\u9762\u4f1a\u89e3\u91ca\u3002"})}),"\n",(0,i.jsx)(n.h3,{id:"\u5e76\u53d1\u9762\u4e34\u7684\u590d\u6742\u6027",children:"\u5e76\u53d1\u9762\u4e34\u7684\u590d\u6742\u6027"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"\u8fd9\u4e00\u7ae0\u6765\u81ea\u8bba\u6587\u4e2d\u7684\u5185\u5bb9\uff0c\u5c5e\u4e8e\u662f\u5bf9\u5176\u7684\u4e2a\u4eba\u7406\u89e3"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u5728\u4efb\u4f55\u5e76\u53d1\u73af\u5883\u4e2d\uff0c\u6700\u6602\u8d35\u7684\u64cd\u4f5c\u662f\u4e89\u7528\u7684\u5199\u8bbf\u95ee\u3002 \u8981\u4f7f\u591a\u4e2a\u7ebf\u7a0b\u5199\u5165\u540c\u4e00\u8d44\u6e90\uff0c\u9700\u8981\u590d\u6742\u4e14\u6602\u8d35\u7684\u534f\u8c03\u3002 \u901a\u5e38\uff0c\u8fd9\u662f\u901a\u8fc7\u91c7\u7528\u67d0\u79cd\u9501\u5b9a\u7b56\u7565\u6765\u5b9e\u73b0\u7684\u3002\u5e76\u4e14\u73b0\u6709\u7684\u4e00\u4e9b\u540c\u6b65\u7b56\u7565\u5b58\u5728\u4e00\u4e9b\u5f0a\u7aef\u5bfc\u81f4\u4e0d\u80fd\u5145\u5206\u5229\u7528\u73b0\u4ee3CPU\u7684\u7279\u6027"}),"\n",(0,i.jsx)(n.h4,{id:"\u9501\u7684\u6210\u672c",children:"\u9501\u7684\u6210\u672c"}),"\n",(0,i.jsxs)(n.p,{children:["\u9501\u63d0\u4f9b\u4e92\u65a5\u5e76\u786e\u4fdd\u53d8\u5316\u7684\u53ef\u89c1\u6027\u4ee5\u6709\u5e8f\u7684\u65b9\u5f0f\u53d1\u751f\u3002 \u9501\u975e\u5e38\u6602\u8d35\uff0c\u56e0\u4e3a\u5728\u4e89\u7528\u65f6\u9700\u8981\u4ef2\u88c1\u3002 \u8fd9\u79cd\u4ef2\u88c1\u662f\u901a\u8fc7",(0,i.jsx)(n.strong,{children:"\u4e0a\u4e0b\u6587\u5207\u6362\u5230\u64cd\u4f5c\u7cfb\u7edf\u5185\u6838"}),"\u6765\u5b9e\u73b0\u7684\uff0c\u8be5\u5185\u6838\u5c06\u6302\u8d77\u7b49\u5f85\u9501\u7684\u7ebf\u7a0b\u76f4\u5230\u9501\u88ab\u91ca\u653e\u3002 \u5728\u8fd9\u79cd\u4e0a\u4e0b\u6587\u5207\u6362\u671f\u95f4\uff0c\u9664\u4e86\u5c06\u63a7\u5236\u6743\u4ea4\u7ed9\u64cd\u4f5c\u7cfb\u7edf\u4ee5\u4fbf\u5728\u63a7\u5236\u6743\u671f\u95f4\u6267\u884c\u5176\u4ed6\u7684\u7cfb\u7edf\u4efb\u52a1\u5916\uff0c\u6267\u884c\u4e0a\u4e0b\u6587\u8fd8\u53ef\u80fd",(0,i.jsx)(n.strong,{children:"\u4e22\u5931\u5148\u524d\u7f13\u5b58\u7684\u6570\u636e\u548c\u6307\u4ee4"}),"\uff0c\u8fd9\u53ef\u80fd\u5bf9\u73b0\u4ee3\u5904\u7406\u5668\u4ea7\u751f\u4e25\u91cd\u7684\u6027\u80fd\u5f71\u54cd\u3002 \u53ef\u4ee5\u4f7f\u7528\u5feb\u901f\u7528\u6237\u6a21\u5f0f\u9501\uff0c\u4f46\u8fd9\u53ea\u6709\u5728\u6ca1\u6709\u4e89\u7528\u65f6\u624d\u80fd\u771f\u6b63\u53d7\u76ca\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u540c\u65f6",(0,i.jsx)(n.strong,{children:"\u4e00\u65e6\u5f15\u5165\u9501\u6765\u63d0\u4f9b\u4e92\u65a5\uff0c\u5373\u4f7f\u9501\u5c1a\u672a\u88ab\u4e89\u7528\uff0c\u6210\u672c\u4e5f\u4f1a\u663e\u7740\u589e\u52a0"}),"\u3002 \u5f53\u4e24\u4e2a\u6216\u66f4\u591a\u7ebf\u7a0b\u5f00\u59cb\u4e89\u7528\u65f6\uff0c\u6210\u672c\u518d\u6b21\u589e\u52a0\u6570 \u4e2a\u6570\u91cf\u7ea7\u3002"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"\u4e0b\u9762\u662fDisruptor\u8bba\u6587\u7ed9\u7684\u4e89\u7528\u6210\u672c\u6bd4\u8f83\uff08Comparative costs of contention\uff09\uff1a"})}),"\n",(0,i.jsxs)(n.table,{children:[(0,i.jsx)(n.thead,{children:(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.th,{children:"\u65b9\u6cd5"}),(0,i.jsx)(n.th,{children:"\u65f6\u95f4\uff08\u6beb\u79d2\uff09"})]})}),(0,i.jsxs)(n.tbody,{children:[(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"\u5355\u4e2a\u7ebf\u7a0b"}),(0,i.jsx)(n.td,{children:"300"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"\u5e26\u9501\u7684\u5355\u4e2a\u7ebf\u7a0b"}),(0,i.jsx)(n.td,{children:"10,000"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"\u5e26\u9501\u7684\u4e24\u4e2a\u7ebf\u7a0b"}),(0,i.jsx)(n.td,{children:"224,000"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"\u5e26CAS\u7684\u5355\u4e2a\u7ebf\u7a0b"}),(0,i.jsx)(n.td,{children:"5,700"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"\u5e26CAS\u7684\u4e24\u4e2a\u7ebf\u7a0b"}),(0,i.jsx)(n.td,{children:"30,000"})]}),(0,i.jsxs)(n.tr,{children:[(0,i.jsx)(n.td,{children:"\u5e26\u6709volatile\u5199\u7684\u5355\u4e2a\u7ebf\u7a0b"}),(0,i.jsx)(n.td,{children:"4,700"})]})]})]}),"\n",(0,i.jsx)(n.h4,{id:"cas\u7684\u6210\u672c",children:"CAS\u7684\u6210\u672c"}),"\n",(0,i.jsx)(n.p,{children:"\u5728\u66f4\u65b0\u5185\u5b58\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u4e00\u79cd\u6bd4\u4f7f\u7528\u9501\u66f4\u9ad8\u6548\u7684\u66ff\u4ee3\u65b9\u6cd5\uff0c\u7279\u522b\u662f\u5f53\u66f4\u65b0\u7684\u76ee\u6807\u662f\u5355\u4e2a\u5b57\u65f6\u3002 \u8fd9\u4e9b\u66ff\u4ee3\u65b9\u6cd5\u57fa\u4e8e\u73b0\u4ee3\u5904\u7406\u5668\u4e2d\u5b9e\u73b0\u7684\u539f\u5b50\u6216\u4ea4\u4e92\u5f0f\u6307\u4ee4\uff0c\u8fd9\u4e9b\u901a\u5e38\u88ab\u79f0\u4e3aCAS\uff08\u6bd4\u8f83\u548c\u4ea4\u6362\uff09\u64cd\u4f5c\u3002"}),"\n",(0,i.jsx)(n.p,{children:"CAS\u64cd\u4f5c\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u673a\u5668\u7801\u6307\u4ee4\uff0c\u5141\u8bb8\u4ee5\u539f\u5b50\u64cd\u4f5c\u7684\u65b9\u5f0f\u5c06\u5185\u5b58\u4e2d\u7684\u4e00\u4e2a\u5b57\u8bbe\u7f6e\u4e3a\u6761\u4ef6\u8bbe\u7f6e\u3002 \u5bf9\u4e8e \u201c\u589e\u52a0\u8ba1\u6570\u5668\u5b9e\u9a8c\u201d\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u90fd\u53ef\u4ee5\u5728\u4e00\u4e2a\u5faa\u73af\u4e2d\u65cb\u8f6c\u8bfb\u53d6\u8ba1\u6570\u5668\uff0c\u7136\u540e\u5c1d\u8bd5\u5c06\u5176\u539f\u5b50\u8bbe\u7f6e\u4e3a\u65b0\u7684\u9012\u589e\u503c\u3002 \u65e7\u503c\u548c\u65b0\u503c\u4f5c\u4e3a\u53c2\u6570\u63d0\u4f9b\u7ed9\u6b64\u6307\u4ee4\u3002 \u5982\u679c\u5728\u6267\u884c\u64cd\u4f5c\u65f6\uff0c\u8ba1\u6570\u5668\u7684\u503c\u4e0e\u63d0\u4f9b\u7684\u9884\u671f\u503c\u5339\u914d\uff0c\u5219\u5c06\u8ba1\u6570\u5668\u66f4\u65b0\u4e3a\u65b0\u503c\u3002 \u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u503c\u4e0e\u9884\u671f\u503c\u4e0d\u7b26\uff0c\u5219CAS\u64cd\u4f5c\u5c06\u5931\u8d25\u3002 \u7136\u540e\uff0c\u5c1d\u8bd5\u6267\u884c\u66f4\u6539\u7684\u7ebf\u7a0b\u5c06\u91cd\u65b0\u5c1d\u8bd5\uff0c\u4ece\u8be5\u503c\u91cd\u65b0\u8bfb\u53d6\u8ba1\u6570\u5668\u5e76\u9012\u589e\uff0c\u76f4\u5230\u66f4\u6539\u6210\u529f\u4e3a\u6b62\u3002"}),"\n",(0,i.jsx)(n.p,{children:"**\u8fd9\u79cdCAS\u65b9\u6cd5\u6bd4\u9501\u66f4\u9ad8\u6548\uff0c\u56e0\u4e3a\u5b83\u4e0d\u9700\u8981\u4e0a\u4e0b\u6587\u5207\u6362\u5230\u5185\u6838\u8fdb\u884c\u4ef2\u88c1\u3002 \u7136\u800c\uff0cCAS\u64cd\u4f5c\u5e76\u975e\u6ca1\u6709\u4ee3\u4ef7\u3002 \u5904\u7406\u5668\u5fc5\u987b\u9501\u5b9a\u5176\u6307\u4ee4\u6d41\u6c34\u7ebf\u4ee5\u786e\u4fdd\u539f\u5b50\u6027\uff0c\u5e76\u4f7f\u7528\u5185\u5b58\u5c4f\u969c\u4f7f\u66f4\u6539\u5bf9\u5176\u4ed6\u7ebf\u7a0b\u53ef\u89c1\u3002 **"}),"\n",(0,i.jsxs)(n.p,{children:["\u5982\u679c\u7a0b\u5e8f\u7684\u4e34\u754c\u533a\u6bd4\u7b80\u5355\u7684\u8ba1\u6570\u5668\u589e\u52a0\u66f4\u590d\u6742\uff0c\u53ef\u80fd\u9700\u8981\u4f7f\u7528\u591a\u4e2aCAS\u64cd\u4f5c\u6765\u534f\u8c03\u4e89\u7528\u7684\u590d\u6742\u72b6\u6001\u673a\u3002 \u4f7f\u7528\u9501\u6765\u5f00\u53d1\u5e76\u53d1\u7a0b\u5e8f\u5f88\u56f0\u96be\uff1b",(0,i.jsx)(n.strong,{children:"\u4f7f\u7528CAS\u64cd\u4f5c\u548c\u5185\u5b58\u5c4f\u969c\u6765\u5f00\u53d1\u65e0\u9501\u7b97\u6cd5\u5219\u66f4\u52a0\u590d\u6742\uff0c\u800c\u4e14\u5f88\u96be\u8bc1\u660e\u5b83\u4eec\u662f\u6b63\u786e\u7684\u3002"})]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u7406\u60f3\u7684\u7b97\u6cd5\u5e94\u8be5\u662f\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u62e5\u6709\u5bf9\u5355\u4e2a\u8d44\u6e90\u7684\u6240\u6709\u5199\u64cd\u4f5c\uff0c\u5176\u4ed6\u7ebf\u7a0b\u8bfb\u53d6\u7ed3\u679c\u3002 \u5728\u591a\u5904\u7406\u5668\u73af\u5883\u4e2d\u8bfb\u53d6\u7ed3\u679c\u9700\u8981\u4f7f\u7528\u5185\u5b58\u5c4f\u969c\uff0c\u4ee5\u4f7f\u66f4\u6539\u5bf9\u5176\u4ed6\u5904\u7406\u5668\u4e0a\u8fd0\u884c\u7684\u7ebf\u7a0b\u53ef\u89c1\u3002\u8fd9\u4e5f\u662fDisruptor\u7684\u505a\u6cd5"})}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"cpu\u7f13\u5b58",children:"CPU\u7f13\u5b58"}),"\n",(0,i.jsxs)(n.p,{children:["\u73b0\u4ee3CPU\u7684\u901f\u5ea6\u6bd4\u5185\u5b58\u7cfb\u7edf\u5feb\u5f97\u591a\u3002 \u4e3a\u4e86\u5f25\u5408\u8fd9\u79cd\u5dee\u8ddd\uff0cCPU\u4f7f\u7528\u590d\u6742\u7684\u7f13\u5b58\u7cfb\u7edf\uff0c\u8fd9\u4e9b\u7cfb\u7edf\u5b9e\u9645\u4e0a\u662f\u6ca1\u6709\u94fe\u63a5\u7684\u5feb\u901f\u786c\u4ef6\u54c8\u5e0c\u8868\u3002 \u8fd9\u4e9b\u7f13\u5b58\u901a\u8fc7\u6d88\u606f\u4f20\u9012\u534f\u8bae\u4e0e\u5176\u4ed6\u5904\u7406\u5668\u7f13\u5b58\u7cfb\u7edf\u4fdd\u6301\u4e00\u81f4\u3002",(0,i.jsx)(n.strong,{children:"\u7f13\u5b58\u4e00\u81f4\u6027\u662f\u7531\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8baeMESI\u6765\u4fdd\u8bc1\u7684\uff0c\u5176\u662f\u7531\u786c\u4ef6\u5c42\u9762\u6765\u5b9e\u73b0\u7684\uff0cMESI\u534f\u8bae\u7684\u72b6\u6001\u4fe1\u606f\u5b58\u50a8\u5728\u6bcf\u4e2a\u5904\u7406\u5668\u6838\u5fc3\u7684\u7f13\u5b58\u63a7\u5236\u5668\u4e2d\u3002\u7f13\u5b58\u63a7\u5236\u5668\u662f\u4e00\u4e2a\u786c\u4ef6\u6a21\u5757\uff0c\u8d1f\u8d23\u7ba1\u7406\u8be5\u6838\u5fc3\u7684\u7f13\u5b58\u884c\uff08cache line\uff09\u53ca\u5176\u72b6\u6001\u3002\u7f13\u5b58\u884c\u662f\u7f13\u5b58\u4e2d\u5b58\u50a8\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d\u3002\u6bcf\u4e2a\u7f13\u5b58\u884c\u90fd\u6709\u4e00\u4e2a\u4e0e\u4e4b\u5173\u8054\u7684\u72b6\u6001\u4f4d\uff08state bits\uff09\uff0c\u8fd9\u4e9b\u72b6\u6001\u4f4d\u8bb0\u5f55\u4e86\u5f53\u524d\u7f13\u5b58\u884c\u7684\u6570\u636e\u7684\u72b6\u6001\uff08M\u3001E\u3001S\u3001I\u4e4b\u4e00\uff09\uff0c\u5f53\u4e00\u4e2a\u5904\u7406\u5668\u6838\u5fc3\u5bf9\u67d0\u4e2a\u5185\u5b58\u5730\u5740\u7684\u6570\u636e\u8fdb\u884c\u8bfb\u53d6\u6216\u5199\u5165\u65f6\uff0c\u4f1a\u89e6\u53d1\u7f13\u5b58\u63a7\u5236\u5668\u8fdb\u884c\u76f8\u5e94\u7684\u72b6\u6001\u8f6c\u6362\u548c\u64cd\u4f5c\uff0c\u72b6\u6001\u7684\u8f6c\u5316\u5982\u4e0b\uff1a"}),"\u3002"]}),"\n",(0,i.jsx)("div",{style:{textAlign:"center",width:"100%"},children:(0,i.jsx)("img",{src:"/analysis-project/img/disruptor/dis-0.png",alt:"image",style:{maxWidth:"60%",height:"auto",display:"block",margin:"0 auto"}})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u5f53\u7ebf\u7a0b\u83b7\u53d6\u7f13\u5b58\u65f6\uff0c\u8bfb\u53d6\u5176\u7f13\u5b58\u72b6\u6001\u6709\u4e0d\u540c\u7684\u64cd\u4f5c"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u8bfb\u53d6\u64cd\u4f5c\uff08Read\uff09"}),"\uff1a"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\u5982\u679c\u7f13\u5b58\u884c\u72b6\u6001\u662f ",(0,i.jsx)(n.strong,{children:"M"})," \u6216 ",(0,i.jsx)(n.strong,{children:"E"}),"\uff0c\u5904\u7406\u5668\u53ef\u4ee5\u76f4\u63a5\u4ece\u7f13\u5b58\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u4e0d\u9700\u8981\u4e0e\u5176\u4ed6\u7f13\u5b58\u8fdb\u884c\u901a\u4fe1\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:["\u5982\u679c\u7f13\u5b58\u884c\u72b6\u6001\u662f ",(0,i.jsx)(n.strong,{children:"S"}),"\uff0c\u5904\u7406\u5668\u4e5f\u53ef\u4ee5\u76f4\u63a5\u8bfb\u53d6\u6570\u636e\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:["\u5982\u679c\u7f13\u5b58\u884c\u72b6\u6001\u662f ",(0,i.jsx)(n.strong,{children:"I"}),"\uff08\u65e0\u6548\uff09\uff0c\u5219\u9700\u8981\u4ece\u5176\u4ed6\u7f13\u5b58\u6216\u4e3b\u5185\u5b58\u4e2d\u83b7\u53d6\u6700\u65b0\u6570\u636e\u3002\u6b64\u65f6\uff0c\u7f13\u5b58\u63a7\u5236\u5668\u4f1a\u53d1\u9001\u8bf7\u6c42\uff08\u79f0\u4e3a",(0,i.jsx)(n.strong,{children:"Bus Read"}),"\uff09\u5230\u5171\u4eab\u603b\u7ebf\uff08bus\uff09\u6216\u4e92\u8fde\u7f51\u7edc\uff0c\u5176\u4ed6\u5904\u7406\u5668\u4f1a\u54cd\u5e94\u5e76\u63d0\u4f9b\u6570\u636e\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u5199\u5165\u64cd\u4f5c\uff08Write\uff09"}),"\uff1a"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["\u5982\u679c\u7f13\u5b58\u884c\u72b6\u6001\u662f ",(0,i.jsx)(n.strong,{children:"M"}),"\uff0c\u5904\u7406\u5668\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539\u6570\u636e\uff0c\u4e0d\u9700\u8981\u4e0e\u5176\u4ed6\u7f13\u5b58\u8fdb\u884c\u901a\u4fe1\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["\u5982\u679c\u7f13\u5b58\u884c\u72b6\u6001\u662f ",(0,i.jsx)(n.strong,{children:"E"}),"\uff0c\u5904\u7406\u5668\u53ef\u4ee5\u76f4\u63a5\u4fee\u6539\u6570\u636e\uff0c\u5e76\u5c06\u72b6\u6001\u6539\u4e3a ",(0,i.jsx)(n.strong,{children:"M"}),"\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["\u5982\u679c\u7f13\u5b58\u884c\u72b6\u6001\u662f ",(0,i.jsx)(n.strong,{children:"S"}),"\uff0c\u5904\u7406\u5668\u9700\u8981\u5c06\u8be5\u884c\u72b6\u6001\u6539\u4e3a ",(0,i.jsx)(n.strong,{children:"M"}),"\uff0c\u5e76\u901a\u77e5\u5176\u4ed6\u5904\u7406\u5668\u5c06\u5176\u7f13\u5b58\u4e2d\u5bf9\u5e94\u7684\u7f13\u5b58\u884c\u72b6\u6001\u6539\u4e3a ",(0,i.jsx)(n.strong,{children:"I"}),"\uff08\u79f0\u4e3a",(0,i.jsx)(n.strong,{children:"Invalidate"}),"\u64cd\u4f5c\uff09\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["\u5982\u679c\u7f13\u5b58\u884c\u72b6\u6001\u662f ",(0,i.jsx)(n.strong,{children:"I"}),"\uff0c\u5904\u7406\u5668\u5fc5\u987b\u5148\u4ece\u4e3b\u5185\u5b58\u6216\u5176\u4ed6\u7f13\u5b58\u4e2d\u52a0\u8f7d\u6700\u65b0\u6570\u636e\uff0c\u7136\u540e\u624d\u80fd\u8fdb\u884c\u4fee\u6539\uff0c\u72b6\u6001\u6700\u7ec8\u53d8\u4e3a ",(0,i.jsx)(n.strong,{children:"M"}),"\u3002"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"\u7f13\u5b58\u884c",children:"\u7f13\u5b58\u884c"}),"\n",(0,i.jsx)(n.p,{children:"\u73b0\u4ee3\u5904\u7406\u5668\u4e2d\u7f13\u5b58\u7684\u4f7f\u7528\u65b9\u5f0f\u5bf9\u4e8e\u6210\u529f\u7684\u9ad8\u6027\u80fd\u64cd\u4f5c\u975e\u5e38\u91cd\u8981\u3002 \u8fd9\u6837\u7684\u5904\u7406\u5668\u5728\u7f13\u5b58\u4e2d\u5904\u7406\u6570\u636e\u548c\u6307\u4ee4\u65f6\u975e\u5e38\u9ad8\u6548\uff0c\u4f46\u662f\u5f53\u53d1\u751f\u7f13\u5b58\u672a\u547d\u4e2d\u65f6\uff0c\u6548\u7387\u76f8\u5bf9\u8f83\u4f4e\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u786c\u4ef6\u4e0d\u662f\u4ee5\u5b57\u8282bytes\u6216\u5b57words\u4e3a\u5355\u4f4d\u64cd\u4f5c\u5185\u5b58\u3002 \u4e3a\u4e86\u63d0\u9ad8\u6548\u7387\uff0c\u7f13\u5b58\u88ab\u7ec4\u7ec7\u6210\u901a\u5e38\u4e3a32-256\u5b57\u8282\u7684\u7f13\u5b58\u884c\uff0c\u6700\u5e38\u89c1\u7684\u7f13\u5b58\u884c\u5927\u5c0f\u4e3a64\u5b57\u8282\u3002 \u8fd9\u662f\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u64cd\u4f5c\u7684\u7c92\u5ea6\u7ea7\u522b\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["\u8fd9\u610f\u5473\u7740\u5982\u679c\u4e24\u4e2a\u53d8\u91cf\u4f4d\u4e8e\u540c\u4e00\u7f13\u5b58\u884c\uff0c\u5e76\u4e14\u5b83\u4eec\u7531\u4e0d\u540c\u7684\u7ebf\u7a0b\u5199\u5165\uff0c\u5219\u5b83\u4eec\u4f1a\u51fa\u73b0\u4e0e\u5355\u4e2a\u53d8\u91cf\u76f8\u540c\u7684\u5199\u4e89\u7528\u95ee\u9898\u3002 \u8fd9\u662f\u4e00\u4e2a\u88ab\u79f0\u4e3a\u201c",(0,i.jsx)(n.strong,{children:"\u4f2a\u5171\u4eab"}),"\u201d\u7684\u6982\u5ff5\u3002 \u4e3a\u4e86\u5b9e\u73b0\u9ad8\u6027\u80fd\uff0c\u91cd\u8981\u7684\u662f\u786e\u4fdd\u72ec\u7acb\u4f46\u540c\u65f6\u88ab\u5199\u5165\u7684\u53d8\u91cf\u4e0d\u5171\u4eab\u540c\u4e00\u7f13\u5b58\u884c\uff0c\u4ee5\u51cf\u5c11\u4e89\u7528\u3002\n\u5f53\u4ee5\u53ef\u9884\u6d4b\u7684\u65b9\u5f0f\u8bbf\u95ee\u5185\u5b58\u65f6\uff0cCPU\u80fd\u591f\u901a\u8fc7\u9884\u6d4b\u4e0b\u4e00\u4e2a\u53ef\u80fd\u88ab\u8bbf\u95ee\u7684\u5185\u5b58\u5e76\u5c06\u5176\u9884\u53d6\u5230\u7f13\u5b58\u4e2d\u6765\u9690\u85cf\u8bbf\u95ee\u4e3b\u5185\u5b58\u7684\u5ef6\u8fdf\u6210\u672c\u3002 ",(0,i.jsxs)(n.em,{children:[(0,i.jsx)(n.em,{children:"\u53ea\u6709\u5728\u5904\u7406\u5668\u80fd\u591f\u68c0\u6d4b\u5230\u8bbf\u95ee\u6a21\u5f0f\uff08\u4f8b\u5982\u4ee5\u53ef\u9884\u6d4b\u7684\u201c\u6b65\u5e45\u201d\u904d\u5386\u5185\u5b58\uff09\u65f6\uff0c\u8fd9\u79cd\u65b9\u6cd5\u624d\u6709\u6548\u3002 \u5f53\u904d\u5386\u6570\u7ec4\u7684\u5185\u5bb9\u65f6\uff0c\u6b65\u5e45\u662f\u53ef\u9884\u6d4b\u7684\uff0c\u56e0\u6b64\u5185\u5b58\u5c06\u4ee5\u7f13\u5b58\u884c\u7684\u5f62\u5f0f\u9884\u53d6\uff0c\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u8bbf\u95ee\u6548\u7387\u3002 \u6b65\u5e45\u901a\u5e38\u5fc5\u987b\u5c0f\u4e8e2048\u5b57\u8282\uff0c\u624d\u80fd\u88ab\u5904\u7406\u5668\u6ce8\u610f\u5230"}),"\u3002 \u7136\u800c\uff0c",(0,i.jsx)(n.em,{children:"\u50cf\u94fe\u8868\u548c\u6811\u8fd9\u6837\u7684\u6570\u636e\u7ed3\u6784\u5f80\u5f80\u5177\u6709\u5728\u5185\u5b58\u4e2d\u5206\u5e03\u5e7f\u6cdb\u4e14\u6ca1\u6709\u53ef\u9884\u6d4b\u8bbf\u95ee\u6b65\u5e45\u7684\u8282\u70b9\u3002 \u5185\u5b58\u4e2d\u7f3a\u4e4f\u4e00\u81f4\u7684\u6a21\u5f0f\u9650\u5236\u4e86\u7cfb\u7edf\u9884\u53d6\u7f13\u5b58\u884c\u7684\u80fd\u529b\uff0c\u5bfc\u81f4\u4e3b\u5185\u5b58\u8bbf\u95ee\u6548\u7387\u4e0b\u964d\u8d85\u8fc72\u4e2a\u6570\u91cf\u7ea7"})]})]}),"\n",(0,i.jsx)(n.h4,{id:"\u5185\u5b58\u5c4f\u969c",children:"\u5185\u5b58\u5c4f\u969c"}),"\n",(0,i.jsxs)(n.p,{children:["\u4e0a\u9762\u8bb2\u4e86\u7f13\u5b58\uff0c\u4f46\u73b0\u4ee3\u5904\u7406\u5668\u4e3a\u4e86\u6027\u80fd\u539f\u56e0\u6267\u884c\u6307\u4ee4\u7684\u4e71\u5e8f\u6267\u884c\u548c\u5185\u5b58\u4e0e\u6267\u884c\u5355\u5143\u4e4b\u95f4\u7684\u4e71\u5e8f\u52a0\u8f7d\u548c\u5b58\u50a8\u3002 \u5904\u7406\u5668\u53ea\u9700\u8981\u4fdd\u8bc1\u7a0b\u5e8f\u903b\u8f91\u4ea7\u751f\u76f8\u540c\u7684\u7ed3\u679c\uff0c\u4e0d\u7ba1\u6267\u884c\u987a\u5e8f\u5982\u4f55\u3002 \u5bf9\u4e8e\u5355\u7ebf\u7a0b\u7a0b\u5e8f\u6765\u8bf4\uff0c\u8fd9\u4e0d\u662f\u4e00\u4e2a\u95ee\u9898\u3002 \u7136\u800c\uff0c\u5f53\u7ebf\u7a0b\u5171\u4eab\u72b6\u6001\u65f6\uff0c\u6240\u6709\u5185\u5b58\u66f4\u6539\u5fc5\u987b\u6309\u7167\u6240\u9700\u7684\u987a\u5e8f\u51fa\u73b0\uff0c\u4ee5\u786e\u4fdd\u6570\u636e\u4ea4\u6362\u6210\u529f\u3002 ",(0,i.jsx)(n.strong,{children:"\u8fd9\u5c31\u662f\u5185\u5b58\u5c4f\u969c\u7684\u4f5c\u7528\uff0c \u4f7f\u7528\u8f6f\u4ef6\u7684\u65b9\u5f0f\u901a\u8fc7\u5728\u7f16\u8bd1\u65f6\u63d2\u5165\u7f16\u8bd1\u5668\u6307\u4ee4\u6216\u5904\u7406\u5668\u6307\u4ee4\u544a\u8bc9CPU\u5728\u7279\u5b9a\u70b9\u9700\u8981\u5c06\u6570\u636e\u5199\u56de\u5171\u4eab\u7f13\u5b58\u6216\u8005\u4e3b\u5185\u5b58\uff0c\u5e76\u9632\u6b62\u67d0\u4e9b\u91cd\u6392\u5e8f\uff0c\u8fd9\u4e9b\u8f6f\u4ef6\u5185\u5b58\u5c4f\u969c\u662f\u5904\u7406\u5668\u672c\u8eab\u4f7f\u7528\u7684\u786c\u4ef6\u5c4f\u969c\u7684\u8865\u5145\u3002"})]}),"\n",(0,i.jsx)(n.p,{children:"\u5185\u5b58\u5c4f\u969c\u548cMESI\u534f\u8bae\u4e00\u8d77\u786e\u4fdd\u4e86\u5185\u5b58\u8bbf\u95ee\u7684\u6b63\u786e\u6027\uff1a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"MESI\u534f\u8bae"}),"\u786e\u4fdd\u4e86\u540c\u4e00\u65f6\u95f4\uff0c\u6240\u6709\u6838\u5fc3\u5bf9\u5171\u4eab\u5185\u5b58\u7684\u8bbf\u95ee\u5177\u6709\u4e00\u81f4\u6027\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u5185\u5b58\u5c4f\u969c"}),"\u5219\u786e\u4fdd\u4e86\u5355\u4e2a\u7ebf\u7a0b\u5728\u8bbf\u95ee\u5185\u5b58\u65f6\u7684\u64cd\u4f5c\u987a\u5e8f\uff08\u9632\u6b62\u7f16\u8bd1\u5668\u548c\u5904\u7406\u5668\u91cd\u6392\u5e8f\uff09\uff0c\u5e76\u5728\u7279\u70b9\u8282\u70b9\u5c06\u7f13\u5b58\u5199\u56de\u5171\u4eab\u7f13\u5b58\u6216\u4e3b\u5b58\u3002"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"\u961f\u5217\u7684\u95ee\u9898",children:"\u961f\u5217\u7684\u95ee\u9898"}),"\n",(0,i.jsxs)(n.p,{children:["\u961f\u5217\u901a\u5e38\u4f7f\u7528\u94fe\u8868\u6216\u6570\u7ec4\u4f5c\u4e3a\u5143\u7d20\u7684\u5e95\u5c42\u5b58\u50a8\u3002 \u5982\u679c\u5141\u8bb8\u65e0\u754c\u5185\u5b58\u961f\u5217\uff0c\u5219\u53ef\u80fd\u5b58\u5728\u5f53\u751f\u4ea7\u8005\u8d85\u8fc7\u6d88\u8d39\u8005\u65f6\u65e0\u9650\u589e\u957f\uff0c\u76f4\u5230\u8017\u5c3d\u5185\u5b58\uff0c\u5bfc\u81f4\u707e\u96be\u6027\u6545\u969c\u3002\u4e3a\u4e86\u907f\u514d\u8fd9\u79cd\u707e\u96be\u6027\u7ed3\u679c\uff0c\u961f\u5217\u901a\u5e38\u88ab\u9650\u5236\u5728\u4e00\u5b9a\u7684\u5927\u5c0f\uff08\u6709\u754c\uff09\u3002 ",(0,i.jsx)(n.strong,{children:"\u4fdd\u6301\u961f\u5217\u6709\u754c\u8981\u6c42\u5b83\u8981\u4e48\u662f\u57fa\u4e8e\u6570\u7ec4\u7684\uff0c\u8981\u4e48\u8981\u4e3b\u52a8\u8ddf\u8e2a\u5927\u5c0f\uff0c\u8fdb\u800c\u961f\u5217\u5b9e\u73b0\u5f80\u5f80\u5728\u5934\u90e8\u3001\u5c3e\u90e8\u548c\u5927\u5c0f\u53d8\u91cf\u4e0a\u5b58\u5728\u5199\u5165\u4e89\u7528\u3002"})]}),"\n",(0,i.jsx)(n.p,{children:"\u5728\u4f7f\u7528\u65f6\uff0c\u7531\u4e8e\u6d88\u8d39\u8005\u548c\u751f\u4ea7\u8005\u4e4b\u95f4\u7684\u901f\u5ea6\u5dee\u5f02\uff0c\u961f\u5217\u901a\u5e38\u8981\u4e48\u63a5\u8fd1\u6ee1\uff0c\u8981\u4e48\u63a5\u8fd1\u7a7a\u3002 \u5b83\u4eec\u5f88\u5c11\u5728\u5e73\u8861\u7684\u4e2d\u95f4\u5730\u5e26\u8fd0\u884c\uff0c\u5373\u751f\u4ea7\u548c\u6d88\u8d39\u7684\u901f\u5ea6\u76f8\u5339\u914d\u3002 \u8fd9\u79cd\u603b\u662f\u6ee1\u6216\u603b\u662f\u7a7a\u7684\u503e\u5411\u5bfc\u81f4\u9ad8\u6c34\u5e73\u7684\u4e89\u7528\u548c/\u6216\u6602\u8d35\u7684\u7f13\u5b58\u4e00\u81f4\u6027\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["\u5b58\u5728\u7ade\u4e89\u65f6\u4f7f\u7528\u4e0d\u540c\u7684\u5e76\u53d1\u5bf9\u8c61\uff08\u5982\u9501\u6216CAS\u53d8\u91cf\uff09\u5c06\u5934\u90e8\u548c\u5c3e\u90e8\u673a\u5236\u5206\u5f00\uff0c\u8fd8\u53ef\u80fd\u56e0\u4e3a\u5360\u7528\u76f8\u540c\u7684\u7f13\u5b58\u884c\u800c\u5c06\u5bfc\u81f4\u7f13\u5b58\u4f2a\u5171\u4eab\u4f7f\u5f97\u6027\u80fd\u4e0b\u964d\uff08Java\u4e2d\u65b0\u589e\u4e86",(0,i.jsx)(n.code,{children:"@Contended"}),"\u6765\u7f13\u5b58\u586b\u5145\u4ee5\u907f\u514d\u8fd9\u4e2a\u95ee\u9898\uff09\u3002"]}),"\n",(0,i.jsx)(n.p,{children:"\u5728Java\u4e2d\uff0c\u4f7f\u7528\u961f\u5217\u8fd8\u5b58\u5728\u53e6\u4e00\u4e2a\u95ee\u9898\uff0c\u5373\u5b83\u4eec\u662f\u5783\u573e\u7684\u91cd\u8981\u6765\u6e90\u3002 \u9996\u5148\uff0c\u9700\u8981\u5206\u914d\u5bf9\u8c61\u5e76\u5c06\u5176\u653e\u5165\u961f\u5217\u4e2d\u3002 \u5176\u6b21\uff0c\u5982\u679c\u662f\u57fa\u4e8e\u94fe\u8868\u7684\uff0c\u8fd8\u9700\u8981\u5206\u914d\u5bf9\u8c61\u6765\u8868\u793a\u5217\u8868\u7684\u8282\u70b9\u3002 \u5f53\u4e0d\u518d\u5f15\u7528\u65f6\uff0c\u9700\u8981\u56de\u6536\u652f\u6301\u961f\u5217\u5b9e\u73b0\u7684\u6240\u6709\u8fd9\u4e9b\u5206\u914d\u7684\u5bf9\u8c61\uff0c\u5373\u9891\u7e41\u7684gc\u800c\u589e\u52a0\u7cfb\u7edf\u6d88\u8017\u3002"}),"\n",(0,i.jsx)(n.h4,{id:"\u7ba1\u9053\u548c\u56fe\u7684\u95ee\u9898",children:"\u7ba1\u9053\u548c\u56fe\u7684\u95ee\u9898"}),"\n",(0,i.jsx)(n.p,{children:"\u5bf9\u4e8e\u8bb8\u591a\u95ee\u9898\uff0c\u5c06\u51e0\u4e2a\u5904\u7406\u9636\u6bb5\u8fde\u63a5\u6210\u7ba1\u9053\u662f\u6709\u610f\u4e49\u7684\u3002 \u8fd9\u6837\u7684\u7ba1\u9053\u901a\u5e38\u5177\u6709\u5e76\u884c\u8def\u5f84\uff0c\u7ec4\u7ec7\u6210\u7c7b\u4f3c\u56fe\u7684\u62d3\u6251\u7ed3\u6784\u3002 \u6bcf\u4e2a\u9636\u6bb5\u4e4b\u95f4\u7684\u8fde\u63a5\u901a\u5e38\u901a\u8fc7\u961f\u5217\u5b9e\u73b0\uff0c\u6bcf\u4e2a\u9636\u6bb5\u90fd\u6709\u81ea\u5df1\u7684\u7ebf\u7a0b\u3002\u4f46\u8fd9\u79cd\u65b9\u6cd5\u662f\u6709\u6210\u672c\u7684-- \u5728\u6bcf\u4e2a\u9636\u6bb5\uff0c\u6211\u4eec\u90fd\u9700\u8981\u627f\u62c5\u5165\u961f\u548c\u51fa\u961f\u5de5\u4f5c\u5355\u5143\u7684\u6210\u672c\u3002 \u5f53\u8def\u5f84\u5fc5\u987b\u5206\u53c9\u65f6\uff0c\u76ee\u6807\u6570\u91cf\u4f1a\u589e\u52a0\u8fd9 \u4e2a\u6210\u672c\uff0c\u5e76\u4e14\u5728\u6b64\u7c7b\u5206\u53c9\u4e4b\u540e\u91cd\u65b0\u8fde\u63a5\u65f6\u4f1a\u4ea7\u751f\u4e0d\u53ef\u907f\u514d\u7684\u4e89\u7528\u6210\u672c\u3002"}),"\n",(0,i.jsx)(n.h3,{id:"disruptor\u7684\u89e3\u51b3\u601d\u8def",children:"Disruptor\u7684\u89e3\u51b3\u601d\u8def"}),"\n",(0,i.jsx)(n.h4,{id:"\u6838\u5fc3\u8bbe\u8ba1",children:"\u6838\u5fc3\u8bbe\u8ba1"}),"\n",(0,i.jsxs)(n.p,{children:["\u5728\u8bd5\u56fe\u89e3\u51b3\u4e0a\u8ff0\u95ee\u9898\u65f6\uff0c\u901a\u8fc7\u4e25\u683c\u5206\u79bb\u6211\u4eec\u8ba4\u4e3a\u5728\u961f\u5217\u4e2d\u6df7\u5408\u7684\u5173\u6ce8\u70b9\uff0c\u51fa\u73b0\u4e86\u4e00\u79cd\u8bbe\u8ba1\u3002 \u8fd9\u79cd\u65b9\u6cd5",(0,i.jsx)(n.strong,{children:"\u786e\u4fdd\u4efb\u4f55\u6570\u636e\u53ea\u80fd\u7531\u4e00\u4e2a\u7ebf\u7a0b\u62e5\u6709\u5199\u8bbf\u95ee\u6743\u9650\uff0c\u4ece\u800c\u6d88\u9664\u4e86\u5199\u4e89\u7528\u3002 \u8fd9\u4e2a\u8bbe\u8ba1\u88ab\u79f0\u4e3a\u201cDisruptor\u201d\u3002"})," \u5b83\u4e4b\u6240\u4ee5\u88ab\u547d\u540d\u4e3a\u201cDisruptor \u201d\uff0c\u662f\u56e0\u4e3a\u5b83\u5728\u5904\u7406\u4f9d\u8d56\u5173\u7cfb\u56fe\u7684\u5143\u7d20\u4e0a\u4e0eJava 7\u4e2d\u5f15\u5165\u7684\u652f\u6301Fork-Join\u7684\u201cPhasers\u201d\u6982\u5ff5\u6709\u76f8\u4f3c\u4e4b\u5904\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"disruptor"}),"\u65e8\u5728\u89e3\u51b3\u4e0a\u8ff0\u5e76\u53d1\u9762\u4e34\u7684\u590d\u6742\u6027\u4e2d\u7684\u6240\u6709\u95ee\u9898\uff0c\u4ee5\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u5185\u5b58\u5206\u914d\u7684\u6548\u7387\uff0c\u5e76\u4ee5\u5bf9\u73b0\u4ee3\u786c\u4ef6\u8fdb\u884c\u6700\u4f73\u4f18\u5316\u7684\u65b9\u5f0f\u8fdb\u884c\u64cd\u4f5c\u3002",(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"disruptor"}),"\u673a\u5236\u7684\u6838\u5fc3\u662f\u4e00\u4e2a\u9884\u5206\u914d\u7684\u6709\u754c\u6570\u636e\u7ed3\u6784\uff0c\u5373\u73af\u5f62\u7f13\u51b2\u533a\u3002 \u6570\u636e\u901a\u8fc7\u4e00\u4e2a\u6216\u591a\u4e2a\u751f\u4ea7\u8005\u6dfb\u52a0\u5230\u73af\u5f62\u7f13\u51b2\u533a\uff0c\u5e76\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u6d88\u8d39\u8005\u8fdb\u884c\u5904\u7406\u3002"]})]}),"\n",(0,i.jsx)(n.h4,{id:"\u5185\u5b58\u5206\u914d",children:"\u5185\u5b58\u5206\u914d"}),"\n",(0,i.jsx)(n.p,{children:"\u73af\u5f62\u7f13\u51b2\u533a\u7684\u6240\u6709\u5185\u5b58\u5728\u542f\u52a8\u65f6\u90fd\u8fdb\u884c\u4e86\u9884\u5206\u914d\u3002\u73af\u5f62\u7f13\u51b2\u533a\u53ef\u4ee5\u5b58\u50a8\u6307\u5411\u6761\u76ee\u7684\u6307\u9488\u6570\u7ec4\uff0c\u8fd9\u4e9b\u6761\u76ee\u901a\u5e38\u4e0d\u662f\u4f20\u9012\u7684\u6570\u636e\u672c\u8eab\uff0c\u800c\u662f\u7528\u4e8e\u5bb9\u7eb3\u6570\u636e\u7684\u5bb9\u5668 \u3002\u8fd9\u79cd\u6761\u76ee\u7684\u9884\u5206\u914d\u6d88\u9664\u4e86\u652f\u6301\u5783\u573e\u56de\u6536\u7684\u8bed\u8a00\u4e2d\u7684\u95ee\u9898\uff0c\u56e0\u4e3a\u6761\u76ee\u5c06\u88ab\u91cd\u65b0\u4f7f\u7528\u5e76\u5728Disruptor\u5b9e\u4f8b\u7684\u751f\u547d\u5468\u671f\u5185\u4e00\u76f4\u5b58\u5728\u3002 \u8fd9\u4e9b\u6761\u76ee\u7684\u5185\u5b58\u5728\u540c\u4e00\u65f6\u95f4\u5206\u914d\uff0c\u5e76\u4e14\u5f88\u53ef\u80fd\u5728\u4e3b\u5185\u5b58\u4e2d\u8fde\u7eed\u5e03\u5c40\uff0c\u4ece\u800c\u652f\u6301\u7f13\u5b58\u8de8\u5ea6\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u5728\u50cfJava\u8fd9\u6837\u7684\u6258\u7ba1\u8fd0\u884c\u65f6\u73af\u5883\u4e2d\u5f00\u53d1\u4f4e\u5ef6\u8fdf\u7cfb\u7edf\u65f6\uff0c\u5783\u573e\u6536\u96c6\u53ef\u80fd\u4f1a\u6210\u4e3a\u4e00\u4e2a\u95ee\u9898\u3002\u5206\u914d\u7684\u5185\u5b58\u8d8a\u591a\uff0c\u5783\u573e\u6536\u96c6\u5668 \u7684\u8d1f\u62c5\u5c31\u8d8a\u5927\u3002 \u5f53\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f\u975e\u5e38\u77ed\u6682\u6216\u8005\u51e0\u4e4e\u6c38\u4e45\u5b58\u5728\u65f6\uff0c\u5783\u573e\u6536\u96c6\u5668\u7684\u5de5\u4f5c\u6548\u679c\u6700\u597d\u3002\u73af\u5f62\u7f13\u51b2\u533a\u4e2d\u7684\u6761\u76ee\u9884 \u5206\u914d\u610f\u5473\u7740\u5728\u5783\u573e\u6536\u96c6\u5668\u770b\u6765\u5b83\u662f\u6c38\u4e45\u5b58\u5728\u7684\uff0c\u56e0\u6b64\u5bf9\u5783\u573e\u6536\u96c6\u5668\u6765\u8bf4\u51e0\u4e4e\u6ca1\u6709\u8d1f\u62c5\u3002"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u5728\u9ad8\u8d1f\u8f7d\u7684\u961f\u5217\u7cfb\u7edf\u4e0b\uff0c\u53ef\u80fd\u4f1a\u51fa\u73b0\u79ef\u538b\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u5904\u7406\u901f\u7387\u964d\u4f4e\uff0c\u5e76\u4e14\u5bfc\u81f4\u5206\u914d\u7684\u5bf9\u8c61\u5b58\u6d3b\u65f6\u95f4\u8d85\u8fc7\u5e94\u6709\u7684\u65f6\u95f4\uff0c\u4ece\u800c \u88ab\u5206\u4ee3\u5783\u573e\u6536\u96c6\u5668\u63d0\u5347\u5230\u5e74\u8f7b\u4ee3\u4e4b\u5916\u3002 \u8fd9\u6709\u4e24\u4e2a\u5f71\u54cd:\u9996\u5148\uff0c\u5bf9\u8c61\u5fc5\u987b\u5728\u4ee3\u4e4b\u95f4\u8fdb\u884c\u590d\u5236\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u5ef6\u8fdf\u6296\u52a8; \u5176\u6b21\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u5fc5\u987b\u4ece\u65e7\u4ee3\u4e2d\u8fdb\u884c\u6536\u96c6\uff0c\u8fd9\u901a\u5e38\u662f\u4e00\u79cd\u66f4\u6602\u8d35\u7684\u64cd\u4f5c\uff0c\u5e76\u589e\u52a0\u4e86\u5f53\u788e\u7247\u5316\u7684\u5185\u5b58\u7a7a\u95f4\u9700\u8981\u538b\u7f29\u65f6\u51fa\u73b0\u201c\u505c\u6b62 \u4e16\u754c\u201d\u6682\u505c\u7684\u53ef\u80fd\u6027\u3002 \u5728\u5927\u5185\u5b58\u5806\u4e2d\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u6bcfGB\u7684\u6682\u505c\u65f6\u95f4\u957f\u8fbe\u51e0\u79d2\u949f\u3002"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"\u5173\u6ce8\u70b9\u5206\u79bb",children:"\u5173\u6ce8\u70b9\u5206\u79bb"}),"\n",(0,i.jsxs)(n.p,{children:["\u4f20\u7edf\u7684\u961f\u5217",(0,i.jsx)(n.code,{children:"queues"}),"\u5b9e\u73b0\u90fd\u5c06\u4ee5\u4e0b\u9762\u7684\u51e0\u4e2a\u5173\u6ce8\u70b9\u6df7\u6dc6\u5728\u4e86\u4e00\u8d77\uff1a"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Storage of items being exchanged\uff1a\u5b58\u50a8\u6b63\u5728\u88abbeing exchanged\u7684items(--\u5c31\u662f\u51fa\u961f\u5165\u961f\u7684\u6570\u636e)"}),"\n",(0,i.jsx)(n.li,{children:"Coordination of producers claiming the next sequence for exchange\uff1a\u751f\u4ea7\u8005\u534f\u8c03\u58f0\u660e\u4e0b\u4e00\u4e2a\u8981\u4ea4\u6362\u7684\u5e8f\u5217"}),"\n",(0,i.jsx)(n.li,{children:"Coordination of consumers being notified that a new item is available\uff1a\u6d88\u8d39\u8005\u534f\u8c03\u88ab\u901a\u77e5\u65b0\u9879\u76ee\u53ef\u7528"}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"\u5b58\u50a8item"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u5728\u4f7f\u7528\u81ea\u5e26\u5783\u573e\u56de\u6536\u7684\u7f16\u7a0b\u8bed\u8a00\u65f6\uff0c\u8fc7\u591a\u7684\u5185\u5b58\u5206\u914d\u53ef\u80fd\u4f1a\u6210\u4e3a\u95ee\u9898\u3002 \u56e0\u6b64\uff0c\u6b63\u5982\u6211\u4eec\u6240\u63cf\u8ff0\u7684\uff0c\u57fa\u4e8e\u94fe\u8868\u7684\u961f\u5217\u4e0d\u662f\u4e00\u4e2a\u597d\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u5176\u5728\u5165\u961f\u65f6\u4f1a\u4e0d\u65ad\u7684\u521b\u5efa\u65b0\u7684\u5bf9\u8c61\u7136\u540e\u5728\u6d88\u8d39\u5b8c\u4e4b\u540e\u5bf9\u8c61\u53c8\u9700\u8981\u88ab\u56de\u6536\u3002 \u5982\u679c\u53ef\u4ee5\u9884\u5148\u5206\u914d\u7528\u4e8e\u5904\u7406\u9636\u6bb5\u4e4b\u95f4\u6570\u636e\u4ea4\u6362\u7684\u6574\u4e2a\u5b58\u50a8\u7a7a\u95f4\uff0c\u5c31\u53ef\u4ee5\u5c06\u5783\u573e\u56de\u6536\u6700\u5c0f\u5316\u3002 \u6b64\u5916\uff0c\u5982\u679c\u53ef\u4ee5\u4ee5\u7edf\u4e00\u7684\u5757\u6267\u884c\u6b64\u5206\u914d\uff0c\u5219\u5bf9\u8be5\u6570\u636e\u7684\u904d\u5386\u5c06\u4ee5\u975e\u5e38\u53cb\u597d\u7684\u65b9\u5f0f\u8fdb\u884c\uff0c\u4ee5\u9002\u5e94\u73b0\u4ee3\u5904\u7406\u5668\u6240\u91c7\u7528\u7684\u7f13 \u5b58\u7b56\u7565\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["\u6ee1\u8db3\u6b64\u8981\u6c42\u7684\u6570\u636e\u7ed3\u6784\u662f\u4e00\u4e2a\u9884\u586b\u5145\u4e86\u6240\u6709\u63d2\u69fd\u7684\u6570\u7ec4\u3002 \u5728\u521b\u5efa\u73af\u5f62\u7f13\u51b2\u533a\u65f6\uff0cDisruptor\u5229\u7528\u62bd\u8c61\u5de5\u5382\u6a21\u5f0f\u9884\u5148\u5206\u914d\u6761\u76ee\u3002 \u5f53\u4e00\u4e2a\u6761\u76ee\u88ab\u58f0\u660e\u65f6\uff0c\u751f\u4ea7\u8005\u53ef\u4ee5\u5c06\u5176\u6570\u636e\u590d\u5236\u5230\u9884\u5148\u5206\u914d\u7684\u7ed3\u6784\u4e2d\u3002\u5728\u5927\u591a\u6570\u5904\u7406\u5668\u4e0a\uff0c\u8ba1\u7b97\u5e8f\u5217\u53f7\u7684\u4f59\u6570\u6709\u5f88\u9ad8\u7684\u6210\u672c\uff0c\u8fd9\u51b3\u5b9a\u4e86\u73af\u4e2d\u7684\u69fd\u4f4d\u3002 \u901a\u8fc7\u5c06\u73af\u7684\u5927\u5c0f\u8bbe\u7f6e\u4e3a2\u7684\u5e42\uff0c\u53ef\u4ee5\u5927\u5927\u964d\u4f4e\u8fd9\u4e2a\u6210\u672c\u3002 \u53ef\u4ee5\u4f7f\u7528\u5927\u5c0f\u51cf\u4e00\u7684\u4f4d\u63a9\u7801\u6765\u9ad8\u6548\u5730\u6267\u884c\u4f59\u6570\u8fd0\u7b97(--",(0,i.jsx)(n.em,{children:"\u8fd9\u4e2a\u505a\u6cd5JDK\u4e2dHashMap\u7b49\u53d6\u6a21\u7684\u8fd0\u7b97\u4e5f\u662f\u8fd9\u6837\u8bbe\u8ba1\u7684"}),")\u3002"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["Disruptor \u7684\u6838\u5fc3\u6570\u636e\u7ed3\u6784\u662f\u4e00\u4e2a ",(0,i.jsx)(n.strong,{children:"Ring Buffer"}),"\uff0c\u5b83\u662f\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u73af\u5f62\u6570\u7ec4\uff0c\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u90fd\u5728\u8fd9\u4e2a\u6570\u7ec4\u4e0a\u8fdb\u884c\u64cd\u4f5c\u3002\u73af\u5f62\u6570\u7ec4\u7684\u7279\u6027\u610f\u5473\u7740\u4e00\u65e6\u5206\u914d\u4e86\u56fa\u5b9a\u5927\u5c0f\u7684\u6570\u7ec4\u5185\u5b58\uff0c\u5c31\u4e0d\u4f1a\u518d\u53d1\u751f\u5185\u5b58\u5206\u914d\u64cd\u4f5c\uff0c\u8fd9\u907f\u514d\u4e86\u5185\u5b58\u5206\u914d\u7684\u5f00\u9500\u548c GC\uff08Garbage Collection\uff09\u5e26\u6765\u7684\u6296\u52a8\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"\u751f\u4ea7\u8005\u63d2\u5165\u6570\u636e"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u6709\u754c\u961f\u5217\u5728\u961f\u5217\u7684\u5934\u90e8\u548c\u5c3e\u90e8\u4f1a\u9047\u5230\u4e89\u7528\u7684\u95ee\u9898\uff0c \u73af\u5f62\u7f13\u51b2\u533a\u6570\u636e\u7ed3\u6784\u4e0d\u53d7\u8fd9\u79cd\u4e89\u7528\u548c\u5e76\u53d1\u539f\u8bed\u5373synchronize\u540c\u6b65\u7684\u5f71\u54cd\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u95ee\u9898\u5df2\u7ecf\u88ab\u62c6\u5206\u6210\u4e86\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u5c4f\u969c\uff0c\u901a\u8fc7\u8fd9\u4e9b\u5c4f\u969c\u5fc5\u987b\u8bbf\u95ee\u73af\u5f62\u7f13\u51b2\u533a\u3002 \u8fd9\u4e9b\u5c4f\u969c\u7684\u903b\u8f91\u5982\u4e0b\uff1a"}),"\n",(0,i.jsx)(n.p,{children:"\u5728Disruptor\u7684\u5927\u591a\u6570\u5e38\u89c1\u7528\u6cd5\u4e2d\uff0c\u901a\u5e38\u53ea\u6709\u4e00\u4e2a\u751f\u4ea7\u8005\u3002 \u5178\u578b\u7684\u751f\u4ea7\u8005\u5305\u62ec\u6587\u4ef6\u8bfb\u53d6\u5668\u6216\u7f51\u7edc\u76d1\u542c\u5668\u3002 \u5728\u53ea\u6709\u4e00\u4e2a\u751f\u4ea7\u8005\u7684\u60c5\u51b5\u4e0b\uff0c\u5e8f\u5217/\u6761\u76ee\u5206\u914d\u6ca1\u6709\u4e89\u7528\u3002"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u5728\u66f4\u4e0d\u5bfb\u5e38\u7684\u7528\u6cd5\u4e2d\uff0c\u5982\u679c\u6709\u591a\u4e2a\u751f\u4ea7\u8005\uff0c\u5b83\u4eec\u5c06\u7ade\u4e89\u6765\u4e89\u53d6\u73af\u5f62\u7f13\u51b2\u533a\u4e2d\u7684\u4e0b\u4e00\u4e2a\u6761\u76ee\u3002 \u53ef\u4ee5\u901a\u8fc7\u5bf9\u8be5\u69fd\u4f4d\u7684\u5e8f\u5217\u53f7\u8fdb \u884c\u7b80\u5355\u7684CAS\u64cd\u4f5c\u6765\u7ba1\u7406\u5bf9\u4e0b\u4e00\u4e2a\u53ef\u7528\u6761\u76ee\u7684\u4e89\u7528\u3002"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\u4e00\u65e6\u751f\u4ea7\u8005\u5c06\u76f8\u5173\u6570\u636e\u590d\u5236\u5230\u6240\u58f0\u660e\u7684\u6761\u76ee\u4e2d\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u63d0\u4ea4\u5e8f\u5217\u5c06\u5176\u516c\u5f00\u7ed9\u6d88\u8d39\u8005\u3002 \u8fd9\u53ef\u4ee5\u901a\u8fc7\u7b80\u5355\u7684\u5fd9\u7b49\u5f85(",(0,i.jsx)(n.code,{children:"busy spin"}),")\u800c\u65e0\u9700\u4f7f\u7528CAS\u6765\u5b8c\u6210\uff0c\u76f4\u5230\u5176\u4ed6\u751f\u4ea7\u8005\u5728\u81ea\u5df1\u7684\u63d0\u4ea4\u4e2d\u8fbe\u5230\u8be5\u5e8f\u5217\u4e3a\u6b62\u3002 \u7136\u540e\uff0c\u8be5\u751f\u4ea7\u8005\u53ef\u4ee5\u63a8\u8fdb\u5149\u6807\uff0c\u8868\u793a\u4e0b\u4e00\u4e2a\u53ef\u7528\u7684\u6761\u76ee\u4f9b\u6d88\u8d39\u3002 \u751f\u4ea7\u8005\u53ef\u4ee5\u901a\u8fc7\u5c06\u6d88\u8d39\u8005\u7684\u5e8f\u5217\u4f5c\u4e3a\u7b80\u5355\u7684\u8bfb\u64cd\u4f5c\u6765\u907f\u514d\u73af\u5f62\u7f13\u51b2\u533a\u7684\u5305\u88c5\u3002\u5728\u5199\u5165\u73af\u5f62\u7f13\u51b2\u533a\u4e4b\u524d\uff0c\u4ed6\u4eec\u53ef\u4ee5\u8ffd\u8e2a\u6d88\u8d39\u8005\u7684\u5e8f\u5217\u3002"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"\u6d88\u8d39\u8005\u83b7\u53d6\u6570\u636e"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u6d88\u8d39\u8005\u5728\u8bfb\u53d6\u6761\u76ee\u4e4b\u524d\u4f1a\u7b49\u5f85\u73af\u5f62\u7f13\u51b2\u533a\u4e2d\u7684\u5e8f\u5217\u53ef\u7528\u3002 \u5728\u7b49\u5f85\u65f6\u53ef\u4ee5\u91c7\u7528\u5404\u79cd\u7b56\u7565\uff1a"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["\u5982\u679cCPU\u8d44\u6e90\u5f88\u5b9d\u8d35\uff0c\u4ed6\u4eec\u53ef\u4ee5\u5728\u9501\u5185\u7b49\u5f85\u6761\u4ef6\u53d8\u91cf\u7684\u4fe1\u53f7\u3002\u8be5\u4fe1\u53f7\u7531\u751f\u4ea7\u8005\u53d1\u51fa\u3002 ",(0,i.jsx)(n.em,{children:"\u663e\u7136\uff0c\u8fd9\u662f\u4e00\u4e2a\u4e89\u7528\u70b9\uff0c\u53ea\u6709\u5728CPU\u8d44\u6e90\u6bd4\u5ef6\u8fdf\u6216\u541e\u5410\u91cf\u66f4\u91cd\u8981\u65f6\u624d\u4f7f\u7528\u3002"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"\u6d88\u8d39\u8005\u8fd8\u53ef\u4ee5\u5faa\u73af\u68c0\u67e5\u5149\u6807\uff0c\u8be5\u5149\u6807\u8868\u793a\u73af\u5f62\u7f13\u51b2\u533a\u4e2d\u5f53\u524d\u53ef\u7528\u7684\u5e8f\u5217\u3002 \u901a\u8fc7\u5728CPU\u8d44\u6e90\u4e0e\u5ef6\u8fdf\u4e4b\u95f4 \u8fdb\u884c\u6743\u8861\uff0c\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u6216\u4e0d\u4f7f\u7528\u7ebf\u7a0b\u8ba9\u6b65\u6765\u5b8c\u6210\u6b64\u64cd\u4f5c\u3002"}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["\u5982\u679c\u4e0d\u4f7f\u7528\u9501\u548c\u6761\u4ef6\u53d8\u91cf\uff0c\u8fd9\u79cd\u65b9\u6cd5\u7684\u6269\u5c55\u6027\u975e\u5e38\u597d\uff0c\u56e0\u4e3a\u6211\u4eec\u5df2\u7ecf\u6d88\u9664\u4e86\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u4e4b\u95f4\u7684\u4e89\u7528\u4f9d\u8d56\u3002 \u65e0\u9501\u591a\u751f\u4ea7\u8005-\u591a\u6d88\u8d39\u8005\u961f\u5217\u786e\u5b9e\u5b58\u5728\uff0c\u4f46\u5b83\u4eec\u9700\u8981\u5bf9\u5934\u90e8\u3001\u5c3e\u90e8\u548c\u5927\u5c0f\u8ba1\u6570\u5668\u8fdb\u884c\u591a\u4e2aCAS\u64cd\u4f5c\u3002 Disruptor\u4e0d\u4f1a\u906d\u53d7\u8fd9\u79cdCAS\u4e89\u7528\uff08Disruptor\u4e3a\u4ec0\u4e48\u6ca1\u6709\u8fd9\u79cdCAS\u4e89\u7528\uff1a",(0,i.jsxs)(n.em,{children:["1.\u901a\u8fc7\u5e8f\u5217",(0,i.jsx)(n.code,{children:"sequence"}),"\u7ba1\u7406\u7b80\u5316\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7684\u64cd\u4f5c\uff0c\u5e76\u4f7f\u5176\u539f\u5b50\u5316\uff0c2.\u4f7f\u7528\u5185\u5b58\u5c4f\u969c\u548c\u7f13\u5b58\u884c\u586b\u5145\u6765\u51cf\u5c11\u4f2a\u5171\u4eab\u548c\u4e89\u7528\uff0c3.\u6279\u91cf\u9884\u5206\u914d\u7a7a\u95f4\u548c\u6279\u91cf\u6d88\u8d39\u7b56\u7565\u51cf\u5c11 CAS \u64cd\u4f5c\u7684\u9891\u7387\u548c\u4e89\u7528\u3002"]}),"\uff09\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u6392\u5e8f"}),"\n",(0,i.jsx)(n.strong,{children:"\u6392\u5e8f\u662fDisruptor\u4e2d\u7ba1\u7406\u5e76\u53d1\u7684\u6838\u5fc3\u6982\u5ff5"}),"\u3002\u6bcf\u4e2a\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u90fd\u6309\u7167\u4e25\u683c\u7684\u6392\u5e8f\u6982\u5ff5\u4e0e\u73af\u5f62\u7f13\u51b2\u533a\u8fdb\u884c\u4ea4\u4e92\u3002 \u5f53\u5728\u73af\u5f62\u7f13\u51b2\u533a\u4e2d\u58f0\u660e\u4e00\u4e2a\u6761\u76ee\u65f6\uff0c\u751f\u4ea7\u8005\u4f1a\u6309\u987a\u5e8f\u58f0\u660e\u4e0b\u4e00\u4e2a\u63d2\u69fd\u3002 \u5728\u53ea\u6709\u4e00\u4e2a\u751f\u4ea7\u8005\u7684\u60c5\u51b5\u4e0b\uff0c\u4e0b\u4e00\u4e2a\u53ef\u7528\u63d2\u69fd\u7684\u5e8f\u5217\u53ef\u4ee5\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u8ba1\u6570\u5668\uff0c\u800c\u5728\u6709\u591a\u4e2a\u751f\u4ea7\u8005\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4f7f\u7528CAS\u64cd\u4f5c\u66f4\u65b0\u7684\u539f\u5b50\u8ba1\u6570\u5668\u3002 \u4e00\u65e6\u58f0\u660e\u4e86\u5e8f\u5217\u503c",(0,i.jsx)(n.code,{children:"sequence"}),"\uff0c\u8be5\u73af\u5f62\u7f13\u51b2\u533a\u4e2d\u7684\u6761\u76ee\u73b0\u5728\u53ef\u4ee5\u7531\u58f0\u660e\u7684\u751f\u4ea7\u8005\u8fdb\u884c\u5199\u5165\u3002 \u5f53\u751f\u4ea7\u8005\u5b8c\u6210\u66f4\u65b0\u6761\u76ee\u540e\uff0c\u5b83\u53ef\u4ee5\u901a\u8fc7\u66f4\u65b0\u8868\u793a\u6d88\u8d39\u8005\u53ef\u7528\u7684\u6700\u65b0\u6761\u76ee\u7684\u5355\u72ec\u8ba1\u6570\u5668\u6765\u63d0\u4ea4\u66f4\u6539\u3002 \u73af\u5f62\u7f13\u51b2\u533a\u7684\u6e38\u6807\u53ef\u4ee5\u7531\u751f\u4ea7\u8005\u4f7f\u7528\u5185\u5b58\u5c4f\u969c\u8fdb\u884c\u81ea\u65cb\u8bfb\u5199\uff0c\u800c\u65e0\u9700\u8fdb\u884cCAS\u64cd\u4f5c\uff0c \u5982\u4e0b\u6240\u793a\u3002"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"long expectedSequence = claimedSequence \u2013 1;\nwhile (cursor != expectedSequence){\n// busy spin\n}\ncursor = claimedSequence;\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u6d88\u8d39\u8005\u901a\u8fc7\u4f7f\u7528\u5185\u5b58\u5c4f\u969c\u6765\u8bfb\u53d6\u6e38\u6807\u6765\u7b49\u5f85\u7ed9\u5b9a\u5e8f\u5217\u53ef\u7528\u3002 \u4e00\u65e6\u6e38\u6807\u88ab\u66f4\u65b0\uff0c\u5185\u5b58\u5c4f\u969c\u786e\u4fdd\u73af\u5f62\u7f13\u51b2\u533a\u4e2d\u6761\u76ee\u7684\u66f4\u6539\u5bf9\u7b49 \u5f85\u6e38\u6807\u524d\u8fdb\u7684\u6d88\u8d39\u8005\u53ef\u89c1\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u6d88\u8d39\u8005\u6bcf\u4e2a\u90fd\u5305\u542b\u81ea\u5df1\u7684\u5e8f\u5217\uff0c\u4ed6\u4eec\u5728\u5904\u7406\u73af\u5f62\u7f13\u51b2\u533a\u4e2d\u7684\u6761\u76ee\u65f6\u66f4\u65b0\u8be5\u5e8f\u5217\u3002 \u8fd9\u4e9b\u6d88\u8d39\u8005\u5e8f\u5217\u5141\u8bb8\u751f\u4ea7\u8005\u8ddf\u8e2a\u6d88 \u8d39\u8005\uff0c\u4ee5\u9632\u6b62\u73af\u5f62\u7f13\u51b2\u533a\u7684\u5305\u88c5\u3002 \u6d88\u8d39\u8005\u5e8f\u5217\u8fd8\u5141\u8bb8\u6d88\u8d39\u8005\u4ee5\u6709\u5e8f\u7684\u65b9\u5f0f\u534f\u8c03\u5bf9\u540c\u4e00\u6761\u76ee\u7684\u5de5\u4f5c\u3002"}),"\n",(0,i.jsx)(n.p,{children:"\u5728\u53ea\u6709\u4e00\u4e2a\u751f\u4ea7\u8005\u7684\u60c5\u51b5\u4e0b\uff0c\u65e0\u8bba\u6d88\u8d39\u8005\u56fe\u7684\u590d\u6742\u6027\u5982\u4f55\uff0c\u90fd\u4e0d\u9700\u8981\u9501\u5b9a\u6216CAS\u64cd\u4f5c\u3002 \u6574\u4e2a\u5e76\u53d1\u534f\u8c03\u53ef\u4ee5\u4ec5\u901a\u8fc7\u5bf9 \u8ba8\u8bba\u7684\u5e8f\u5217\u8fdb\u884c\u5185\u5b58\u5c4f\u969c\u6765\u5b9e\u73b0\u3002"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u6279\u5904\u7406\u79fb\u52a8\u6e38\u6807"}),"\n\u5f53\u6d88\u8d39\u8005\u5728\u73af\u5f62\u7f13\u51b2\u533a\u4e2d\u7b49\u5f85\u524d\u8fdb\u7684\u6e38\u6807\u5e8f\u5217\u65f6\uff0c\u4f1a\u51fa\u73b0\u4e00\u79cd\u4e0e\u961f\u5217\u4e0d\u53ef\u80fd\u7684\u6709\u8da3\u673a\u4f1a\u3002 \u5982\u679c\u6d88\u8d39\u8005\u53d1\u73b0\u73af\u5f62\u7f13\u51b2\u533a\u7684 \u6e38\u6807\u81ea\u4e0a\u6b21\u4ee5\u6765\u5df2\u7ecf\u524d\u8fdb\u4e86\u591a\u4e2a\u6b65\u9aa4\u3002\u68c0\u67e5\u5b83\u662f\u5426\u80fd\u591f\u5728\u4e0d\u6d89\u53ca\u5e76\u53d1\u673a\u5236\u7684\u60c5\u51b5\u4e0b\u5904\u7406\u8be5\u5e8f\u5217\u3002 \u8fd9\u5bfc\u81f4\u6ede\u540e\u7684\u6d88\u8d39\u8005\u5728\u751f\u4ea7\u8005\u7a81\u7136\u52a0\u901f\u65f6\u8fc5\u901f\u6062\u590d\u6b65\u4f10\uff0c\u4ece\u800c\u5e73\u8861\u7cfb\u7edf\u3002\u8fd9\u79cd\u6279\u5904\u7406\u65b9\u5f0f\u65e2\u589e\u52a0\u4e86\u541e\u5410\u91cf\uff0c\u53c8\u51cf\u5c11\u4e86\u548c\u5e73\u6ed1\u4e86\u5ef6\u8fdf\u3002 \u6839\u636e\u6211\u4eec\u7684\u89c2\u5bdf\uff0c\u8fd9\u79cd\u6548\u679c\u5bfc\u81f4\u5ef6\u8fdf\u7684\u65f6\u95f4\u51e0\u4e4e\u4fdd\u6301\u6052 \u5b9a\uff0c\u4e0d\u53d7\u8d1f\u8f7d\u7684\u5f71\u54cd\uff0c\u76f4\u5230\u5185\u5b58\u5b50\u7cfb\u7edf\u9971\u548c\uff0c\u7136\u540e\u6839\u636eLittle\u5b9a\u5f8b\uff08",(0,i.jsx)(n.strong,{children:"\u7cfb\u7edf\u4e2d\u7269\u4f53\u7684\u5e73\u5747\u6570\u91cf\u7b49\u4e8e\u7269\u4f53\u79bb\u5f00\u7cfb\u7edf\u7684\u5e73\u5747\u901f\u7387\u548c\u7269\u4f53\u5728\u7cfb\u7edf\u4e2d\u5e73\u5747\u505c\u7559\u65f6\u95f4\u7684\u4e58\u79ef"}),"\uff09\u5448\u7ebf\u6027\u589e\u957f\u3002 \u8fd9\u4e0e\u6211\u4eec\u89c2\u5bdf\u5230\u7684\u961f\u5217\u8d1f\u8f7d\u589e\u52a0\u65f6\u5ef6\u8fdf\u7684\u201c J\u201d\u66f2\u7ebf\u6548\u5e94\u975e\u5e38\u4e0d\u540c\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u4f9d\u8d56\u62d3\u6251"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u5982\u679c\u4f7f\u7528\u5e38\u89c4\u961f\u5217\uff0c\u56e0\u4e3a\u961f\u5217\u8868\u793a\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u4e4b\u95f4\u7b80\u5355\u7684\u4e00\u6b65\u6d41\u6c34\u7ebf\u4f9d\u8d56\u5173\u7cfb\uff0c\u800c \u5982\u679c\u6d88\u8d39\u8005\u5f62\u6210\u94fe\u5f0f\u6216\u56fe\u72b6\u7684\u4f9d\u8d56\u7ed3\u6784\uff0c\u5219\u9700\u8981\u5728\u56fe\u7684\u6bcf\u4e2a\u9636\u6bb5\u4e4b\u95f4\u4f7f\u7528\u961f\u5217\uff0c\u8fd9\u4f1a\u5728\u4f9d\u8d56\u9636\u6bb5\u7684\u62d3\u6251\u56fe\u4e2d\u591a\u6b21\u4ea7\u751f\u56fa\u5b9a\u7684\u961f\u5217\u6210\u672c\u3002 \u5728\u8bbe\u8ba1LMAX\u91d1\u878d\u4ea4\u6613\u6240\u65f6\uff0c\u6211\u4eec\u7684\u5206\u6790\u663e\u793a\uff0c\u91c7\u7528\u57fa\u4e8e\u961f\u5217\u7684\u65b9\u6cd5\u4f1a\u5bfc\u81f4\u961f\u5217\u6210\u672c\u5360\u636e\u5904\u7406\u4ea4\u6613\u7684\u603b\u6267\u884c\u6210\u672c\u7684\u4e3b\u5bfc\u5730\u4f4d\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["\u7531\u4e8e\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7684\u5173\u6ce8\u70b9\u5728Disruptor\u6a21\u5f0f\u4e2d\u662f\u5206\u79bb\u7684\uff0c\u56e0\u6b64\u53ef\u4ee5",(0,i.jsx)(n.strong,{children:"\u5728\u6838\u5fc3\u4e2d\u4ec5\u4f7f\u7528\u4e00\u4e2a\u73af\u5f62\u7f13\u51b2\u533a\u6765\u8868\u793a\u6d88\u8d39\u8005\u4e4b \u95f4\u7684\u590d\u6742\u4f9d\u8d56\u5173\u7cfb\u56fe"}),"\uff0c",(0,i.jsx)(n.em,{children:"\uff08\u6211\u611f\u89c9\u8fd9\u91cc\u662f\u6700\u96be\u7406\u89e3\u7684\uff0c\u5c31\u662f\u5982\u4f55\u7528\u4e00\u4e2a\u961f\u5217\u6765\u5904\u7406\u590d\u6742\u4f9d\u8d56\u7684\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\uff09"}),"\u3002 \u8fd9\u6837\u53ef\u4ee5\u5927\u5927\u964d\u4f4e\u6267\u884c\u7684\u56fa\u5b9a\u6210\u672c\uff0c\u4ece\u800c\u63d0\u9ad8\u541e\u5410\u91cf\uff0c\u540c\u65f6\u964d\u4f4e\u5ef6\u8fdf\u3002"]}),"\n",(0,i.jsx)(n.p,{children:"\u4e00\u4e2a\u5355\u72ec\u7684\u73af\u5f62\u7f13\u51b2\u533a\u53ef\u4ee5\u7528\u6765\u5b58\u50a8\u5177\u6709\u590d\u6742\u7ed3\u6784\u7684\u6761\u76ee\uff0c\u8868\u793a\u6574\u4e2a\u5de5\u4f5c\u6d41\u7a0b\u5728\u4e00\u4e2a\u8fde\u8d2f\u7684\u5730\u65b9\u3002 \u5728\u8bbe\u8ba1\u8fd9\u6837\u7684\u7ed3\u6784\u65f6\u5fc5\u987b\u6ce8\u610f\uff0c\u4ee5\u4fbf\u72ec\u7acb\u6d88\u8d39\u8005\u5199\u5165\u7684\u72b6\u6001\u4e0d\u4f1a\u5bfc\u81f4\u7f13\u5b58\u884c\u7684\u4f2a\u5171\u4eab\u3002"}),"\n",(0,i.jsx)(n.h2,{id:"disruptor\u7684\u8bbe\u8ba1\u5b9e\u73b0",children:"Disruptor\u7684\u8bbe\u8ba1\u5b9e\u73b0"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://github.com/LMAX-Exchange/disruptor",children:"LMAX Disruptor\u6e90\u7801"})}),"\n",(0,i.jsx)(n.p,{children:"\u4e0b\u9762\u7684\u6e90\u7801\u90fd\u57fa\u4e8e\u6700\u65b0\u7a33\u5b9a\u7248\u76844.0.0"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-xml",children:"\x3c!-- https://mvnrepository.com/artifact/com.lmax/disruptor --\x3e\n<dependency>\n    <groupId>com.lmax</groupId>\n    <artifactId>disruptor</artifactId>\n    <version>4.0.0</version>\n</dependency>\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["\u5e76\u4e14\u4e0b\u9762\u7684\u4ee3\u7801\u5728\u6211\u7684github fork \u5206\u652f\u4e2d\u53ef\u4ee5\u770b\u5230\u4ee3\u7801--",(0,i.jsx)(n.a,{href:"https://github.com/Swagger-Ranger/disruptor.git",children:"disruptor\u6e90\u7801\u89e3\u6790"}),"\uff0c",(0,i.jsx)(n.code,{children:"notes-liufei"}),"\u5206\u652f\u5c31\u662f\u89e3\u6790\u7684\u4ee3\u7801\u3002"]})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u6211\u611f\u89c9Kafka \u548c Disruptor \u4e24\u8005\u6709\u5171\u540c\u4e4b\u5904\uff0c\u5176\u90fd\u7528\u4e8e\u9ad8\u6027\u80fd\u7684\u6570\u636e\u5904\u7406\uff0c\u5728\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u53ef\u4ee5\u628a Kafka \u770b\u4f5c\u662f\u4e00\u4e2a\u7528\u65e0\u754c\u7684\u6587\u4ef6\u987a\u5e8f\u5199\u5165\u4ee3\u66ff\u73af\u5f62\u6570\u7ec4\u7684 Disruptor\uff0c\u53ea\u662f\u8fd9\u4e24\u8005\u5728\u8bbe\u8ba1\u76ee\u6807\u3001\u5b9e\u73b0\u65b9\u5f0f\u548c\u5e94\u7528\u573a\u666f\u4e0a\u7684\u6709\u663e\u8457\u5dee\u522b\u3002Kafka \u66f4\u4fa7\u91cd\u4e8e\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7684\u6301\u4e45\u5316\u548c\u9ad8\u541e\u5410\u91cf\uff0c\u800c Disruptor \u5219\u4fa7\u91cd\u4e8e\u5355\u673a\u7cfb\u7edf\u4e2d\u7684\u4f4e\u5ef6\u8fdf\u3001\u9ad8\u6027\u80fd\u4e8b\u4ef6\u5904\u7406\u3002"}),"\n"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"RingBuffer"}),": RingBuffer\u662fDisruptor\u7684\u6838\u5fc3\u6570\u636e\u7ed3\u6784\uff0c\u7406\u89e3\u5b83\u975e\u5e38\u5173\u952e\u3002\u5b83\u662f\u4e00\u4e2a\u9884\u5148\u5206\u914d\u7684\u3001\u7528\u4e8e\u5b58\u50a8\u6570\u636e\u7684\u73af\u5f62\u7f13\u51b2\u533a\u3002\u751f\u4ea7\u8005\u5f80\u91cc\u9762\u5199\u6570\u636e\uff0c\u6d88\u8d39\u8005\u4ece\u4e2d\u8bfb\u53d6\u6570\u636e\u3002\u6e90\u7801\u8def\u5f84: com.lmax.disruptor.RingBuffer"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sequence"}),": Sequence\u7c7b\u7528\u4e8e\u8ffd\u8e2a\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7684\u4f4d\u7f6e\u3002\u6bcf\u4e2a\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u90fd\u4f1a\u6709\u4e00\u4e2aSequence\u5b9e\u4f8b\uff0c\u7528\u4e8e\u6807\u8bc6\u5b83\u4eec\u5f53\u524d\u5904\u7406\u7684\u4f4d\u7f6e\u3002\u6e90\u7801\u8def\u5f84: com.lmax.disruptor.Sequence"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Sequencer"}),": \u8fd9\u662f\u4e00\u4e2a\u63a5\u53e3\uff0cDisruptor\u6709\u4e24\u79cd\u5b9e\u73b0\u65b9\u5f0f\uff08SingleProducerSequencer\u548cMultiProducerSequencer\uff09\uff0c\u7528\u4e8e\u7ba1\u7406\u751f\u4ea7\u8005\u5982\u4f55\u5728RingBuffer\u4e0a\u7533\u8bf7\u7a7a\u95f4\u3002\u6e90\u7801\u8def\u5f84: com.lmax.disruptor.SingleProducerSequencer \u548c com.lmax.disruptor.MultiProducerSequencer"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"EventProcessor"}),": \u8fd9\u662f\u6d88\u8d39\u8005\u7684\u6838\u5fc3\u63a5\u53e3\uff0c\u8d1f\u8d23\u6d88\u8d39\u4e8b\u4ef6\u5e76\u5904\u7406\u903b\u8f91\u3002\u5e38\u89c1\u7684\u5b9e\u73b0\u7c7b\u6709BatchEventProcessor\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"WaitStrategy"}),": \u8fd9\u662f\u4e00\u4e2a\u63a5\u53e3\uff0c\u5b9a\u4e49\u6d88\u8d39\u8005\u7b49\u5f85\u6570\u636e\u7684\u7b56\u7565\u3002Disruptor\u63d0\u4f9b\u4e86\u591a\u79cd\u7b56\u7565\uff08\u5982BusySpinWaitStrategy\uff0cBlockingWaitStrategy\u7b49\uff09\uff0c\u5b83\u4eec\u76f4\u63a5\u5f71\u54cd\u7cfb\u7edf\u7684\u6027\u80fd\u548c\u5ef6\u8fdf\u3002\u6e90\u7801\u8def\u5f84: com.lmax.disruptor.WaitStrategy\u4ee5\u53ca\u5b83\u7684\u5b50\u7c7b\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SequenceBarrier"}),"\uff1a\u534f\u8c03\u6d88\u8d39\u8005\u5bf9 RingBuffer \u4e2d\u6570\u636e\u7684\u8bfb\u53d6\u987a\u5e8f\uff0c\u786e\u4fdd\u6240\u6709\u6d88\u8d39\u8005\u6309\u7167\u6b63\u786e\u7684\u987a\u5e8f\u8bfb\u53d6\u548c\u5904\u7406\u4e8b\u4ef6\uff08\u6d88\u606f\uff09\u3002\u5177\u4f53\u6765\u8bf4\uff1a"]}),"\n",(0,i.jsx)(n.li,{children:"\u8ddf\u8e2a\u54ea\u4e9b\u6570\u636e\u662f\u53ef\u7528\u7684\uff1aSequenceBarrier \u901a\u8fc7\u8ddf\u8e2a\u4e00\u4e2a\u6216\u591a\u4e2a\u5e8f\u5217\uff08Sequence\uff09\u7684\u8fdb\u5ea6\uff0c\u6765\u5224\u65ad\u54ea\u4e9b\u6570\u636e\u662f\u6d88\u8d39\u8005\u53ef\u4ee5\u5b89\u5168\u8bfb\u53d6\u7684\u3002"}),"\n",(0,i.jsx)(n.li,{children:"\u534f\u8c03\u6d88\u8d39\u8005\u4e4b\u95f4\u7684\u987a\u5e8f\uff1a\u5728\u591a\u6d88\u8d39\u8005\u7684\u60c5\u51b5\u4e0b\uff0cSequenceBarrier \u53ef\u4ee5\u786e\u4fdd\u6d88\u8d39\u8005\u6309\u7167\u7279\u5b9a\u7684\u987a\u5e8f\u8bfb\u53d6\u6570\u636e\uff0c\u9632\u6b62\u8bfb\u53d6\u5230\u4e0d\u4e00\u81f4\u6216\u672a\u5b8c\u5168\u5904\u7406\u7684\u6570\u636e\u3002"}),"\n",(0,i.jsx)(n.li,{children:"\u963b\u585e\u6d88\u8d39\u8005\u76f4\u5230\u6570\u636e\u53ef\u7528\uff1a\u5f53\u6d88\u8d39\u8005\u8bd5\u56fe\u8bfb\u53d6\u8d85\u51fa\u5f53\u524d\u53ef\u7528\u8303\u56f4\u7684\u6570\u636e\u65f6\uff0cSequenceBarrier \u4f1a\u963b\u585e\u6d88\u8d39\u8005\uff0c\u76f4\u5230\u6570\u636e\u53d8\u4e3a\u53ef\u7528\u3002\u8fd9\u79cd\u673a\u5236\u9632\u6b62\u4e86\u6570\u636e\u7684\u4e0d\u5b8c\u6574\u8bfb\u53d6\u3002"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"\u6838\u5fc3\u5b58\u50a8\u7ed3\u6784",children:"\u6838\u5fc3\u5b58\u50a8\u7ed3\u6784"}),"\n",(0,i.jsxs)(n.p,{children:["Disruptor\u7684\u5b58\u50a8\u7ed3\u6784\u662f\u4e00\u4e2a\u5faa\u73af\u6570\u7ec4\uff0c\u5728\u5176",(0,i.jsx)(n.code,{children:"RingBuffer"}),"\u7c7b\u4e2d\u5b9e\u73b0\u3002"]}),"\n",(0,i.jsx)("div",{style:{textAlign:"center",width:"100%"},children:(0,i.jsx)("img",{src:"/analysis-project/img/disruptor/ConversantDisruptorLogo.png",alt:"image",style:{maxWidth:"100%",height:"auto",display:"block",margin:"0 auto"}})}),"\n",(0,i.jsx)(n.h4,{id:"ringbuffer",children:"RingBuffer"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"RingBuffer"}),"\u7684\u6570\u7ec4\u662f\u7531",(0,i.jsx)(n.code,{children:"RingBufferFields"}),"\u7c7b\u6765\u63d0\u4f9b\u7684\uff0c\u8d1f\u8d23\u6570\u636e\u7684\u5b9e\u9645\u5b58\u50a8\uff0c\u5e76\u901a\u8fc7 elementAt \u65b9\u6cd5\u6765\u8bbf\u95ee\u6570\u636e\u3002\u7136\u540e",(0,i.jsx)(n.code,{children:"RingBuffer"}),"\u7684\u5176\u4ed6\u529f\u80fd\u5219\u662f\u4f9d\u8d56\u4e8e ",(0,i.jsx)(n.code,{children:"Sequencer"})," \u63a5\u53e3\u53ca\u5176\u5b9e\u73b0\u7c7b\uff0c",(0,i.jsx)(n.code,{children:"Sequencer"})," \u8d1f\u8d23\u751f\u6210\u548c\u7ba1\u7406\u5e8f\u5217\u53f7\uff0c\u5e76\u901a\u8fc7 CAS \u64cd\u4f5c\u548c\u5185\u5b58\u5c4f\u969c\u6765\u5b9e\u73b0\u9ad8\u6548\u7684\u5e76\u53d1\u63a7\u5236\uff0c\u800c",(0,i.jsx)(n.code,{children:"RingBuffer "}),"\u63d0\u4f9b\u4e86\u57fa\u7840\u7684 API\u7528\u4e8e\u8bbf\u95ee\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"RingBuffer"})," \u8d1f\u8d23\u7684\u6570\u636e\u7ba1\u7406\u903b\u8f91\u5177\u4f53\u6d89\u53ca\u4e24\u4e2a\u65b9\u9762\uff1a"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u6570\u636e\u5b58\u50a8\u548c\u8bbf\u95ee"}),"\uff1a"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"RingBuffer"})," \u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u9884\u5206\u914d\u7684\u5faa\u73af\u6570\u7ec4\uff08\u73af\u5f62\u7f13\u51b2\u533a\uff09\uff0c\u7528\u4e8e\u5b58\u50a8\u4e8b\u4ef6\u5bf9\u8c61\uff08Event\uff09\u3002\u5177\u4f53\u7531\u7531",(0,i.jsx)(n.code,{children:"RingBufferFields"}),"\u7c7b\u6765\u5b9e\u73b0\u3002",(0,i.jsx)(n.code,{children:"RingBuffer "}),"\u63d0\u4f9b\u4e86\u57fa\u7840\u7684 API\uff0c\u7528\u4e8e\u8bbf\u95ee\u548c\u64cd\u4f5c\u5185\u90e8\u7684\u6570\u636e\u7ed3\u6784\u3002"]}),"\n",(0,i.jsxs)(n.ol,{start:"2",children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u5e8f\u5217\u7ba1\u7406\u548c\u5e76\u53d1\u63a7\u5236"}),"\uff1a"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\u5b9e\u9645\u7684\u5e76\u53d1\u63a7\u5236\u548c\u5e8f\u5217\u7ba1\u7406\u5219\u4e3b\u8981\u7531 ",(0,i.jsx)(n.code,{children:"Sequencer"})," \u63a5\u53e3\u53ca\u5176\u5b9e\u73b0\u7c7b\u6765\u8d1f\u8d23\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public final class RingBuffer<E> extends RingBufferFields<E> implements Cursored, EventSequencer<E>, EventSink<E>\n{\n  ...\n}\n\n/**\n * RingBufferFields \u7c7b\u662f Disruptor \u6846\u67b6\u4e2d\u7684\u4e00\u4e2a\u6838\u5fc3\u7c7b\uff0c\u5b83\u4e3b\u8981\u7528\u4e8e\u7ba1\u7406\u548c\u5b58\u50a8\u73af\u5f62\u7f13\u51b2\u533a\uff08Ring Buffer\uff09\u4e2d\u7684\u6570\u636e\u9879\u3002\n * @param <E>\n */\nabstract class RingBufferFields<E> extends RingBufferPad\n{\n    /**\n     * BUFFER_PAD\uff1a\u8fd9\u662f\u4e00\u4e2a\u9759\u6001\u5e38\u91cf\uff0c\u503c\u4e3a32\u3002\n     * \u7528\u6765\u9632\u6b62\u4f2a\u5171\u4eab\uff0c\u901a\u8fc7\u5728\u6570\u7ec4\u7684\u5f00\u5934\u548c\u7ed3\u5c3e\u6dfb\u52a0\u989d\u5916\u7684\u586b\u5145\uff0c\u786e\u4fdd RingBuffer \u4e2d\u7684\u6709\u6548\u6570\u636e\u9879\u4e0e\u8fd9\u4e9b\u586b\u5145\u9879\u4e4b\u95f4\u6709\u4e00\u5b9a\u7684\u8ddd\u79bb\uff0c\u51cf\u5c11\u4f2a\u5171\u4eab\u7684\u53ef\u80fd\u6027\u3002\n     */\n    private static final int BUFFER_PAD = 32;\n\n    private final long indexMask;\n    private final E[] entries;\n    protected final int bufferSize;\n    protected final Sequencer sequencer;\n\n    /**\n     * \u8c03\u7528\u7684\u5730\u65b9\u5c31\u662f RingBuffer#RingBuffer\u65b9\u6cd5\n     * @see RingBuffer#RingBuffer(EventFactory, Sequencer)\n     */\n    @SuppressWarnings("unchecked")\n    RingBufferFields(\n        final EventFactory<E> eventFactory,\n        final Sequencer sequencer)\n    {\n        this.sequencer = sequencer;\n        this.bufferSize = sequencer.getBufferSize();\n\n        if (bufferSize < 1)\n        {\n            throw new IllegalArgumentException("bufferSize must not be less than 1");\n        }\n        // bitCount \u65b9\u6cd5\u7684\u4e3b\u8981\u7528\u9014\u662f\u5728\u5904\u7406\u4e8c\u8fdb\u5236\u6570\u636e\u65f6\uff0c\u8ba1\u7b97\u4e00\u4e2a\u6574\u6570\u4e2d\u7684 1 \u7684\u6570\u91cf\uff0c\u8fd9\u91cc\u5c31\u662f\u5728\u6821\u9a8c\u5fc5\u987b\u662f2\u7684n\u6b21\u65b9\n        if (Integer.bitCount(bufferSize) != 1)\n        {\n            throw new IllegalArgumentException("bufferSize must be a power of 2");\n        }\n\n        // indexMask\u5c31\u662f\u6709\u6548\u6570\u4f4d\u5168\u662f1\u7684\u6574\u6570\n        this.indexMask = bufferSize - 1;\n        /*\n         * \u6570\u7ec4\u7684\u5927\u5c0f\u4e3a bufferSize + 2 * BUFFER_PAD\uff0c\u4f46\u5b9e\u9645\u8ba1\u7b97\u4f4d\u7f6e\u4ecd\u7136\u662fsequence & indexMask\u4f4d\u8fd0\u7b97\u8ba1\u7b97\u4f4d\u7f6e\u3002\n         * \u4f46\u901a\u8fc7\u6dfb\u52a0\u4e24\u4e2apad\u4f7f\u5f97\uff0c\u9996\u5c3e\u4e5f\u5c31\u662f\u63d2\u5165\u548c\u83b7\u53d6\u4f4d\u7f6e\u59cb\u7ec8\u76f8\u5dee\u4e00\u4e2apad 32\u4e2a\u4f4d\u7f6e\u8ddd\u79bb\uff0c\u4f46\u9700\u8981\u63d2\u5165\u4e24\u4e2apad\u5206\u522b\u5728\u9996\u5c3e\u8fd9\u6837\u662f\u4e3a\u4e86\u9632\u6b62\u6570\u7ec4\u8d8a\u754c\n         *\n         * BUFFER_PAD \u786e\u4fdd\u4e86\u5b9e\u9645\u7684\u6570\u636e\u5b58\u50a8\u533a\u57df\u4e0d\u4f1a\u7d27\u8d34\u6570\u7ec4\u7684\u5f00\u5934\u6216\u7ed3\u5c3e\uff0c\u800c\u662f\u7559\u51fa\u4e86\u4e00\u5b9a\u7684\u7f13\u51b2\u7a7a\u95f4\u3002\u8fd9\u6837\uff0c\u5f53\u591a\u4e2a\u751f\u4ea7\u8005\u6216\u6d88\u8d39\u8005\u7ebf\u7a0b\u8bbf\u95ee RingBuffer \u65f6\uff0c\n         * \u4ed6\u4eec\u5bf9\u6570\u636e\u7684\u8bbf\u95ee\u59cb\u7ec8\u4f1a\u4e0e\u586b\u5145\u533a\u57df\u9694\u79bb\uff0c\u907f\u514d\u4e86\u5bf9\u76f8\u90bb\u7f13\u5b58\u884c\u7684\u7ade\u4e89\uff0c\u4ece\u800c\u51cf\u5c11\u4e86\u4f2a\u5171\u4eab\u3002\n         */\n        this.entries = (E[]) new Object[bufferSize + 2 * BUFFER_PAD];\n        fill(eventFactory);\n    }\n\n    // \u9884\u5148\u586b\u5145\u6570\u7ec4\uff0c\u8fd9\u4e2a\u6570\u7ec4\u5185\u5bb9\u4f1a\u4e00\u76f4\u5b58\u5728\uff0c\u6570\u636e\u5143\u7d20\u4e0d\u4f1a\u89e6\u53d1gc\n    private void fill(final EventFactory<E> eventFactory)\n    {\n        for (int i = 0; i < bufferSize; i++)\n        {\n            // \u8fd9\u91cc\u6bcf\u4e00\u4e2a\u5b9e\u9645\u586b\u5145\u7684\u4f4d\u7f6e\u90fd\u662f\u79fb\u52a8\u4e86 BUFFER_PAD\u957f\u5ea6\u7684\n            entries[BUFFER_PAD + i] = eventFactory.newInstance();\n        }\n    }\n\n    protected final E elementAt(final long sequence)\n    {\n        // \u83b7\u53d6\u5143\u7d20\u4f4d\u7f6e\u4e5f\u8981\u52a0\u4e0apad\n        return entries[BUFFER_PAD + (int) (sequence & indexMask)];\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"\u6570\u7ec4\u7684\u5bfb\u5740",children:"\u6570\u7ec4\u7684\u5bfb\u5740"}),"\n",(0,i.jsxs)(n.p,{children:["\u56e0\u4e3a\u5728\u8ba1\u7b97\u673a\u4e2d\u53d6\u6a21\u8fd0\u7b97\u662f\u6bd4\u8f83\u91cd\u7684\u8ba1\u7b97\uff0c\u6240\u4ee5\u5faa\u73af\u6570\u7ec4\u7684\u5728\u83b7\u53d6\u5730\u5740\u65f6\u4f7f\u7528\u7684\u65b9\u6cd5\u662f\u5c06\u6570\u7ec4\u5927\u5c0f-",(0,i.jsx)(n.code,{children:"bufferSize"}),"\u8981\u6c42\u662f2\u7684\u5e42\uff0c"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'// bitCount \u65b9\u6cd5\u7684\u4e3b\u8981\u7528\u9014\u662f\u5728\u5904\u7406\u4e8c\u8fdb\u5236\u6570\u636e\u65f6\uff0c\u8ba1\u7b97\u4e00\u4e2a\u6574\u6570\u4e2d\u7684 1 \u7684\u6570\u91cf\uff0c\u8fd9\u91cc\u5c31\u662f\u5728\u6821\u9a8c\u5fc5\u987b\u662f2\u7684n\u6b21\u65b9\nif (Integer.bitCount(bufferSize) != 1)\n{\n    throw new IllegalArgumentException("bufferSize must be a power of 2");\n}\n'})}),"\n",(0,i.jsxs)(n.p,{children:["\u7136\u540e\u518d\u901a\u8fc7\u4e00\u4e2a\u63a9\u7801(",(0,i.jsx)(n.code,{children:"indexMask"})," = ",(0,i.jsx)(n.code,{children:"bufferSize"}),"-1)\uff0c\u6765\u548c\u4f5c",(0,i.jsx)(n.code,{children:"seqeunce"}),"\u4e0e\u8fd0\u7b97\u5373\u53ef\u5f97\u5230\u4f4d\u7f6e\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"private int calculateIndex(final long sequence)\n{\n    return ((int) sequence) & indexMask;\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u8fd9\u91cc\u8fd8\u6709\u4e00\u4e2a\u7ec6\u8282\uff0c\u5b9e\u9645\u4e0a",(0,i.jsx)(n.code,{children:"ringbuffer"}),"\u5728\u5b58\u50a8\u65f6\uff0c\u6570\u7ec4\u524d\u540e\u8fd8\u52a0\u4e86\u7a7a\u767d\u4f4d\u7f6e\uff0c\u4ee5\u907f\u514d\u6570\u7ec4\u9996\u5c3e\u6570\u7ec4\u8282\u70b9\u4ea7\u751f\u4f2a\u5171\u4eab\u7684\u53ef\u80fd\uff0c\u6240\u4ee5\u5b9e\u9645\u5b58\u50a8\u6570\u7ec4\u7684\u5bfb\u5740\u8fd8\u8981\u4f4d\u79fb\u4e00\u4e2apad\u586b\u5145\u8ddd\u79bb\uff0c\u76f8\u5bf9\u4e8e\u76f4\u63a5\u4f4d\u8fd0\u7b97\u7684\u7ed3\u679c\uff0c\u5982\u4e0b\uff1a"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"// \u5b9e\u9645\u7684\u5b58\u50a8\u6570\u7ec4\u5927\u5c0f\nthis.entries = (E[]) new Object[bufferSize + 2 * BUFFER_PAD];\n\n// RingBufferFields\u4e2d\u7684\u5b9e\u9645ringbuffer\u5b58\u50a8\u4f4d\u7f6e\u5b9a\u4f4d\nprotected final E elementAt(final long sequence)\n{\n    // \u83b7\u53d6\u5143\u7d20\u4f4d\u7f6e\u4e5f\u8981\u52a0\u4e0apad\n    return entries[BUFFER_PAD + (int) (sequence & indexMask)];\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"\u5e76\u53d1\u534f\u8c03",children:"\u5e76\u53d1\u534f\u8c03"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"\u6d88\u8d39\u8005\u4e0d\u8ffd\u4e0a\u751f\u4ea7\u8005"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\u7136\u540e\u5728\u5904\u7406\u8bfb\u5199\u5e76\u53d1\u63a7\u5236\u65f6\uff0c",(0,i.jsx)(n.code,{children:"Disruptor"}),"\u7684\u8bbe\u8ba1\u66f4\u52a0\u7b80\u6d01\uff0c\u53ea\u6709\u4e00\u4e2a",(0,i.jsx)(n.code,{children:"Sequence"}),"\u7c7b\u578b\u7684\u6e38\u6807",(0,i.jsx)(n.code,{children:"cursor"}),"\uff1b\u53ea\u9700\u8981\u6bd4\u8f83\u5927\u5c0f\uff0c\u5373\u6bcf\u4e2a\u6d88\u8d39\u8005\u8bfb\u7684\u5e8f\u5217",(0,i.jsx)(n.code,{children:"seqeunce"}),"\u5fc5\u987b\u5c0f\u4e8e\u6e38\u6807",(0,i.jsx)(n.code,{children:"cursor"}),"\u3002\u8fd9\u91cc\u8fde\u505a\u4f4d\u8fd0\u7b97\u7684\u5f00\u9500\u90fd\u7701\u53bb\u4e86\uff0c\u800c",(0,i.jsx)(n.code,{children:"Seqeunce"}),"\u7c7b\u672c\u8eab\u662f\u4fdd\u8bc1\u53ef\u89c1\u6027\u3001\u6307\u4ee4\u5c4f\u969c\u548c\u4fee\u6539\u539f\u5b50\u6027\u7684\uff0c\u6240\u4ee5\u4e0d\u9700\u8981\u505a\u4efb\u4f55\u590d\u6742\u64cd\u4f5c\uff0c\u53ea\u9700\u8981\u6bd4\u8f83\u8bfb\u5e8f\u5217\u548c\u6e38\u6807\u5373\u53ef\u63a7\u5236\u6d88\u8d39\u4e0d\u8ffd\u4e0a\u751f\u4ea7\u8005\u3002"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"\u751f\u4ea7\u8005\u4e0d\u8ffd\u4e0a\u6d88\u8d39\u8005"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u751f\u4ea7\u8005\u4e0d\u8ffd\u4e0a\u6d88\u8d39\u8005\u7684\u903b\u8f91\u662f\u901a\u8fc7\u8ba1\u7b97\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5982\u4e0b\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"long wrapPoint = (cursorValue + requiredCapacity) - bufferSize;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u7136\u540e",(0,i.jsx)(n.code,{children:"wrapPoint <= cachedGatingSequence"}),"\u5c31\u80fd\u4fdd\u8bc1\u751f\u4ea7\u8005\u4e0d\u8ffd\u4e0a\u6d88\u8d39\u8005\uff0c\u800c\u4e14\u4e3a\u4ec0\u4e48",(0,i.jsx)(n.code,{children:"="}),"\u4e5f\u53ef\u4ee5\uff0c\u662f\u56e0\u4e3a",(0,i.jsx)(n.code,{children:"INITIAL_CURSOR_VALUE = -1L"}),"\uff0c",(0,i.jsx)(n.code,{children:"Sequence"}),"\u662f\u4ece-1\u5f00\u59cb\u7684\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u8fd9\u4e2a\u903b\u8f91\u5728\u751f\u4ea7\u8005\u5b9e\u73b0\u7c7b\u4e2d\u7533\u8bf7\u69fd\u4f4d\u7684",(0,i.jsx)(n.code,{children:"next"}),"\u65b9\u6cd5\u548c\u5224\u65ad\u65b9\u6cd5\u662f\u5426\u6709\u53ef\u4ee5\u7a7a\u95f4\u7684",(0,i.jsx)(n.code,{children:"hasAvailableCapacity"}),"\u65b9\u6cd5\u90fd\u662f\u8fd9\u4e2a\u903b\u8f91\u3002"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"\u6d88\u8d39\u8005\u4e0d\u8ffd\u4e0a\u6d88\u8d39\u8005"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\u8fd9\u4e2a\u95ee\u9898\u4e0d\u5b58\u5728\uff0c4.0.0\u4e4b\u540e\u7248\u672c\u53bb\u6389\u4e86",(0,i.jsx)(n.code,{children:"workpool"}),"\uff0c\u6bcf\u4e2a\u6d88\u8d39\u8005\u90fd\u662f\u72ec\u7acb\u7684",(0,i.jsx)(n.code,{children:"Sequence"}),"\u3002"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"\u751f\u4ea7\u8005\u4e0d\u8ffd\u4e0a\u751f\u4ea7\u8005"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u4f46\u8fd9\u91cc\u5b58\u5728\u4e00\u4e2a\u65b0\u7684\u95ee\u9898\uff0c\u5c31\u662f\u591a\u751f\u4ea7\u8005\u7684\u5199\u5165\uff0c\u4e0a\u9762\u662f\u53ef\u4ee5\u4fdd\u8bc1\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7684\u5b89\u5168\u7684\uff0c\u6d88\u8d39\u8005\u8bfb\u4e5f\u662f\u6bcf\u4e2a\u6d88\u8d39\u8005\u6709\u81ea\u5df1\u7684\u5e8f\u5217\uff0c\u4e0d\u5b58\u5728\u5e76\u53d1\u4e89\u7528\u7684\u95ee\u9898\uff1b\u4f46\u591a\u751f\u4ea7\u8005\u5199\u5165\u4e0d\u662f\uff0c\u591a\u751f\u4ea7\u8005\u5b58\u5728\u5199\u8986\u76d6\u7684\u95ee\u9898\uff0c\u867d\u7136\u53ef\u4ee5\u5404\u81ea\u7533\u8bf7\u5e8f\u5217\u63a8\u8fdb\u6e38\u6807cursor\uff0c\u4f46\u5b58\u5728\u6570\u7ec4\u5faa\u73af\u95ee\u9898\uff0c\u5373sequece\u4e00\u76f4\u5355\u8c03\u9012\u589e\uff0c\u4e00\u76f4\u589e\u5230\u628a\u4f4d\u7f6e\u7ed9\u7ed5\u56de\u5230\u6570\u7ec4\u672a\u8bfb\u53d6\u7684\u4f4d\u7f6e\uff0c\u6b64\u65f6\u5c31\u4f1a\u53d1\u751f\u65b0\u7684\u5199\u5165\u8986\u76d6\u672a\u8bfb\u53d6\u7684\u5199\u5165\u3002"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["\u591a\u751f\u4ea7\u8005\u6570\u636e\u8986\u76d6\u95ee\u9898\uff0c",(0,i.jsx)(n.code,{children:"Disruptor"}),"\u8bbe\u8ba1\u4e5f\u5f88\u7b80\u5355\uff0c\u901a\u8fc7\u589e\u52a0\u4e00\u4e2a\u548c",(0,i.jsx)(n.code,{children:"bufferSize"}),"\u4e00\u6837\u5927\u5c0f\u7684\u6570\u7ec4\u6765\u6807\u8bb0\u4fee\u6539\u7b26\u53f7\u5373\u53ef\uff0c\u8fd9\u4e2a\u6807\u8bb0\u7b26\u53f7\u4e5f\u901a\u8fc7\u4e00\u4e2a\u4f4d\u8fd0\u7b97\u5f97\u5230\uff0c\u4e5f\u5c31\u662f\u8bf4\u89e3\u51b3\u7248\u672c\u4ecd\u7136\u662f\u901a\u8fc7\u4e00\u4e2a\u4f4d\u8fd0\u7b97\u6765\u6821\u9a8c\u6570\u636e\uff0c\u4ecd\u7136\u4e0d\u901a\u8fc7\u52a0\u9501\u6216\u8005\u590d\u6742\u7684\u540c\u6b65\u5c31\u89e3\u51b3\u4e86\u3002"]})}),"\n",(0,i.jsxs)(n.p,{children:["\u5177\u4f53\u7684\u89e3\u51b3\u529e\u6cd5\u89c1--",(0,i.jsx)(n.a,{href:"#%E5%A4%9A%E7%94%9F%E4%BA%A7%E8%80%85",children:"\u591a\u751f\u4ea7\u8005\u6570\u636e\u8986\u76d6"})]}),"\n",(0,i.jsx)(n.h3,{id:"\u6838\u5fc3\u534f\u8c03\u5bf9\u8c61",children:"\u6838\u5fc3\u534f\u8c03\u5bf9\u8c61"}),"\n",(0,i.jsx)(n.h4,{id:"sequence",children:"Sequence"}),"\n",(0,i.jsxs)(n.p,{children:["Sequence\u662f\u4e00\u4e2a\u5177\u4f53\u7684\u7c7b\uff0c\u7528\u4e8e\u7ba1\u7406\u4e00\u4e2a\u5355\u72ec\u7684\u957f\u6574\u578b\u5e8f\u5217\u53f7\uff0c\u5176value\u662f\u88ab\u4f5c\u4e86\u7f13\u5b58\u586b\u5145\u4ee5\u907f\u514d\u4f2a\u5171\u4eab\uff0c\u5982\u4e0b\u4ee3\u7801\u4e2d\u7684",(0,i.jsx)(n.code,{children:"LhsPadding"})," -",(0,i.jsx)(n.code,{children:"Value"}),"-",(0,i.jsx)(n.code,{children:"RhsPadding"}),"\uff0c\u6700\u540e",(0,i.jsx)(n.code,{children:"Sequence extends RhsPadding"}),"\u3002"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Sequence\u7684\u6838\u5fc3\u63a8\u8fdb\u63a5\u53e3Sequencer \u5b9e\u73b0\u5185\u90e8\u5f80\u5f80\u5c31\u4f1a\u6301\u6709\u4e00\u4e2a\u6216\u591a\u4e2a Sequence \u5b9e\u4f8b\u6765\u8868\u793a\u4e0d\u540c\u751f\u4ea7\u8005\u6216\u6d88\u8d39\u8005\u7684\u4f4d\u7f6e\u3002"}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["Sequence \u5bf9\u8c61\u672c\u8d28\u4e0a\u662f\u4e00\u4e2a\u6307\u793a\u5668\uff0c\u5176\u4e2d\u5177\u4f53\u7684\u5728",(0,i.jsx)(n.code,{children:"RingBuffer"}),"\u4e2d\u5bf9\u5e94\u7684\u5c31\u662f",(0,i.jsx)(n.code,{children:"cursor"}),"\uff0c\u6807\u660e\u5f53\u524d\u64cd\u4f5c\u7684\u8fdb\u5ea6\u4f4d\u7f6e\uff0c\u5e76\u4e14\u53ef\u4ee5\u8868\u793a\u6d88\u8d39\u5e8f\u5217\uff08\u6d88\u8d39\u8fdb\u5ea6\uff09\u4e5f\u53ef\u4ee5\u8868\u793a\u751f\u4ea7\u5e8f\u5217\uff08\u751f\u4ea7\u8fdb\u5ea6\uff09\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'package com.lmax.disruptor;\n\n\nimport java.lang.invoke.MethodHandles;\nimport java.lang.invoke.VarHandle;\n\nclass LhsPadding\n{\n    protected byte\n        p10, p11, p12, p13, p14, p15, p16, p17,\n        p20, p21, p22, p23, p24, p25, p26, p27,\n        p30, p31, p32, p33, p34, p35, p36, p37,\n        p40, p41, p42, p43, p44, p45, p46, p47,\n        p50, p51, p52, p53, p54, p55, p56, p57,\n        p60, p61, p62, p63, p64, p65, p66, p67,\n        p70, p71, p72, p73, p74, p75, p76, p77;\n}\n\nclass Value extends LhsPadding\n{\n    protected long value;\n}\n\nclass RhsPadding extends Value\n{\n    protected byte\n        p90, p91, p92, p93, p94, p95, p96, p97,\n        p100, p101, p102, p103, p104, p105, p106, p107,\n        p110, p111, p112, p113, p114, p115, p116, p117,\n        p120, p121, p122, p123, p124, p125, p126, p127,\n        p130, p131, p132, p133, p134, p135, p136, p137,\n        p140, p141, p142, p143, p144, p145, p146, p147,\n        p150, p151, p152, p153, p154, p155, p156, p157;\n}\n\n/**\n * Concurrent sequence class used for tracking the progress of\n * the ring buffer and event processors.  Support a number\n * of concurrent operations including CAS and order writes.\n *\n * <p>Also attempts to be more efficient with regards to false\n * sharing by adding padding around the volatile field.\n *\n * <p>\n * Sequence\u7684\u6240\u6709\u64cd\u4f5c\u8bfb\u589e\u52a0\u4e86\u5185\u5b58\u5c4f\u969c\n * Acquire Fence (VarHandle.acquireFence();)\n * \t\u2022\u786e\u4fdd\u5728\u5c4f\u969c\u4e4b\u524d\u7684\u8bfb\u53d6\u64cd\u4f5c\u5728\u5c4f\u969c\u4ee3\u7801VarHandle.acquireFence()\u5bf9\u5e94\u7684\u4ee3\u7801\u884c\u4e4b\u524d\u5b8c\u6210\u3002\n * \t\u2022\u786e\u4fdd\u8bfb\u53d6\u7684\u6570\u636e\u4e0d\u4f1a\u88ab\u91cd\u65b0\u6392\u5e8f\u5230\u5c4f\u969c\u4e4b\u540e\u3002\n * Release Fence (VarHandle.releaseFence();)\n * \t\u2022\u786e\u4fdd\u5728\u5c4f\u969c\u4e4b\u524d\u7684\u5199\u5165\u64cd\u4f5c\u5728\u5c4f\u969c\u4ee3\u7801VarHandle.releaseFence()\u5bf9\u5e94\u7684\u4ee3\u7801\u884c\u4e4b\u524d\u5b8c\u6210\u3002\n * \t\u2022\u786e\u4fdd\u5199\u5165\u7684\u6570\u636e\u4e0d\u4f1a\u88ab\u91cd\u65b0\u6392\u5e8f\u5230\u5c4f\u969c\u4e4b\u540e\u3002\n * Full Fence (VarHandle.fullFence();)\n * \t\u5b8c\u6574\u7684\u5185\u5b58\u5c4f\u969c\uff0c\u786e\u4fdd\u5728\u6b64\u5c4f\u969c\u4e4b\u540e\u7684\u6240\u6709\u8bfb\u5199\u64cd\u4f5c\u4e0d\u4f1a\u88ab\u91cd\u6392\u5230\u5c4f\u969c\u4e4b\u524d\u3002\n */\npublic class Sequence extends RhsPadding\n{\n    static final long INITIAL_VALUE = -1L;\n    private static final VarHandle VALUE_FIELD;\n\n    static\n    {\n        try\n        {\n            VALUE_FIELD = MethodHandles.lookup().in(Sequence.class)\n                    .findVarHandle(Sequence.class, "value", long.class);\n        }\n        catch (final Exception e)\n        {\n            throw new RuntimeException(e);\n        }\n    }\n\n    /**\n     * Create a sequence initialised to -1.\n     */\n    public Sequence()\n    {\n        this(INITIAL_VALUE);\n    }\n\n    /**\n     * Create a sequence with a specified initial value.\n     *\n     * @param initialValue The initial value for this sequence.\n     */\n    public Sequence(final long initialValue)\n    {\n        VarHandle.releaseFence();\n        this.value = initialValue;\n    }\n\n    /**\n     * Perform a volatile read of this sequence\'s value.\n     *\n     * @return The current value of the sequence.\n     */\n    public long get()\n    {\n        long value = this.value;\n        /*\n         * \u5728\u8bfb\u53d6\u503c\u4e4b\u540e\u8c03\u7528 acquireFence \u5185\u5b58\u5c4f\u969c\uff0c\u5b83\u786e\u4fdd\u5728\u5b83\u4e4b\u524d\u7684\u6240\u6709\u8bfb\u64cd\u4f5c\uff08\u8bfb\u53d6\u6570\u636e\uff09\u90fd\u4e0d\u4f1a\u88ab\u91cd\u6392\u5230\u5b83\u4e4b\u540e\u3002\n         * \u8fd9\u610f\u5473\u7740\uff0cacquireFence \u786e\u4fdd\u4e86\u5728\u5b83\u4e4b\u524d\u8bfb\u53d6\u7684\u503c\u662f\u6700\u65b0\u7684\uff0c\u5e76\u4e14\u4e0d\u4f1a\u88ab\u91cd\u65b0\u6392\u5e8f\u5230\u5c4f\u969c\u4e4b\u540e\u3002\n         */\n        VarHandle.acquireFence();\n        return value;\n    }\n\n    /**\n     * Perform an ordered write of this sequence.  The intent is\n     * a Store/Store barrier between this write and any previous\n     * store.\n     *\n     * @param value The new value for the sequence.\n     */\n    public void set(final long value)\n    {\n        /*\n         * \u5b83\u786e\u4fdd\u5728\u5b83\u4e4b\u524d\u7684\u6240\u6709\u5199\u64cd\u4f5c\uff08\u5199\u5165\u6570\u636e\uff09\u90fd\u4e0d\u4f1a\u88ab\u91cd\u6392\u5230\u5b83\u4e4b\u540e\u3002\n         * \u8fd9\u610f\u5473\u7740\uff0creleaseFence \u786e\u4fdd\u4e86\u5728\u5b83\u4e4b\u524d\u7684\u5199\u64cd\u4f5c\uff08this.value = value\uff09\u5728\u5185\u5b58\u4e2d\u662f\u53ef\u89c1\u7684\uff0c\u5e76\u4e14\u4e0d\u4f1a\u88ab\u91cd\u6392\u5230\u5c4f\u969c\u4e4b\u540e\u3002\n         */\n        VarHandle.releaseFence();\n        this.value = value;\n    }\n......\n\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"sequenced",children:"Sequenced"}),"\n",(0,i.jsx)(n.p,{children:"Sequenced\u662f\u4e00\u4e2a\u7b80\u5355\u7684\u63a5\u53e3\uff0c\u5b9a\u4e49\u4e86\u4e00\u4e9b\u4e0e\u5e8f\u5217\u53f7\uff08sequence number\uff09\u64cd\u4f5c\u76f8\u5173\u7684\u65b9\u6cd5\u3002Sequenced \u672c\u8eab\u4e0d\u6301\u6709 Sequence \u5bf9\u8c61\uff0c\u4f46 Sequencer \u4f5c\u4e3a\u5b83\u7684\u4e00\u4e2a\u6269\u5c55\u5b9e\u73b0\uff0c\u6301\u6709 Sequence \u5e76\u5229\u7528\u5b83\u6765\u534f\u8c03\u751f\u4ea7\u8005\u4e0e\u6d88\u8d39\u8005\u7684\u64cd\u4f5c\u3002"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.em,{children:"Sequenced\u7684\u5b9e\u73b0\u90fd\u662f\u5728Sequencer\u7ee7\u627f\u4e86Sequenced\u4e4b\u540e\uff0c\u4f5c\u4e3aSequencer\u7684\u5b9e\u73b0\u6765\u5b9e\u73b0Sequenced\u7684\u65b9\u6cd5\u7684\u3002"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"package com.lmax.disruptor;\n\n/**\n * Operations related to the sequencing of items in a {@link RingBuffer}.\n * See the two child interfaces, {@link Sequencer} and {@link EventSequencer} for more details.\n */\npublic interface Sequenced\n{\n    /**\n     * The capacity of the data structure to hold entries.\n     *\n     * @return the size of the RingBuffer.\n     */\n    int getBufferSize();\n\n    /**\n     * Has the buffer got capacity to allocate another sequence.  This is a concurrent\n     * method so the response should only be taken as an indication of available capacity.\n     *\n     * @param requiredCapacity in the buffer\n     * @return true if the buffer has the capacity to allocate the next sequence otherwise false.\n     */\n    boolean hasAvailableCapacity(int requiredCapacity);\n\n    /**\n     * Get the remaining capacity for this sequencer.\n     *\n     * @return The number of slots remaining.\n     */\n    long remainingCapacity();\n\n    /**\n     * Claim the next event in sequence for publishing.\n     * \u5982\u679c\u6ca1\u6709\u53ef\u7528\u7684\uff0c\u4f1a\u963b\u585e\n     *\n     * @return the claimed sequence value\n     */\n    long next();\n\n    /**\n     * Claim the next n events in sequence for publishing.  This is for batch event producing.  Using batch producing\n     * requires a little care and some math.\n     * <p> \u6ce8\u610f\uff1a\u8fd4\u56de\u7684\u662fsequence value\uff0c\u7528\u6cd5\u9700\u8981\u6309\u4e0b\u9762\u7684\u4f8b\u5b50\u6765\u4f7f\u7528\n     * <p> \u548c{@link Sequencer#claim(long) }\u7684\u533a\u522b\u662f\uff1a\n     * claim\uff1a\u76f4\u63a5\u624b\u52a8\u8bbe\u7f6e\u67d0\u4e2a\u5e8f\u53f7\u7684\u503c\u5c06\u67d0\u4e2a\u5e8f\u53f7\u6807\u8bb0\u4e3a\u5df2\u5360\u7528\uff0c\u4e0d\u7ecf\u8fc7\u590d\u6742\u7684\u53ef\u7528\u6027\u68c0\u67e5\uff0c\u4e00\u822c\u4e0d\u4f1a\u7531\u7528\u6237\u76f4\u63a5\u8c03\u7528\uff0c\u800c\u662f\u7531 Disruptor \u6846\u67b6\u5185\u90e8\u5728\u7279\u5b9a\u7684\u573a\u666f\u4e0b\u8c03\u7528\n     * next\uff1a\u624d\u662f\u7528\u6237\u8c03\u7528\u7684\u65b9\u6cd5\uff0c\u4e3a\u751f\u4ea7\u8005\u5206\u914d\u4e0b\u4e00\u4e2a\u53ef\u7528\u7684\u5e8f\u53f7\uff0c\u751f\u4ea7\u8005\u8c03\u7528\u8be5\u65b9\u6cd5\u6765\u83b7\u53d6 RingBuffer \u4e2d\u53ef\u7528\u7684\u69fd\u4f4d\u3002\n     * <pre>\n     * int n = 10;\n     * long hi = sequencer.next(n);\n     * long lo = hi - (n - 1);\n     * for (long sequence = lo; sequence &lt;= hi; sequence++) {\n     *     // Do work.\n     * }\n     * sequencer.publish(lo, hi);\n     * </pre>\n     *\n     * @param n the number of sequences to claim\n     * @return the highest claimed sequence value\n     */\n    long next(int n);\n\n    /**\n     * Attempt to claim the next event in sequence for publishing.  Will return the\n     * number of the slot if there is at least <code>requiredCapacity</code> slots\n     * available.\n     * \u5982\u679c\u6ca1\u6709\u53ef\u7528\u7684\uff0c\u4f1a\u7acb\u523b\u629b\u5f02\u5e38\u4e0d\u4f1a\u963b\u585e\uff0c\u800c\u4e14InsufficientCapacityException\u662f\u4e00\u4e2a\u53d7\u68c0\u5f02\u5e38\n     *\n     * @return the claimed sequence value\n     * @throws InsufficientCapacityException thrown if there is no space available in the ring buffer.\n     */\n    long tryNext() throws InsufficientCapacityException;\n\n    /**\n     * Attempt to claim the next n events in sequence for publishing.  Will return the\n     * highest numbered slot if there is at least <code>requiredCapacity</code> slots\n     * available.  Have a look at {@link Sequencer#next()} for a description on how to\n     * use this method.\n     *\n     * @param n the number of sequences to claim\n     * @return the claimed sequence value\n     * @throws InsufficientCapacityException thrown if there is no space available in the ring buffer.\n     */\n    long tryNext(int n) throws InsufficientCapacityException;\n\n    /**\n     * Publishes a sequence. Call when the event has been filled.\n     *\n     * @param sequence the sequence to be published.\n     */\n    void publish(long sequence);\n\n    /**\n     * Batch publish sequences.  Called when all of the events have been filled.\n     * \u6279\u91cf\u63a8\u8fdbsequences\uff0c\u5e76\u4e14lo\u662f\u6700\u5c0f\u7684sequence\uff0cRingBuffer\u4e2d\u7684sequence\u5fc5\u987b\u662f\u8fde\u7eed\u7684\uff0c\u5373\u4e24\u4e2asequence\u90fd\u662f\u5df2\u53d1\u5e03\u7684\u72b6\u6001\u5219\u4e2d\u95f4\u7684\u6240\u6709sequence\u90fd\u662f\u5df2\u53d1\u5e03\u7684\u72b6\u6001\n     *\n     * @param lo first sequence number to publish\n     * @param hi last sequence number to publish\n     */\n    void publish(long lo, long hi);\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"sequencer",children:"Sequencer"}),"\n",(0,i.jsxs)(n.p,{children:["Sequencer\u7ee7\u627f\u4e86",(0,i.jsx)(n.code,{children:"Sequenced"}),"\u662f Disruptor \u4e2d\u7684\u751f\u4ea7\u8005\u534f\u8c03\u8005\uff0c\u8d1f\u8d23\u751f\u6210\u5e76\u7ef4\u62a4\u73af\u5f62\u7f13\u51b2\u533a\u4e2d\u7684\u5e8f\u5217\u53f7\uff08sequence\uff09\uff0c\u786e\u4fdd\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u5728\u5e76\u53d1\u73af\u5883\u4e0b\u6b63\u786e\u5730\u8bfb\u53d6\u548c\u5199\u5165\u6570\u636e\u3002Sequencer \u8fd8\u8d1f\u8d23\u534f\u8c03\u591a\u4e2a\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u4e4b\u95f4\u7684\u5e76\u53d1\u8bbf\u95ee\uff0c\u4f7f\u7528\u4e86\u9ad8\u6548\u7684\u7b97\u6cd5\u6765\u5b9e\u73b0\u65e0\u9501\uff08lock-free\uff09\u6216\u6700\u5c0f\u9501\uff08low-lock\uff09\u5e76\u53d1\u63a7\u5236\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"/**\n * Coordinates claiming sequences for access to a data structure while tracking dependent {@link Sequence}s\n */\npublic interface Sequencer extends Cursored, Sequenced\n{\n    /**\n     * Set to -1 as sequence starting point\n     */\n    long INITIAL_CURSOR_VALUE = -1L;\n\n    /**\n     * Claim a specific sequence.  Only used if initialising the ring buffer to\n     * a specific value.\n     * <p>claim(long sequence)\u7684\u4f5c\u7528\u662f\u5c06 RingBuffer \u5185\u90e8\u7684\u6e38\u6807\uff08cursor\uff09\u79fb\u52a8\u5230\u6307\u5b9a\u7684 sequence \u4f4d\u7f6e\u3002\n     * <p> claim \u65b9\u6cd5\u5728 Disruptor \u6846\u67b6\u4e2d\u901a\u5e38\u4e0d\u9700\u8981\u7528\u6237\u76f4\u63a5\u8c03\u7528\n     * \u8fd9\u610f\u5473\u7740\uff1a\u6e38\u6807\u66f4\u65b0\uff0c\u6e38\u6807\u4f1a\u88ab\u76f4\u63a5\u8bbe\u7f6e\u5230\u8fd9\u4e2a\u65b0\u7684 sequence \u503c\u3002\n     * <p>\u5982\u679c\u65b0\u6e38\u6807\u4f4d\u7f6e\u5728\u5f53\u524d\u6e38\u6807\u4f4d\u7f6e\u4e4b\u540e\uff08\u5373\u5411\u524d\u63a8\u8fdb\u6e38\u6807\uff09\uff1a\u4f1a\u8986\u76d6\u6389 RingBuffer \u4ece\u5f53\u524d\u6e38\u6807\u4f4d\u7f6e\u5230\u65b0\u7684\u6e38\u6807\u4f4d\u7f6e\u4e4b\u95f4\u7684\u65e7\u6570\u636e\uff0c\u4efb\u4f55\u5c1a\u672a\u88ab\u6d88\u8d39\u8005\u5904\u7406\u7684\u6570\u636e\u90fd\u5c06\u88ab\u89c6\u4e3a\u4e22\u5f03\u3002\n     * <p>\u5982\u679c\u65b0\u6e38\u6807\u4f4d\u7f6e\u5728\u5f53\u524d\u6e38\u6807\u4f4d\u7f6e\u4e4b\u524d\uff08\u5373\u540e\u524d\u91cd\u7f6e\u6e38\u6807\uff09\uff1a\u6d88\u8d39\u8005\u4f1a\u518d\u6b21\u6d88\u8d39\u8fd9\u4e2a\u4f4d\u7f6e\u4ee5\u53ca\u4e4b\u540e\u7684\u6570\u636e\u3002\u56e0\u6b64\uff0c\u6570\u636e\u53ef\u80fd\u4f1a\u88ab\u91cd\u590d\u6d88\u8d39\uff0c\n     *                                               \u5728\u4f7f\u7528\u4e2d\u5f88\u5c11\u76f4\u63a5\u624b\u52a8\u5c06\u6e38\u6807\u8bbe\u7f6e\u5230\u4e00\u4e2a\u66f4\u65e9\u7684\u4f4d\u7f6e\uff0c\u9664\u975e\u660e\u786e\u77e5\u9053\u8fd9\u6837\u505a\u7684\u540e\u679c\uff0c\u5e76\u4e14\u6709\u4e25\u683c\u7684\u5e94\u7528\u903b\u8f91\u6765\u5904\u7406\u6570\u636e\u7684\u4e00\u81f4\u6027\u3002\n     * @param sequence The sequence to initialise too.\n     */\n    void claim(long sequence);\n\n    /**\n     * Confirms if a sequence is published and the event is available for use; non-blocking.\n     *\n     * @param sequence of the buffer to check\n     * @return true if the sequence is available for use, false if not\n     */\n    boolean isAvailable(long sequence);\n\n    /**\n     * Add the specified gating sequences to this instance of the Disruptor.  They will\n     * safely and atomically added to the list of gating sequences.\n     * <p>\n     * \u5411 Sequencer \u5b9e\u4f8b\u6dfb\u52a0\u4e00\u4e2a\u6216\u591a\u4e2agating sequences\uff08\u4e5f\u79f0\u4e3a\u201c\u95e8\u63a7\u5e8f\u5217\u201d\uff09\uff0c\u7528\u6765\u63a7\u5236\u751f\u4ea7\u8005\u7684\u8fdb\u5ea6\u786e\u4fdd\u6d88\u8d39\u8005\u80fd\u591f\u8ddf\u4e0a\u751f\u4ea7\u8005\u7684\u901f\u5ea6\uff0c\u9632\u6b62\u751f\u4ea7\u8005\u201c\u8dd1\u5f97\u592a\u5feb\u201d\uff0c\u8986\u76d6\u5c1a\u672a\u5904\u7406\u5b8c\u7684\u6570\u636e\u3002\n     * <p>\n     * \u52a0\u5165\u7684Sequence\u5c31\u662f\u5bf9\u5e94\u6d88\u8d39\u8005\u7684\u6d88\u8d39\u5e8f\u5217\uff0c\u5373gating sequences \u4e2d\u4fdd\u5b58\u7684\u662f\u6240\u6709\u6d88\u8d39\u8005\u7684\u5e8f\u5217\u4f4d\u7f6e\u3002\n     * \u5f53\u751f\u4ea7\u8005\u8981\u5199\u5165\u65b0\u6570\u636e\u65f6\uff0c\u5b83\u4f1a\u68c0\u67e5 gating sequences \u7684\u6700\u5c0f\u503c\uff0c\u751f\u4ea7\u8005\u9700\u8981\u786e\u4fdd\u5b83\u5373\u5c06\u5199\u5165\u7684\u4f4d\u7f6e\u4e0d\u4f1a\u8d85\u8fc7\u4efb\u4f55\u4e00\u4e2a gating sequence\u3002\n     * \u5982\u679c\u751f\u4ea7\u8005\u53d1\u73b0\u6240\u6709\u7684\u6d88\u8d39\u8005\uff08gating sequences\uff09\u90fd\u5df2\u7ecf\u5904\u7406\u5b8c\u5f53\u524d\u7684\u751f\u4ea7\u8005\u6240\u5904\u4f4d\u7f6e\uff0c\u90a3\u4e48\u751f\u4ea7\u8005\u5c31\u53ef\u4ee5\u7ee7\u7eed\u5199\u5165\u6570\u636e\uff0c\n     * \u5982\u679c\u6709\u4efb\u4f55\u4e00\u4e2a\u6d88\u8d39\u8005\u7684 Sequence \u5c0f\u4e8e\u751f\u4ea7\u8005\u7684\u5199\u5165\u4f4d\u7f6e\uff0c\u751f\u4ea7\u8005\u4f1a\u963b\u585e\uff0c\u7b49\u5f85\u6d88\u8d39\u8005\u5904\u7406\u5b8c\u6bd5\uff0cDisruptor \u4f1a\u963b\u585e\u751f\u4ea7\u8005\u7ebf\u7a0b\u76f4\u5230\u53ef\u4ee5\u5b89\u5168\u5199\u5165\u3002\n     * <p>\n     * GatingSequence\u5176\u5b9e\u5c31\u662f\u5904\u7406\u591a\u6d88\u8d39\u8005\u7684\u624b\u6bb5\uff0c\u56e0\u4e3a\u6709\u591a\u6d88\u8d39\u8005\u6240\u4ee5\u624d\u9700\u8981\u628a\u6bcf\u4e2a\u9700\u8981\u786e\u4fdd\u6d88\u8d39\u5b8c\u6210\u7684\u6d88\u8d39\u8005\u5e8f\u5217\u52a0\u5165\u76d1\u63a7\uff0c\u4ee5\u907f\u514d\u751f\u4ea7\u8005\u8986\u76d6\u6570\u636e\u3002\n     * <p>\n     * \u5982\u679c\u6709\u6d88\u8d39\u8005\u53ef\u4ee5\u4e0d\u52a0\u5165\u5176Gating Sequence \uff0c\u5c31\u662f\u4e0d\u4fdd\u8bc1\u5176\u4f1a\u6d88\u8d39\u6240\u6709\u6d88\u606f\uff0c\u5c5e\u4e8e\u662f\u6d88\u8d39\u5230\u54ea\u4e9b\u5c31\u6d88\u8d39\u54ea\u4e9b\uff0c\u751f\u4ea7\u8005\u4e0d\u4f1a\u8003\u8651\u5176\u6d88\u8d39\u60c5\u51b5\u4e00\u76f4\u586b\u5165\u6570\u636e\u5373\u53ef\n     *\n     * @param gatingSequences The sequences to add.\n     */\n    void addGatingSequences(Sequence... gatingSequences);\n\n    /**\n     * Remove the specified sequence from this sequencer.\n     *\n     * @param sequence to be removed.\n     * @return <code>true</code> if this sequence was found, <code>false</code> otherwise.\n     */\n    boolean removeGatingSequence(Sequence sequence);\n\n    /**\n     * Create a new SequenceBarrier to be used by an EventProcessor to track which messages\n     * are available to be read from the ring buffer given a list of sequences to track.\n     * GatingSequence\u662f\u534f\u8c03\u6d88\u8d39\u8005\u548c\u751f\u4ea7\u8005\uff0c\u800cSequenceBarrier\u662f\u534f\u8c03\u591a\u6d88\u8d39\u8005\u6d88\u8d39\n     *\n     * @param sequencesToTrack All of the sequences that the newly constructed barrier will wait on.\n     * @return A sequence barrier that will track the specified sequences.\n     * @see SequenceBarrier\n     */\n    SequenceBarrier newBarrier(Sequence... sequencesToTrack);\n\n    /**\n     * Get the minimum sequence value from all of the gating sequences\n     * added to this ringBuffer.\n     *\n     * @return The minimum gating sequence or the cursor sequence if\n     * no sequences have been added.\n     * <P>\u751f\u4ea7\u8005\u80fd\u5b89\u5168\u7684\u751f\u4ea7\u6570\u636e\u7684\u4f4d\u7f6e\n     */\n    long getMinimumSequence();\n\n    /**\n     *\n     * <P>\u6d88\u8d39\u8005\u80fd\u5b89\u5168\u8bfb\u53d6\u5230\u7684\u4f4d\u7f6e\n     *\n     * @param nextSequence      The sequence to start scanning from.\n     * @param availableSequence The sequence to scan to.\n     * @return The highest value that can be safely read, will be at least <code>nextSequence - 1</code>.\n     */\n    long getHighestPublishedSequence(long nextSequence, long availableSequence);\n\n    /**\n     * Creates an event poller from this sequencer\n     * \u63d0\u4f9b\u57fa\u4e8e\u8f6e\u8be2\u7684\u65b9\u5f0f\u6765\u5904\u7406\u4e8b\u4ef6\n     *\n     * @param provider from which events are drawn\n     * @param gatingSequences sequences to be gated on\n     * @param <T> the type of the event\n     * @return the event poller\n     */\n    <T> EventPoller<T> newPoller(DataProvider<T> provider, Sequence... gatingSequences);\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"AbstractSequencer"}),"\u662fSequencer \u6838\u5fc3\u5b9e\u73b0\u62bd\u8c61\u7c7b\uff0c\u5176\u6700\u4e3b\u8981\u7684\u4e24\u4e2a\u5b9e\u73b0",(0,i.jsx)(n.code,{children:"MultiProducerSequencer"}),"\u548c",(0,i.jsx)(n.code,{children:"SingleProducerSequencer"}),"\u90fd\u7ee7\u627f\u81ea",(0,i.jsx)(n.code,{children:"AbstractSequencer"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'/**\n * Base class for the various sequencer types (single/multi).  Provides\n * common functionality like the management of gating sequences (add/remove) and\n * ownership of the current cursor.\n * <P>Sequencer \u7684\u6838\u5fc3\u5b9e\u73b0\u7c7b\u901a\u5e38\u662f\u7ee7\u627f\u81ea AbstractSequencer\uff0c\u5176\u63d0\u4f9b\u4e86 Sequencer \u7684\u57fa\u672c\u5b9e\u73b0\u548c\u4e00\u4e9b\u5171\u4eab\u7684\u529f\u80fd\u3002</P>\n */\npublic abstract class AbstractSequencer implements Sequencer\n{\n    private static final AtomicReferenceFieldUpdater<AbstractSequencer, Sequence[]> SEQUENCE_UPDATER =\n        AtomicReferenceFieldUpdater.newUpdater(AbstractSequencer.class, Sequence[].class, "gatingSequences");\n\n    protected final int bufferSize;\n    protected final WaitStrategy waitStrategy;\n    /**\n     * cursor\u662fAbstractSequencer\u7684\u6838\u5fc3\u53d8\u91cf\uff0c\u5728\u6574\u4e2aDisruptor\u6846\u67b6\u4e2d\uff0ccursor\u4e5f\u662f\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf\uff0c\u7528\u4e8e\u8ddf\u8e2a RingBuffer \u4e2d\u7684\u5f53\u524d\u5199\u5165\u4f4d\u7f6e\uff08\u5e8f\u5217\u53f7\uff09\u5373RingBuffer\u4e2d\u7684\u5199\u5165\u6307\u9488\uff0c\n     * \u8868\u793aRingBuffer\u7684\u5f53\u524d\u72b6\u6001\uff1a\u5373\u54ea\u4e9b\u6570\u636e\u662f\u53ef\u7528\u7684\uff0c\u54ea\u4e9b\u6570\u636e\u5df2\u7ecf\u53d1\u5e03\u5e76\u53ef\u4f9b\u6d88\u8d39\u8005\u8bfb\u53d6\u3002\n     * <p>\n     * \u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u901a\u8fc7 cursor \u6765\u95f4\u63a5\u8fdb\u884c\u540c\u6b65\u548c\u901a\u4fe1\uff0c\u751f\u4ea7\u8005\u66f4\u65b0 cursor\uff0c\u6d88\u8d39\u8005\u8bfb\u53d6 cursor \u6765\u51b3\u5b9a\u662f\u5426\u53ef\u4ee5\u7ee7\u7eed\u8bfb\u53d6\u6570\u636e\u3002\n     * \u56e0\u6b64\uff0c\u4e0d\u9700\u8981\u533a\u5206\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u7684cursor\uff0c\u8fd9\u7b80\u5316\u4e86\u540c\u6b65\u903b\u8f91\uff0c\u51cf\u5c11\u9501\u7684\u7ade\u4e89\u3002\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u901a\u8fc7 Sequence \u7c7b\u548c cursor \u8fdb\u884c\u65e0\u9501\u7684\u540c\u6b65\uff0c\u8fd9\u4e5f\u662f Disruptor \u9ad8\u6548\u7684\u539f\u56e0\u4e4b\u4e00\u3002\n     * <p>\n     * \u5177\u4f53\u7684\u751f\u4ea7\u8005\u548c\u6d88\u8d39\u8005\u64cd\u4f5c\uff1a\u5f53\u751f\u4ea7\u8005\u7ebf\u7a0b\u5199\u5165\u65b0\u7684\u4e8b\u4ef6\u6570\u636e\u5e76\u8c03\u7528publish\u65b9\u6cd5\u65f6\uff0ccursor\u4f1a\u88ab\u66f4\u65b0\u5230\u6700\u65b0\u7684\u5e8f\u5217\u53f7\uff0c\u8fd9\u610f\u5473\u7740\uff0ccursor \u59cb\u7ec8\u8868\u793a\u6700\u8fd1\u53d1\u5e03\u7684\u4e8b\u4ef6\u7684\u4f4d\u7f6e\uff08\u6216\u5e8f\u5217\u53f7\uff09\u3002\n     * \u800c\u6d88\u8d39\u8005\u901a\u8fc7 SequenceBarrier \u6216 Sequencer.getHighestPublishedSequence() \u65b9\u6cd5\u83b7\u53d6 cursor \u7684\u503c\u6765\u786e\u5b9a\u53ef\u4ee5\u6d88\u8d39\u7684\u6570\u636e\u7684\u8303\u56f4\u3002\n     */\n    protected final Sequence cursor = new Sequence(Sequencer.INITIAL_CURSOR_VALUE);\n    protected volatile Sequence[] gatingSequences = new Sequence[0];\n\n    /**\n     * Create with the specified buffer size and wait strategy.\n     *\n     * @param bufferSize   The total number of entries, must be a positive power of 2.\n     * @param waitStrategy The wait strategy used by this sequencer\n     */\n    public AbstractSequencer(final int bufferSize, final WaitStrategy waitStrategy)\n    {\n        if (bufferSize < 1)\n        {\n            throw new IllegalArgumentException("bufferSize must not be less than 1");\n        }\n        if (Integer.bitCount(bufferSize) != 1)\n        {\n            throw new IllegalArgumentException("bufferSize must be a power of 2");\n        }\n\n        this.bufferSize = bufferSize;\n        this.waitStrategy = waitStrategy;\n    }\n\n    /**\n     * @see Sequencer#getCursor()\n     */\n    @Override\n    public final long getCursor()\n    {\n        return cursor.get();\n    }\n\n    /**\n     * @see Sequencer#getBufferSize()\n     */\n    @Override\n    public final int getBufferSize()\n    {\n        return bufferSize;\n    }\n\n    /**\n     * @see Sequencer#addGatingSequences(Sequence...)\n     */\n    @Override\n    public final void addGatingSequences(final Sequence... gatingSequences)\n    {\n        SequenceGroups.addSequences(this, SEQUENCE_UPDATER, this, gatingSequences);\n    }\n\n    /**\n     * @see Sequencer#removeGatingSequence(Sequence)\n     */\n    @Override\n    public boolean removeGatingSequence(final Sequence sequence)\n    {\n        return SequenceGroups.removeSequence(this, SEQUENCE_UPDATER, sequence);\n    }\n\n    /**\n     * @see Sequencer#getMinimumSequence()\n     */\n    @Override\n    public long getMinimumSequence()\n    {\n        return Util.getMinimumSequence(gatingSequences, cursor.get());\n    }\n\n    /**\n     * @see Sequencer#newBarrier(Sequence...)\n     */\n    @Override\n    public SequenceBarrier newBarrier(final Sequence... sequencesToTrack)\n    {\n        // SequenceBarrier\u5b9e\u73b0\u90fd\u662f\u5728 ProcessingSequenceBarrier \u4e2d\u5c06\u591a\u4e2asequencesToTrack\u8f6c\u5316\u6210FixedSequenceGroup\u6765\u7b80\u5316\u5904\u7406\u7684\uff0c\u56e0\u4e3a\u5176\u5b9e\u53ea\u9700\u8981\u5173\u6ce8\u6700\u5c0f\u7684\u4e00\u4e2aSequence\u5373\u53ef\n        return new ProcessingSequenceBarrier(this, waitStrategy, cursor, sequencesToTrack);\n    }\n\n    @Override\n    public <T> EventPoller<T> newPoller(final DataProvider<T> dataProvider, final Sequence... gatingSequences)\n    {\n        return EventPoller.newInstance(dataProvider, this, new Sequence(), cursor, gatingSequences);\n    }\n\n    @Override\n    public String toString()\n    {\n        return "AbstractSequencer{" +\n            "waitStrategy=" + waitStrategy +\n            ", cursor=" + cursor +\n            ", gatingSequences=" + Arrays.toString(gatingSequences) +\n            \'}\';\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"\u6d88\u8d39",children:"\u6d88\u8d39"}),"\n",(0,i.jsx)(n.h4,{id:"\u6d88\u8d39\u903b\u8f91\u5904\u7406-eventhandler",children:"\u6d88\u8d39\u903b\u8f91\u5904\u7406 EventHandler"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"EventHandler"}),"\u5c31\u662f\u6d88\u8d39\u6570\u636e\u7684\u6d88\u8d39\u903b\u8f91\u5b9e\u73b0\u63a5\u53e3\uff0c\u5373\u7528\u6237\u8981\u81ea\u5b9a\u4e49\u7684\u6d88\u8d39\u903b\u8f91\u5b9e\u73b0"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"/**\n * Callback interface to be implemented for processing events as they become available in the {@link RingBuffer}\n * \u6d88\u8d39\u6570\u636e\u7684\u6d88\u8d39\u903b\u8f91\u5b9e\u73b0\u63a5\u53e3\n *\n * @param <T> event implementation storing the data for sharing during exchange or parallel coordination of an event.\n * @see BatchEventProcessor#setExceptionHandler(ExceptionHandler) if you want to handle exceptions propagated out of the handler.\n */\npublic interface EventHandler<T> extends EventHandlerBase<T>\n{\n\n    @Override\n    void onEvent(T event, long sequence, boolean endOfBatch) throws Exception;\n\n    /**\n     *  <p>\u5728\u67d0\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\uff0c\u5141\u8bb8 EventHandler\uff08\u4e8b\u4ef6\u5904\u7406\u5668\uff09\u5728\u5904\u7406\u5b8c\u4e8b\u4ef6\u540e\uff0c\u901a\u8fc7\u56de\u8c03\u901a\u77e5 BatchEventProcessor \u5176\u5df2\u7ecf\u5b8c\u6210\u4e86\u4e8b\u4ef6\u7684\u5904\u7406\u3002\n     *  \u8fd9\u901a\u5e38\u7528\u4e8e\u90a3\u4e9b\u5904\u7406\u8fc7\u7a0b\u4e2d\u6d89\u53ca\u5230\u5ef6\u8fdf\u6216\u6279\u5904\u7406\u64cd\u4f5c\u7684\u573a\u666f\uff0c\u6bd4\u5982\u5199\u5165 I/O \u8bbe\u5907\u3002\n     * @param sequenceCallback callback on which to notify the {@link BatchEventProcessor} that the sequence has progressed.\n     */\n    default void setSequenceCallback(Sequence sequenceCallback)\n    {\n    }\n}\n\n"})}),"\n",(0,i.jsx)(n.h4,{id:"\u6d88\u8d39\u6d41\u7a0b\u63a7\u5236-eventprocessor",children:"\u6d88\u8d39\u6d41\u7a0b\u63a7\u5236 EventProcessor"}),"\n",(0,i.jsxs)(n.p,{children:["\u4e0a\u9762\u7684",(0,i.jsx)(n.code,{children:"EventHandler"}),"\u624d\u662f\u5b9e\u9645\u7684\u6d88\u8d39\u8005\u9700\u8981\u81ea\u5df1\u5b9e\u73b0\uff0c\u800c",(0,i.jsx)(n.code,{children:"EventProcessor"}),"\u5219\u53ea\u662f\u4e00\u4e2a\u7ba1\u7406\u63a5\u53e3\uff0c\u4e0d\u9700\u8981\u81ea\u5df1\u5b9e\u73b0\uff1b",(0,i.jsx)(n.code,{children:"EventProcessor"}),"\u7684\u5b9e\u73b0\u662f\u63d0\u4f9b\u5bf9\u6d88\u8d39\u8fc7\u7a0b\u7684\u7ba1\u7406\uff0c\u5b9e\u9645\u7684\u4e8b\u4ef6\u5904\u7406\u662f\u59d4\u6258\u7ed9 ",(0,i.jsx)(n.code,{children:"EventHandler"}),"\u5904\u7406\u7684\u3002"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"EventProcessor"}),"\u548c",(0,i.jsx)(n.code,{children:"link EventHandler"}),"\u662f\u4e00\u5bf9\u4e00\u7684: EventProcessor \u662f\u4e8b\u4ef6\u5904\u7406\u7684\u7ba1\u7406\u8005\uff0c\u5b83\u5c06\u4e8b\u4ef6\u4f20\u9012\u7ed9 EventHandler \u8fdb\u884c\u5b9e\u9645\u5904\u7406\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"EventProcessor"}),"\u4e3b\u8981\u8d1f\u8d23\u63a7\u5236\u6d41\uff0c\u5176\u7ee7\u627f",(0,i.jsx)(n.code,{children:"Runnable"}),"\u53ef\u4ee5\u5728\u72ec\u7acb\u7684\u7ebf\u7a0b\u4e2d\u8fd0\u884c\uff0c\u5f00\u59cb\u542f\u52a8\u6d88\u8d39\u4e5f\u662f\u7531",(0,i.jsx)(n.code,{children:"EventProcessor"}),"\u6765\u5b9e\u73b0runable\u5728\u7ebf\u7a0b\u4e2d\u8c03\u7528run\u65b9\u6cd5\u8fd0\u884c\u7684\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"public interface EventProcessor extends Runnable\n{\n    /**\n     * Get a reference to the {@link Sequence} being used by this {@link EventProcessor}.\n     *\n     * @return reference to the {@link Sequence} for this {@link EventProcessor}\n     */\n    Sequence getSequence();\n\n    /**\n     * Signal that this EventProcessor should stop when it has finished consuming at the next clean break.\n     * It will call {@link SequenceBarrier#alert()} to notify the thread to check status.\n     */\n    void halt();\n\n    /**\n     * @return whether this event processor is running or not\n     * Implementations should ideally return false only when the associated thread is idle.\n     */\n    boolean isRunning();\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["\u6838\u5fc3\u5b9e\u73b0\u7c7b\u662f",(0,i.jsx)(n.code,{children:"BatchEventProcessor"}),"\uff0c",(0,i.jsx)(n.code,{children:"BatchEventProcessor"}),"\u4e5f\u662f\u6574\u4e2a",(0,i.jsx)(n.code,{children:"Disruptor"}),"\u6d88\u8d39\u903b\u8f91\u4e2d\u6267\u884c\u6d41\u7a0b\u7684\u6838\u5fc3\uff0c\u81ea\u5b9a\u4e49\u7684\u6240\u6709\u7b56\u7565\u90fd\u7531\u6b64\u7c7b\u6765\u8c03\u7528\u548c\u534f\u8c03\uff0c\u5176\u6700\u6838\u5fc3\u7684\u65b9\u6cd5\u5c31\u662f",(0,i.jsx)(n.code,{children:"processEvents"}),"\u3002"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'/**\n * Convenience class for handling the batching semantics of consuming entries from a {@link RingBuffer}\n * and delegating the available events to an {@link EventHandler}.\n *  EventProcessor \u7684\u6838\u5fc3\u5b9e\u73b0\u7c7b\uff0c\u63a7\u5236\u6574\u4f53Disruptor\u6d88\u8d39\u6d41\u7a0b\u7684\u6838\u5fc3\u7c7b\n *  EventProcessor\u548cevent Handler\u4e00\u5bf9\u4e00\uff0c\u548csequence\u4e5f\u662f\u4e00\u5bf9\u4e00\uff0c\u5e76\u4e14\u540c\u4e00\u4e2aRingBuffer\u91cc\u9762\u662f\u53ef\u4ee5\u542f\u52a8\u591a\u4e2aEventProcessor\n *\n * @param <T> event implementation storing the data for sharing during exchange or parallel coordination of an event.\n */\npublic final class BatchEventProcessor<T>\n        implements EventProcessor\n{\n    private static final int IDLE = 0;\n    private static final int HALTED = IDLE + 1;\n    private static final int RUNNING = HALTED + 1;\n\n    private final AtomicInteger running = new AtomicInteger(IDLE);\n    private ExceptionHandler<? super T> exceptionHandler;\n    private final DataProvider<T> dataProvider;\n    private final SequenceBarrier sequenceBarrier;\n    private final EventHandlerBase<? super T> eventHandler;\n    private final int batchLimitOffset;\n    private final Sequence sequence = new Sequence(Sequencer.INITIAL_CURSOR_VALUE);\n    private final RewindHandler rewindHandler;\n    private int retriesAttempted = 0;\n\n    BatchEventProcessor(\n            final DataProvider<T> dataProvider,\n            final SequenceBarrier sequenceBarrier,\n            final EventHandlerBase<? super T> eventHandler,\n            final int maxBatchSize,\n            final BatchRewindStrategy batchRewindStrategy\n    )\n    {\n        this.dataProvider = dataProvider;\n        this.sequenceBarrier = sequenceBarrier;\n        this.eventHandler = eventHandler;\n\n        if (maxBatchSize < 1)\n        {\n            throw new IllegalArgumentException("maxBatchSize must be greater than 0");\n        }\n        this.batchLimitOffset = maxBatchSize - 1;\n\n        this.rewindHandler = eventHandler instanceof RewindableEventHandler\n                ? new TryRewindHandler(batchRewindStrategy)\n                : new NoRewindHandler();\n    }\n\n    @Override\n    public Sequence getSequence()\n    {\n        return sequence;\n    }\n\n    @Override\n    public void halt()\n    {\n        running.set(HALTED);\n        sequenceBarrier.alert();\n    }\n\n    @Override\n    public boolean isRunning()\n    {\n        return running.get() != IDLE;\n    }\n\n    /**\n     * Set a new {@link ExceptionHandler} for handling exceptions propagated out of the {@link BatchEventProcessor}.\n     *\n     * @param exceptionHandler to replace the existing exceptionHandler.\n     */\n    public void setExceptionHandler(final ExceptionHandler<? super T> exceptionHandler)\n    {\n        if (null == exceptionHandler)\n        {\n            throw new NullPointerException();\n        }\n\n        this.exceptionHandler = exceptionHandler;\n    }\n\n    /**\n     * It is ok to have another thread rerun this method after a halt().\n     *\n     * @throws IllegalStateException if this object instance is already running in a thread\n     */\n    @Override\n    public void run()\n    {\n        int witnessValue = running.compareAndExchange(IDLE, RUNNING);\n        // compareAndExchange\uff0c\u8fd4\u56de\u7684\u5b9e\u9645\u4e0a\u5c31\u662f\u539f\u6709\u7684\u503c\uff0c\u5982\u679c\u539f\u6709\u7684\u503c==expectedValue\u5219\u8bbe\u7f6e\u6210\u529f\uff0c\u5982\u679c!=expectedValue\u5219\u8bbe\u7f6e\u5931\u8d25\u3002\n        if (witnessValue == IDLE) // Successful CAS\n        {\n            sequenceBarrier.clearAlert();\n\n            notifyStart();\n            try\n            {\n                if (running.get() == RUNNING)\n                {\n                    processEvents();\n                }\n            }\n            finally\n            {\n                notifyShutdown();\n                running.set(IDLE);\n            }\n        }\n        else\n        {\n            if (witnessValue == RUNNING)\n            {\n                throw new IllegalStateException("Thread is already running");\n            }\n            else\n            {\n                earlyExit();\n            }\n        }\n    }\n\n    /**\n     *  BatchEventProcessor \u5904\u7406\u4e8b\u4ef6\u7684\u6838\u5fc3\u5faa\u73af\u3002\u4e0d\u65ad\u5730\u4ece RingBuffer \u4e2d\u83b7\u53d6\u4e8b\u4ef6\uff0c\u5e76\u4ea4\u7ed9 EventHandler \u5904\u7406\uff0c\u540c\u65f6\u5904\u7406\u5f02\u5e38\u3001\u91cd\u8bd5\u673a\u5236\u548c\u8d85\u65f6\u7b49\u60c5\u51b5\u3002\n     *  \u6d88\u8d39\u8005\u6d88\u8d39\u6570\u636e\u90fd\u662f\u901a\u8fc7WaitStrategy\u548c\u751f\u4ea7\u8005\u534f\u8c03\uff0c\u5e76\u4e14\u901a\u8fc7\u81ea\u5df1\u7ef4\u62a4\u7684Sequence\u6765\u8bb0\u5f55\u81ea\u5df1\u7684\u4f4d\u7f6e\uff0c\u6bcf\u4e2a\u6d88\u8d39\u8005\u90fd\u662f\u72ec\u7acb\u7684Sequence\uff0c\u800c\u4e14\u662f\u4e00\u5bf9\u4e00\u7684\uff0c\n     *  \u5e76\u5728final long availableSequence = sequenceBarrier.waitFor(nextSequence);\u4e2d\u4e0d\u65ad\u7684\u83b7\u53d6\u5f53\u524d\u53ef\u7528\u7684\u548c\u6279\u5904\u7406\u6570\u91cf\u9650\u5236\u4e4b\u95f4\u7684\u6700\u5c0f\u503c\u6765\u5904\u7406\u6570\u636e\u7684\u3002\n     *  <p>\n     *  \u57284.0\u7684Disruptor\u4e2d\u79fb\u9664\u4e86WorkerPool\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u591a\u4e2a\u6d88\u8d39\u8005\u6765\u5171\u4eab\u4e00\u4e2aSequence\u3002\uff08disruptor \u79fb\u9664 WorkerPool\u6211\u7406\u89e3\u8fd8\u662f\u57fa\u4e8e\u6027\u80fd\u7684\u8003\u8651\uff0c\n     *  \u56e0\u4e3aWorkerPool\u4e2d\u591a\u6d88\u8d39\u8005\u5171\u4eab\u4e00\u4e2aSequence\u5fc5\u7136\u8981\u4ea7\u751f\u7ade\u4e89\u5b58\u5728\u540c\u6b65\u6d88\u8017\uff0c\u800c\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5219\u4e0d\u7528\u540c\u6b65sequence\uff0c\n     *  \u5982\u679c\u8981\u591a\u4e2a\u7ebf\u7a0b\u63d0\u5347\u5e76\u884c\u5ea6\u90a3\u53ef\u4ee5\u5728\u81ea\u5df1\u7684eventHandler\u4e2d\u4f7f\u7528ForkJoin\u4e4b\u7c7b\u7684\u6765\u5904\u7406\u4e5f\u662f\u4e00\u6837\u7684\u8fd9\u6837\u4e5f\u53ef\u4ee5\u5e76\u884c\u6d88\u8d39\u800c\u4e14\u8fd8\u6ca1\u6709\u540c\u6b65sequence\u6d88\u8017\u3002\uff09\n     *  <pre>{@code\n     *     class MyEventHandler implements EventHandler<MyEvent> {\n     *     private final ForkJoinPool forkJoinPool = new ForkJoinPool();\n     *\n     *     @Override\n     *     public void onEvent(MyEvent event, long sequence, boolean endOfBatch) {\n     *         // ForkJoinPool \u7528\u4e8e\u5e76\u884c\u5904\u7406\u4e8b\u4ef6\n     *         forkJoinPool.submit(() -> {\n     *             // \u6267\u884c\u4e8b\u4ef6\u5904\u7406\u903b\u8f91\n     *             System.out.println("Processing event: " + event.getData());\n     *         }).join();\n     *     }\n     * }\n     *  }\n     */\n    private void processEvents()\n    {\n        T event = null;\n        long nextSequence = sequence.get() + 1L;\n\n        while (true)\n        {\n            final long startOfBatchSequence = nextSequence;\n            try\n            {\n                try\n                {\n                    final long availableSequence = sequenceBarrier.waitFor(nextSequence);\n                    final long endOfBatchSequence = min(nextSequence + batchLimitOffset, availableSequence);\n\n                    if (nextSequence <= endOfBatchSequence)\n                    {\n                        eventHandler.onBatchStart(endOfBatchSequence - nextSequence + 1, availableSequence - nextSequence + 1);\n                    }\n\n                    while (nextSequence <= endOfBatchSequence)\n                    {\n                        event = dataProvider.get(nextSequence);\n                        // \u8fd9\u91cc\u6570\u636e\u5df2\u7ecf\u901a\u8fc7event = dataProvider.get(nextSequence);\u53d6\u51fa\u6765\u4e86\uff0c\n                        // \u6b64\u65f6\u8fd9\u4e2aonEvent\u65b9\u6cd5\u5c31\u662f\u5728\u6267\u884c\u6d88\u8d39\u903b\u8f91\uff0c\u800csequence\u662f\u544a\u8bc9\u5904\u7406\u903b\u8f91RingBuffer\u4e2d\u7684\u4f4d\u7f6e\uff0cendOfBatch\u662f\u5426\u662f\u6b64\u6279\u91cf\u7684\u6700\u540e\u4e00\u4e2a\n                        eventHandler.onEvent(event, nextSequence, nextSequence == endOfBatchSequence);\n                        nextSequence++;\n                    }\n\n                    retriesAttempted = 0;\n                    // \u63a8\u8fdb\u81ea\u5df1\u7684 sequence\n                    sequence.set(endOfBatchSequence);\n                }\n                catch (final RewindableException e)\n                {\n                    // \u8fd9\u91cc\u5c31\u662f RewindableException\u5f02\u5e38\u7684\u5904\u7406\uff0c\u5c06\u6e38\u6807\u4f5c\u56de\u6eda\uff0c\u662f\u5426\u56de\u6eda\u770b\u6784\u9020\u5668\u4e2d\u4f20\u5165\u7684\u662f\u5426\u662f RewindableEventHandler\n                    nextSequence = rewindHandler.attemptRewindGetNextSequence(e, startOfBatchSequence);\n                }\n            }\n            catch (final TimeoutException e)\n            {\n                notifyTimeout(sequence.get());\n            }\n            catch (final AlertException ex)\n            {\n                if (running.get() != RUNNING)\n                {\n                    break;\n                }\n            }\n            catch (final Throwable ex)\n            {\n                handleEventException(ex, nextSequence, event);\n                sequence.set(nextSequence);\n                nextSequence++;\n            }\n        }\n    }\n\n    private void earlyExit()\n    {\n        notifyStart();\n        notifyShutdown();\n    }\n\n    private void notifyTimeout(final long availableSequence)\n    {\n        try\n        {\n            eventHandler.onTimeout(availableSequence);\n        }\n        catch (Throwable e)\n        {\n            handleEventException(e, availableSequence, null);\n        }\n    }\n\n    /**\n     * Notifies the EventHandler when this processor is starting up.\n     */\n    private void notifyStart()\n    {\n        try\n        {\n            eventHandler.onStart();\n        }\n        catch (final Throwable ex)\n        {\n            handleOnStartException(ex);\n        }\n    }\n\n    /**\n     * Notifies the EventHandler immediately prior to this processor shutting down.\n     */\n    private void notifyShutdown()\n    {\n        try\n        {\n            eventHandler.onShutdown();\n        }\n        catch (final Throwable ex)\n        {\n            handleOnShutdownException(ex);\n        }\n    }\n\n    /**\n     * Delegate to {@link ExceptionHandler#handleEventException(Throwable, long, Object)} on the delegate or\n     * the default {@link ExceptionHandler} if one has not been configured.\n     */\n    private void handleEventException(final Throwable ex, final long sequence, final T event)\n    {\n        getExceptionHandler().handleEventException(ex, sequence, event);\n    }\n\n    /**\n     * Delegate to {@link ExceptionHandler#handleOnStartException(Throwable)} on the delegate or\n     * the default {@link ExceptionHandler} if one has not been configured.\n     */\n    private void handleOnStartException(final Throwable ex)\n    {\n        getExceptionHandler().handleOnStartException(ex);\n    }\n\n    /**\n     * Delegate to {@link ExceptionHandler#handleOnShutdownException(Throwable)} on the delegate or\n     * the default {@link ExceptionHandler} if one has not been configured.\n     */\n    private void handleOnShutdownException(final Throwable ex)\n    {\n        getExceptionHandler().handleOnShutdownException(ex);\n    }\n\n    private ExceptionHandler<? super T> getExceptionHandler()\n    {\n        ExceptionHandler<? super T> handler = exceptionHandler;\n        return handler == null ? ExceptionHandlers.defaultHandler() : handler;\n    }\n\n    private class TryRewindHandler implements RewindHandler\n    {\n        private final BatchRewindStrategy batchRewindStrategy;\n\n        TryRewindHandler(final BatchRewindStrategy batchRewindStrategy)\n        {\n            this.batchRewindStrategy = batchRewindStrategy;\n        }\n\n        @Override\n        public long attemptRewindGetNextSequence(final RewindableException e, final long startOfBatchSequence) throws RewindableException\n        {\n            if (batchRewindStrategy.handleRewindException(e, ++retriesAttempted) == REWIND)\n            {\n                return startOfBatchSequence;\n            }\n            else\n            {\n                retriesAttempted = 0;\n                throw e;\n            }\n        }\n    }\n\n    private static class NoRewindHandler implements RewindHandler\n    {\n        @Override\n        public long attemptRewindGetNextSequence(final RewindableException e, final long startOfBatchSequence)\n        {\n            throw new UnsupportedOperationException("Rewindable Exception thrown from a non-rewindable event handler", e);\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"\u591a\u6d88\u8d39\u8005\u7684\u534f\u8c03",children:"\u591a\u6d88\u8d39\u8005\u7684\u534f\u8c03"}),"\n",(0,i.jsxs)(n.p,{children:["\u53ef\u4ee5\u6709\u591a\u4e2a\u6d88\u8d39\u8005\uff0c\u6bcf\u4e2a\u6d88\u8d39\u8005\u7ef4\u62a4\u81ea\u5df1\u7684",(0,i.jsx)(n.code,{children:"Seqeunce"}),"\uff0c\u5e76\u4e14\u6d88\u8d39\u8005\u4e4b\u95f4\u662f\u53ef\u4ee5\u76f8\u4e92\u4f9d\u8d56\u7684\u3002\u591a\u6d88\u8d39\u7684\u534f\u8c03\u90fd\u662f\u901a\u8fc7",(0,i.jsx)(n.code,{children:"SequenceBarrier"}),"\u63a5\u53e3\u6765\u5904\u7406\u7684\uff0c\u5e76\u4e14\u6d88\u8d39\u4f9d\u8d56\u4e5f\u662f\u901a\u8fc7",(0,i.jsx)(n.code,{children:"com.lmax.disruptor.RingBuffer#newBarrier(final Sequence... sequencesToTrack)"}),"\u65b9\u6cd5\u521b\u5efa\u5e76\u7531",(0,i.jsx)(n.code,{children:"SequenceBarrier"}),"\u7ef4\u62a4\u4f9d\u8d56\u5173\u7cfb\u7684\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"SequenceBarrier"}),"\u7684\u6838\u5fc3\u5b9e\u73b0\u5c31\u662f",(0,i.jsx)(n.code,{children:"ProcessingSequenceBarrier"}),"\uff0c\u5176\u5b9e\u73b0\u591a\u6d88\u8d39\u4f9d\u8d56\u7684\u5173\u7cfb\u4e5f\u7279\u522b\u7b80\u5355\uff0c\u5c31\u662f\u59d4\u6258\u7ed9WaitStrategy\u7684waitFor\u65b9\u6cd5\uff0c\u56e0\u4e3a\u65e0\u8bba\u662f\u751f\u4ea7\u8005\u8ddf\u4e0d\u4e0a\u6d88\u8d39\u8005\u8fd8\u662f\u524d\u9762\u7684\u6d88\u8d39\u8005\u8ddf\u4e0d\u4e0a\u540e\u9762\u7684\u6d88\u8d39\u8005\uff0c\u672c\u8d28\u90fd\u662f\u9700\u8981\u5904\u7406\u7b49\u5f85\u7b56\u7565\u7684\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"/**\n * {@link SequenceBarrier} handed out for gating {@link EventProcessor}s on a cursor sequence and optional dependent {@link EventProcessor}(s),\n * using the given WaitStrategy.\n * <p>\n *  ProcessingSequenceBarrier\u5b9e\u73b0\u4e86SequenceBarrier\uff0c\u800c\u4e14SequenceBarrier\u7684\u5b9e\u73b0\u5728Disruptor\u4e2d\u8fd8\u662f\u4ec5\u6709\u7684\u5b9e\u73b0\u7c7b\uff0c\u4e3b\u8981\u63d0\u4f9b\u4e24\u4e2a\u529f\u80fd\uff1a\n *  1.\u7ef4\u62a4\u6d88\u8d39\u8005\u6240\u9700\u7684\u5e8f\u5217\u72b6\u6001\uff0c\u534f\u8c03\u6d88\u8d39\u8005\u548c\u751f\u4ea7\u8005\u4e4b\u95f4\u7684\u6570\u636e\u6d41\u52a8\u30022.\u68c0\u67e5\u4e2d\u65ad\u548c\u8b66\u62a5\uff1a\u5b9e\u73b0 checkAlert() \u65b9\u6cd5\uff0c\u4ee5\u5141\u8bb8\u7cfb\u7edf\u5728\u9700\u8981\u65f6\u8fdb\u884c\u5b89\u5168\u7684\u4e2d\u65ad\u6216\u91cd\u7f6e\u64cd\u4f5c\u3002\n * <p>\n *  \u5177\u4f53\u5728\u5b9e\u73b0SequenceBarrier\u529f\u80fd\u65f6\uff0c\u6838\u5fc3\u529f\u80fd\u662f\u4f9d\u8d56WaitStrategy\u4e0d\u540c\u7684\u5b9e\u73b0\u7c7b\u6765\u5904\u7406\u7684\n */\nfinal class ProcessingSequenceBarrier implements SequenceBarrier\n{\n    private final WaitStrategy waitStrategy;\n    private final Sequence dependentSequence;\n    private volatile boolean alerted = false;\n    private final Sequence cursorSequence;\n    private final Sequencer sequencer;\n\n    ProcessingSequenceBarrier(\n        final Sequencer sequencer,\n        final WaitStrategy waitStrategy,\n        final Sequence cursorSequence,\n        final Sequence[] dependentSequences)\n    {\n        this.sequencer = sequencer;\n        this.waitStrategy = waitStrategy;\n        this.cursorSequence = cursorSequence;\n        if (0 == dependentSequences.length)\n        {\n            dependentSequence = cursorSequence;\n        }\n        else\n        {\n            /*\n             * \u5982\u679c dependentSequences\uff08\u8981\u4f9d\u8d56\u7684\u5e8f\u5217\uff09\u4e0d\u4e3a\u7a7a\uff0c\u90a3\u4e48\u521b\u5efa\u4e00\u4e2a FixedSequenceGroup \u6765\u5305\u542b\u8fd9\u4e9b dependentSequences\u3002\n             * \u56e0\u4e3a\u65e0\u8bba\u591a\u5c11\u4e2a dependentSequences\uff0c\u90fd\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a FixedSequenceGroup \u6765\u7edf\u4e00\u5904\u7406\u548c\u83b7\u53d6\u6700\u5c0f\u503c\u3002\n             */\n            dependentSequence = new FixedSequenceGroup(dependentSequences);\n        }\n    }\n\n    @Override\n    public long waitFor(final long sequence)\n        throws AlertException, InterruptedException, TimeoutException\n    {\n        checkAlert();\n\n        long availableSequence = waitStrategy.waitFor(sequence, cursorSequence, dependentSequence, this);\n\n        if (availableSequence < sequence)\n        {\n            return availableSequence;\n        }\n\n        return sequencer.getHighestPublishedSequence(sequence, availableSequence);\n    }\n\n    @Override\n    public long getCursor()\n    {\n        return dependentSequence.get();\n    }\n\n    @Override\n    public boolean isAlerted()\n    {\n        return alerted;\n    }\n\n    @Override\n    public void alert()\n    {\n        alerted = true;\n        waitStrategy.signalAllWhenBlocking();\n    }\n\n    @Override\n    public void clearAlert()\n    {\n        alerted = false;\n    }\n\n    @Override\n    public void checkAlert() throws AlertException\n    {\n        if (alerted)\n        {\n            throw AlertException.INSTANCE;\n        }\n    }\n}\n"})}),"\n",(0,i.jsx)(n.h4,{id:"\u7b49\u5f85\u7b56\u7565",children:"\u7b49\u5f85\u7b56\u7565"}),"\n",(0,i.jsxs)(n.p,{children:["\u5b9a\u4e49Disruptor \u6846\u67b6\u4e2d\u7684\u7b49\u5f85\u7b56\u7565\uff0c\u4e24\u4e2a\u65b9\u6cd5\u7c7b\u4f3c\u4e8eJava\u4e2d\u7684",(0,i.jsx)(n.code,{children:"wait"}),"\u548c",(0,i.jsx)(n.code,{children:"notifyAll"}),"\u65b9\u6cd5"]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"BlockingWaitStrateg"})," \u4f7f\u7528",(0,i.jsx)(n.code,{children:"synchronized"}),"\u963b\u585e\u7684\u65b9\u5f0f\u6765\u7b49\u5f85\u6570\u636e\u7684\u5230\u6765\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"LiteBlockingWaitStrategy"})," \u6211\u7406\u89e3\u6574\u4f53\u903b\u8f91\u548c",(0,i.jsx)(n.code,{children:"BlockingWaitStrategy"}),"\u4e00\u81f4\uff0c\u4f46\u4f7f\u7528\u4e86\u4e00\u4e2a",(0,i.jsx)(n.code,{children:"AtomicBoolean - signalNeeded"}),"\u6765\u907f\u514d",(0,i.jsx)(n.code,{children:"notifyAll"}),"\u7684\u60ca\u7fa4\u6548\u5e94\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"SleepingWaitStrategy"})," \u5728\u7b49\u5f85\u65f6\u4f7f\u7528\u7ebf\u7a0b\u4f11\u7720\u7684\u65b9\u5f0f\u6765\u51cf\u5c11 CPU \u7684\u6d88\u8017\u3002\u8fd9\u79cd\u7b56\u7565\u662f\u6027\u80fd\u548cCPU\u8d44\u6e90\u4e4b\u95f4\u7684\u4e00\u4e2a\u5f88\u597d\u7684\u6298\u8877\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"YieldingWaitStrategy"})," \u901a\u8fc7\u5148\u81ea\u65cb\uff0c\u81ea\u65cb",(0,i.jsx)(n.code,{children:"SPIN_TRIES"}),"\u6b21\u540e\u81ea\u65cb\u7136\u540e",(0,i.jsx)(n.code,{children:"yield"}),"\u3002\u54cd\u5e94\u6781\u5feb\u4f46\u5982\u679c\u7e41\u5fd9\u65f6\uff0c\u7b49\u5f85\u66f4\u4e45\u7684\u7ebf\u7a0b\u53cd\u5012\u4f1a\u653e\u5f03CPU\u65f6\u95f4\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"BusySpinWaitStrategy"})," \u5728\u7b49\u5f85\u671f\u95f4\u5168\u7a0b",(0,i.jsx)(n.code,{children:"Thread.onSpinWait()"}),"\u81ea\u65cb\uff0c\u9002\u7528\u4e8e\u4f4e\u5ef6\u8fdf\u4e14\u5904\u7406\u80fd\u529b\u5f3a\u7684\u573a\u666f\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"TimeoutBlockingWaitStrategy"}),"  \u5f53\u963b\u585e\u65f6\u901a\u8fc7\u5468\u671f\u6027\u7684\u629b\u51fa",(0,i.jsx)(n.code,{children:"TimeoutException"}),"\u6765\u5524\u9192\u5e76\u7ee7\u7eed\u6267\u884c\uff0c\u5f53\u541e\u5410\u91cf\u548c\u4f4e\u5ef6\u8fdf\u4e0d\u5982CPU\u8d44\u6e90\u91cd\u8981\u65f6\u4f7f\u7528\u8fd9\u79cd\u7b56\u7565\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"LiteTimeoutBlockingWaitStrategy"}),"\uff0c",(0,i.jsx)(n.code,{children:"TimeoutBlockingWaitStrategy"}),"\u7684\u53d8\u4f53\uff0c\u4e5f\u662f\u901a\u8fc7\u4f7f\u7528\u4e86\u4e00\u4e2a",(0,i.jsx)(n.code,{children:"AtomicBoolean signalNeeded"}),"\u6765\u6ca1\u6709\u4e89\u7528\u5730\u5524\u9192"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"PhasedBackoffWaitStrategy"})," \u5206\u9636\u6bb5\u7b49\u5f85\u7b56\u7565\uff0c\u5f53\u541e\u5410\u91cf\u548c\u4f4e\u5ef6\u8fdf\u4e0d\u5982CPU\u8d44\u6e90\u91cd\u8981\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fd9\u79cd\u7b56\u7565\u3002\u5148",(0,i.jsx)(n.code,{children:"Spins"}),"\uff0c\u7136\u540e",(0,i.jsx)(n.code,{children:"yield"}),"\uff0c\u6700\u540e\u518d\u4f7f\u7528\u914d\u7f6e\u7684\u7b49\u5f85\u7b56\u7565"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"public interface WaitStrategy\n{\n    /**\n     * Wait for the given sequence to be available.  It is possible for this method to return a value\n     * less than the sequence number supplied depending on the implementation of the WaitStrategy.  A common\n     * use for this is to signal a timeout.  Any EventProcessor that is using a WaitStrategy to get notifications\n     * about message becoming available should remember to handle this case.  The {@link BatchEventProcessor} explicitly\n     * handles this case and will signal a timeout if required.\n     *\n     * @param sequence          to be waited on.\u8981\u7b49\u5f85\u7684\u76ee\u6807\u5e8f\u5217\u53f7\uff0c\u6d88\u8d39\u8005\u4f1a\u963b\u585e\u7b49\u5f85\uff0c\u76f4\u5230\u8fd9\u4e2a\u5e8f\u5217\u53f7\u7684\u6570\u636e\u53ef\u7528\n     * @param cursor            the main sequence from ringbuffer. Wait/notify strategies will\n     *                          need this as it's the only sequence that is also notified upon update.\uff0ccursor \u6307\u793a Ring Buffer \u4e2d\u5f53\u524d\u5df2\u88ab\u5199\u5165\u7684\u6700\u65b0\u6570\u636e\u5e8f\u5217\u53f7\u3002\n     * @param dependentSequence on which to wait.\u8fd9\u4e2a\u4e00\u822c\u5c31\u662f\u591a\u4e2aSequence\u7684 FixedSequenceGroup\n     * @param barrier           the processor is waiting on. SequenceBarrier\n     * @return the sequence that is available which may be greater than the requested sequence.\u53ef\u4ee5\u5b89\u5168\u8bfb\u53d6\u7684\u6700\u9ad8\u5e8f\u5217\u53f7\u3002\u5b83\u53ef\u80fd\u662f\u6bd4\u8bf7\u6c42\u7684\u5e8f\u5217\u53f7\u66f4\u5927\u7684\u503c\u3002\n     * @throws AlertException       if the status of the Disruptor has changed.\n     * @throws InterruptedException if the thread is interrupted.\n     * @throws TimeoutException if a timeout occurs before waiting completes (not used by some strategies)\n     */\n    long waitFor(long sequence, Sequence cursor, Sequence dependentSequence, SequenceBarrier barrier)\n        throws AlertException, InterruptedException, TimeoutException;\n\n    /**\n     * Implementations should signal the waiting {@link EventProcessor}s that the cursor has advanced.\n     * \u5f53\u7b49\u5f85\u7b56\u7565\u5728\u963b\u585e\u72b6\u6001\u65f6\uff08\u5373\u7ebf\u7a0b\u88ab\u963b\u585e\uff09\uff0c\u6b64\u65b9\u6cd5\u4f1a\u901a\u77e5\u6240\u6709\u7b49\u5f85\u7684 EventProcessor\uff0c\u4f7f\u5b83\u4eec\u77e5\u9053\u6709\u65b0\u7684\u6570\u636e\u53ef\u4ee5\u5904\u7406\u3002\n     */\n    void signalAllWhenBlocking();\n}\n\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u5982\u679c\u4e0d\u914d\u7f6e\u7b49\u5f85\u7b56\u7565\uff0c\u9ed8\u8ba4\u5c31\u662f",(0,i.jsx)(n.code,{children:"BlockingWaitStrategy"}),"\uff0c\u8bb2\u4e00\u4e0b\u5176\u4e2d\u7684\u5b9e\u73b0\u903b\u8f91\uff0c\u6574\u4f53\u903b\u8f91\u90fd\u662f\u76f8\u4f3c\u7684\u53ea\u662f\u5728\u5904\u7406\u7b49\u5f85\u65f6\u4f1a\u6709\u533a\u522b\uff1a"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u6240\u6709\u7684\u7b49\u5f85\u7b56\u7565\u7684\u6574\u4f53\u903b\u8f91\u90fd\u662f\uff1a\u5148\u5224\u65ad\u751f\u4ea7\u8005\u7684\u6e38\u6807\u5373cursorSequence\uff0c\u7136\u540e\u5224\u65ad\u4f9d\u8d56\u7684SequenceBarrier"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'/**\n * Blocking strategy that uses a lock and condition variable for {@link EventProcessor}s waiting on a barrier.\n * <p> \u4f7f\u7528synchronized\u963b\u585e\u5f0f\u7684\u7b49\u5f85\u673a\u5236\u5b9e\u73b0\u7b49\u5f85\uff0c\u76f4\u5230\u6570\u636e\u53ef\u7528\u3002\n * <p> \u4f18\u70b9:\u5f53\u7cfb\u7edf\u8d1f\u8f7d\u8f83\u4f4e\u65f6\uff0c\u80fd\u591f\u6709\u6548\u5730\u8282\u7701 CPU \u8d44\u6e90\uff0c\u56e0\u4e3a\u7ebf\u7a0b\u5728\u7b49\u5f85\u65f6\u4f1a\u88ab\u6302\u8d77\uff0c\u907f\u514d\u4e86\u7e41\u91cd\u7684\u81ea\u65cb\u7b49\u5f85\u3002\n * <p> \u7f3a\u70b9:\u53ef\u80fd\u5bfc\u81f4\u8f83\u9ad8\u7684\u7ebf\u7a0b\u4e0a\u4e0b\u6587\u5207\u6362\u5f00\u9500\uff0c\u5c24\u5176\u662f\u5728\u9ad8\u8d1f\u8f7d\u6216\u9ad8\u9891\u7387\u7684\u60c5\u51b5\u4e0b\u3002\n * <p> \u9002\u7528\u573a\u666f:\u9002\u5408\u4e8e\u5bf9\u5ef6\u8fdf\u4e0d\u654f\u611f\u4e14\u9700\u8981\u8282\u7701 CPU \u8d44\u6e90\u7684\u573a\u666f\u3002\n *\n * <p>This strategy can be used when throughput and low-latency are not as important as CPU resource.\n */\npublic final class BlockingWaitStrategy implements WaitStrategy\n{\n    private final Object mutex = new Object();\n\n    @Override\n    public long waitFor(final long sequence, final Sequence cursorSequence, final Sequence dependentSequence, final SequenceBarrier barrier)\n        throws AlertException, InterruptedException\n    {\n        long availableSequence;\n        // \u8fd9\u91cc\u5728Disruptor\u4e2dsequence\u662f\u4f1a\u5168\u5c40\u9012\u589e\u4e00\u76f4\u7d2f\u52a0\u7684\uff0c\u800c\u4e14\u6b64\u5904\u662f\u53ea\u6709\u751f\u4ea7\u8005\u6839\u4e0d\u4e0a\u6d88\u8d39\u8005\u65f6\u624d\u963b\u585e\uff0c\u5426\u5219\u5c31\u76f4\u63a5\u8fd4\u56de\u5b89\u5168\u7684sequence\u5e8f\u53f7\n        if (cursorSequence.get() < sequence)\n        {\n            synchronized (mutex)\n            {\n                while (cursorSequence.get() < sequence)\n                {\n                    barrier.checkAlert();\n                    mutex.wait();\n                }\n            }\n        }\n\n        // \u8fd9\u91cc\u5c31\u662f\u5728\u5904\u7406\u6d88\u8d39\u8005\u4e4b\u95f4\u6709\u4f9d\u8d56\u7684\u60c5\u51b5\n        while ((availableSequence = dependentSequence.get()) < sequence)\n        {\n            barrier.checkAlert();\n            // Thread.onSpinWait() \u662f Java 9 \u5f15\u5165\u7684\u4e00\u4e2a\u65b9\u6cd5\uff0c\u4e3b\u8981\u7528\u4e8e\u5728\u81ea\u65cb\u7b49\u5f85\uff08spin-waiting\uff09\u671f\u95f4\u901a\u77e5JVM\u7ebf\u7a0b\u6b63\u5728\u8fdb\u884c\u5fd9\u7b49\u5f85\u3002\u6709\u52a9\u4e8eJVM\u4f18\u5316\u7ebf\u7a0b\u8c03\u5ea6\u548c\u5904\u7406\u5668\u8d44\u6e90\u7684\u5206\u914d\u3002\n            Thread.onSpinWait();\n        }\n\n        return availableSequence;\n    }\n\n    @Override\n    public void signalAllWhenBlocking()\n    {\n        synchronized (mutex)\n        {\n            mutex.notifyAll();\n        }\n    }\n\n    @Override\n    public String toString()\n    {\n        return "BlockingWaitStrategy{" +\n            "mutex=" + mutex +\n            \'}\';\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"workpool\u7684\u79fb\u9664\u548c\u591a\u7ebf\u7a0b\u6d88\u8d39\u7684\u5b9e\u73b0",children:"workpool\u7684\u79fb\u9664\u548c\u591a\u7ebf\u7a0b\u6d88\u8d39\u7684\u5b9e\u73b0"}),"\n",(0,i.jsxs)(n.p,{children:["\u57284.0\u7684",(0,i.jsx)(n.code,{children:"Disruptor"}),"\u4e2d\u79fb\u9664\u4e86",(0,i.jsx)(n.code,{children:"WorkerPool"}),"\uff0c\u4e5f\u5c31\u662f\u6ca1\u6709\u591a\u4e2a\u7ebf\u7a0b\u6765\u5171\u4eab\u4e00\u4e2a",(0,i.jsx)(n.code,{children:"Sequence"}),"\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"disruptor"})," \u79fb\u9664 ",(0,i.jsx)(n.code,{children:"WorkerPool"}),"\u6211\u7406\u89e3\u8fd8\u662f\u57fa\u4e8e\u6027\u80fd\u7684\u8003\u8651\uff0c \u56e0\u4e3a",(0,i.jsx)(n.code,{children:"WorkerPool"}),"\u4e2d\u591a\u6d88\u8d39\u8005\u6216\u8005\u7ebf\u7a0b\u5171\u4eab\u4e00\u4e2a",(0,i.jsx)(n.code,{children:"Sequence"}),"\u5fc5\u7136\u8981\u4ea7\u751f\u7ade\u4e89\u5b58\u5728\u540c\u6b65\u6d88\u8017\uff0c\u800c\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5219\u4e0d\u7528\u540c\u6b65",(0,i.jsx)(n.code,{children:"sequence"}),"\uff0c \u5982\u679c\u8981\u591a\u4e2a\u7ebf\u7a0b\u63d0\u5347\u5e76\u884c\u5ea6\u90a3\u53ef\u4ee5\u5728\u81ea\u5df1\u7684",(0,i.jsx)(n.code,{children:"eventHandler"}),"\u4e2d\u4f7f\u7528",(0,i.jsx)(n.code,{children:"ForkJoin"}),"\u4e4b\u7c7b\u7684\u6765\u5904\u7406\u4e5f\u662f\u4e00\u6837\u7684\u8fd9\u6837\u4e5f\u53ef\u4ee5\u5e76\u884c\u6d88\u8d39\u800c\u4e14\u8fd8\u6ca1\u6709\u540c\u6b65",(0,i.jsx)(n.code,{children:"sequence"}),"\u6d88\u8017\u3002\u6bd4\u5982\uff1a"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'class MyEventHandler implements EventHandler<MyEvent> {\n    private final ForkJoinPool forkJoinPool = new ForkJoinPool();\n    @Override\n    public void onEvent(MyEvent event, long sequence, boolean endOfBatch) {\n        // ForkJoinPool \u7528\u4e8e\u5e76\u884c\u5904\u7406\u4e8b\u4ef6\n        forkJoinPool.submit(() -> {\n            // \u6267\u884c\u4e8b\u4ef6\u5904\u7406\u903b\u8f91\n            System.out.println("Processing event: " + event.getData());\n        }).join();\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"\u751f\u4ea7",children:"\u751f\u4ea7"}),"\n",(0,i.jsx)(n.h4,{id:"\u6570\u636e\u8282\u70b9\u548c\u6570\u636e",children:"\u6570\u636e\u8282\u70b9\u548c\u6570\u636e"}),"\n",(0,i.jsxs)(n.p,{children:["\u5728",(0,i.jsx)(n.code,{children:"Disruptor"}),"\u4e2d\uff0c",(0,i.jsx)(n.code,{children:"ringbuffer"}),"\u6570\u7ec4\u4e2d\u7684\u6570\u636e\u8282\u70b9\u672c\u8eab\u90fd\u662f\u56fa\u5b9a\u4e0d\u53d8\u7684\u4e5f\u5c31\u662f\u5176\u4f1a\u5728\u6574\u4e2a\u5e94\u7528\u7684\u751f\u547d\u5468\u671f\u4e2d\u4e00\u76f4\u5b58\u5728\uff0c\u6570\u636e\u90fd\u662f\u901a\u8fc7\u4fee\u6539\u6765\u4ea7\u751f\u7684\u3002"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u8fd9\u662f\u56e0\u4e3ajvm\u5bf9\u8c61\u5206\u914d\u51b3\u5b9a\u7684\uff0c\u5f53\u4e00\u4e2a\u5bf9\u8c61\u5904\u4e8e\u8981\u4e48\u5f88\u5feb\u88ab\u56de\u6536\u8981\u4e48\u6c38\u8fdc\u4e0d\u4f1a\u88ab\u56de\u6536\u7684\u8fd9\u4e24\u79cd\u60c5\u51b5\u65f6\uff0cjvm\u7684gc\u8868\u73b0\u662f\u6700\u597d\u7684\u3002"})}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:["\u6bcf\u6b21\u7684\u6570\u636e\u4ea7\u751f\u5176\u5b9e\u90fd\u662f\u5728\u4fee\u6539",(0,i.jsx)(n.code,{children:"ringbuffer"}),"\u6570\u7ec4\u4e2d",(0,i.jsx)(n.code,{children:"Event"}),"\u5bf9\u8c61\u7684\u6570\u636e\u3002\u6570\u7ec4\u4e2d\u7684\u5143\u7d20\u90fd\u662f\u6cdb\u578b\uff0c\u9700\u8981\u81ea\u5df1\u5b9a\u4e49\u5bf9\u8c61\uff0c\u7136\u540e\u5b9e\u73b0",(0,i.jsx)(n.code,{children:"EventFactory"}),"\u4ee5\u5b9a\u4e49\u5982\u4f55\u751f\u6210\u6570\u7ec4\u4e2d\u7684",(0,i.jsx)(n.code,{children:"Event"}),"\u5bf9\u8c61\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"/**\n * Called by the {@link RingBuffer} to pre-populate all the events to fill the RingBuffer.\n * EventFactory\uff1a\u7528\u4e8e\u521d\u59cb\u5316 RingBuffer \u4e2d\u7684\u4e8b\u4ef6\u5bf9\u8c61\uff0c\u662f\u521b\u5efa\u4e8b\u4ef6\u5bf9\u8c61\u7684\u5de5\u5382\u65b9\u6cd5\uff0c\u63d0\u4f9b\u7a7a\u7684\u4e8b\u4ef6\u5b9e\u4f8b\u3002\n * EventTranslator\uff1a\u7528\u4e8e\u5411\u4e8b\u4ef6\u5bf9\u8c61\u4e2d\u5199\u5165\u5b9e\u9645\u7684\u4e1a\u52a1\u6570\u636e\uff0c\u5b83\u8d1f\u8d23\u5c06\u751f\u4ea7\u8005\u7684\u6570\u636e\u7ffb\u8bd1\u5e76\u5199\u5165\u5230 RingBuffer \u7684\u8282\u70b9\uff08\u4e8b\u4ef6\u5bf9\u8c61\uff09\u4e2d\u3002\n *\n * @see EventTranslator\n * @param <T> event implementation storing the data for sharing during exchange or parallel coordination of an event.\n * \u4e8b\u4ef6\u5b9e\u73b0\uff0c\u5728\u4ea4\u6362\u6216\u5e76\u884c\u534f\u8c03\u4e8b\u4ef6\u671f\u95f4\u5b58\u50a8\u7528\u4e8e\u5171\u4eab\u7684\u6570\u636e\u3002\n */\npublic interface EventFactory<T>\n{\n    /**\n     * Implementations should instantiate an event object, with all memory already allocated where possible.\n     *\n     * @return T newly constructed event instance.\n     */\n    T newInstance();\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u4f46\u662f\u5b9e\u9645\u7684\u6d88\u8d39\u6570\u636e\u662f\u901a\u8fc7",(0,i.jsx)(n.code,{children:"EventTranslator"}),"\u6765\u5904\u7406\u7684\uff0c"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"/**\n * Implementations translate (write) data representations into events claimed from the {@link RingBuffer}.\n * \u5b9e\u73b0\u5c06\u6570\u636e\u8868\u793a\u8f6c\u6362(\u5199)\u5165RingBuffer\u4e2d\u58f0\u660e\u7684event\u3002\n *\n * <p>When publishing to the RingBuffer, provide an EventTranslator. The RingBuffer will select the next available\n * event by sequence and provide it to the EventTranslator (which should update the event), before publishing\n * the sequence update.\n * \u5f53\u53d1\u5e03\u5230RingBuffer\u65f6\uff0c\u63d0\u4f9b\u4e00\u4e2aEventTranslator\u3002\u5728\u66f4\u65b0sequence\u4e4b\u524d\uff0cRingBuffer\u5c06\u4e0b\u4e00\u4e2a\u53ef\u7528\u7684sequence\u63d0\u4f9b\u7ed9EventTranslator(\u5176\u4f1a\u66f4\u65b0\u5176\u4e2d\u7684event\u6570\u636e)\u3002\n *\n * <p>\n * EventFactory\uff1a\u7528\u4e8e\u521d\u59cb\u5316 RingBuffer \u4e2d\u7684\u4e8b\u4ef6\u5bf9\u8c61\uff0c\u662f\u521b\u5efa\u4e8b\u4ef6\u5bf9\u8c61\u7684\u5de5\u5382\u65b9\u6cd5\uff0c\u63d0\u4f9b\u7a7a\u7684\u4e8b\u4ef6\u5b9e\u4f8b\u3002\n * EventTranslator\uff1a\u7528\u4e8e\u5411\u4e8b\u4ef6\u5bf9\u8c61\u4e2d\u5199\u5165\u5b9e\u9645\u7684\u4e1a\u52a1\u6570\u636e\uff0c\u5b83\u8d1f\u8d23\u5c06\u751f\u4ea7\u8005\u7684\u6570\u636e\u7ffb\u8bd1\u5e76\u5199\u5165\u5230 RingBuffer \u7684\u8282\u70b9\uff08\u4e8b\u4ef6\u5bf9\u8c61\uff09\u4e2d\u3002\n * \u800cEventTranslator\u5219\u662f\u5728ringbuffer\u4e2d\u53d1\u5e03\u6570\u636e\u4f7f\u7528\u7684\uff0c\u56e0\u4e3a\u53d1\u5e03\u5bf9\u8c61\u4e2d\u7684publish\u65b9\u6cd5\u53ea\u80fd\u4f20\u5165EventTranslator\n *\n * @see EventFactory\n * @param <T> event implementation storing the data for sharing during exchange or parallel coordination of an event.\n *\n */\npublic interface EventTranslator<T>\n{\n    /**\n     * \u5c06\u6570\u636e\u5199\u5165\u5bf9\u5e94\u69fd\u4f4d\u7684Event\u8282\u70b9\u4e2d\n     * Translate a data representation into fields set in given event\n     *\n     * @param event    into which the data should be translated.\n     * @param sequence that is assigned to event.\n     */\n    void translateTo(T event, long sequence);\n}\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u4e5f\u5c31\u662f\u5728\u5199\u5165\u6570\u636e\u65f6\uff0c\u90fd\u662f\u5148\u83b7\u53d6",(0,i.jsx)(n.code,{children:"sequence"}),"\uff0c\u5728",(0,i.jsx)(n.code,{children:" translator.translateTo(T event, long sequence);"}),"\uff0c\u6700\u540e",(0,i.jsx)(n.code,{children:"sequencer.publish(sequence);"}),"\u3002"]}),"\n",(0,i.jsx)(n.h4,{id:"\u5355\u751f\u4ea7\u8005",children:"\u5355\u751f\u4ea7\u8005"}),"\n",(0,i.jsx)(n.p,{children:"\u5355\u751f\u4ea7\u8005\u76f8\u5bf9\u6bd4\u8f83\u7b80\u5355\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u534f\u8c03\u5199\u5165\u65f6\u6e38\u6807\u7684\u5e76\u53d1\u5b89\u5168\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["\u56e0\u4e3a\u53ea\u9700\u8981\u7ef4\u62a4\u4e00\u4e2a\u6e38\u6807\uff0c\u4e0d\u5b58\u5728\u4e89\u7528\uff0c",(0,i.jsx)(n.code,{children:"SingleProducer"}),"\u8fd8\u52a0\u5165\u4e86\u6570\u636e\u7684\u7f13\u5b58\u5e76\u5bf9\u7f13\u5b58\u4f5c\u4e86\u4f18\u5316"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'abstract class SingleProducerSequencerPad extends AbstractSequencer\n{\n    protected byte\n        p10, p11, p12, p13, p14, p15, p16, p17,\n        p20, p21, p22, p23, p24, p25, p26, p27,\n        p30, p31, p32, p33, p34, p35, p36, p37,\n        p40, p41, p42, p43, p44, p45, p46, p47,\n        p50, p51, p52, p53, p54, p55, p56, p57,\n        p60, p61, p62, p63, p64, p65, p66, p67,\n        p70, p71, p72, p73, p74, p75, p76, p77;\n\n    SingleProducerSequencerPad(final int bufferSize, final WaitStrategy waitStrategy)\n    {\n        super(bufferSize, waitStrategy);\n    }\n}\n\nabstract class SingleProducerSequencerFields extends SingleProducerSequencerPad\n{\n    SingleProducerSequencerFields(final int bufferSize, final WaitStrategy waitStrategy)\n    {\n        super(bufferSize, waitStrategy);\n    }\n\n    /**\n     * Set to -1 as sequence starting point\n     * nextValue \u548c cachedValue \u662f SingleProducerSequencer \u4e2d\u975e\u5e38\u6838\u5fc3\u7684\u4e24\u4e2a\u53d8\u91cf\uff0c\u6d89\u53ca\u5230\u751f\u4ea7\u8005\u7684\u4f4d\u7f6e\u8ffd\u8e2a\u548c\u6d88\u8d39\u8005\u8fdb\u5ea6\u7684\u7f13\u5b58\u3002\u4e3a\u4e86\u907f\u514d\u4f2a\u5171\u4eab\uff0c\u4e24\u4e2a\u88ab\u586b\u5145\u5728\u4e2d\u95f4\n     */\n    // nextValue \u8868\u793a\u5f53\u524d\u751f\u4ea7\u8005\u5373\u5c06\u53d1\u5e03\u7684\u4e0b\u4e00\u4e2a\u5e8f\u53f7\n    long nextValue = Sequence.INITIAL_VALUE;\n    // \u4e0a\u6b21\u4ece\u6d88\u8d39\u8005\u4e2d\u83b7\u53d6\u7684\u6700\u5c0f\u5e8f\u53f7\uff0c\u7528\u4e8e\u4f18\u5316\u6027\u80fd\uff0c\u907f\u514d\u6bcf\u6b21\u90fd\u67e5\u8be2\u6240\u6709\u6d88\u8d39\u8005\u7684\u8fdb\u5ea6\u3002\n    long cachedValue = Sequence.INITIAL_VALUE;\n}\n\n/**\n * Coordinator for claiming sequences for access to a data structure while tracking dependent {@link Sequence}s.\n * Not safe for use from multiple threads as it does not implement any barriers.\n *\n * <p>* Note on {@link Sequencer#getCursor()}:  With this sequencer the cursor value is updated after the call\n * to {@link Sequencer#publish(long)} is made.\n */\n\npublic final class SingleProducerSequencer extends SingleProducerSequencerFields\n{\n    protected byte\n        p10, p11, p12, p13, p14, p15, p16, p17,\n        p20, p21, p22, p23, p24, p25, p26, p27,\n        p30, p31, p32, p33, p34, p35, p36, p37,\n        p40, p41, p42, p43, p44, p45, p46, p47,\n        p50, p51, p52, p53, p54, p55, p56, p57,\n        p60, p61, p62, p63, p64, p65, p66, p67,\n        p70, p71, p72, p73, p74, p75, p76, p77;\n\n    /**\n     * Construct a Sequencer with the selected wait strategy and buffer size.\n     *\n     * @param bufferSize   the size of the buffer that this will sequence over.\n     * @param waitStrategy for those waiting on sequences.\n     */\n    public SingleProducerSequencer(final int bufferSize, final WaitStrategy waitStrategy)\n    {\n        super(bufferSize, waitStrategy);\n    }\n\n    /**\n     * @see Sequencer#hasAvailableCapacity(int)\n     */\n    @Override\n    public boolean hasAvailableCapacity(final int requiredCapacity)\n    {\n        return hasAvailableCapacity(requiredCapacity, false);\n    }\n\n    private boolean hasAvailableCapacity(final int requiredCapacity, final boolean doStore)\n    {\n\n        long nextValue = this.nextValue;\n        // wrapPoint \u662f\u4e00\u4e2a\u8ba1\u7b97\u503c\uff0c\u7528\u4e8e\u5224\u65ad\u662f\u5426\u6709\u8db3\u591f\u7684\u5bb9\u91cf\uff0c\u5982\u679c\u751f\u4ea7\u8005\u53d1\u5e03requiredCapacity\u7684\u4e8b\u4ef6\uff0c\u5b83\u7684\u5e8f\u53f7\u4f1a\u201c\u7ed5\u56de\u201d\u5230 RingBuffer \u7684\u54ea\u4e00\u4f4d\u7f6e\u3002\n        long wrapPoint = (nextValue + requiredCapacity) - bufferSize;\n        // cachedGatingSequence \u662f\u4e0a\u6b21\u4ece\u6d88\u8d39\u8005\u4e2d\u83b7\u53d6\u7684\u6700\u5c0f\u5e8f\u53f7\n        long cachedGatingSequence = this.cachedValue;\n\n        /*\n         * \u8fd9\u91cc\u7684if\u903b\u8f91\u6ee1\u8db3\u5219\u8bf4\u660e\u9700\u8981\u8fdb\u4e00\u6b65\u68c0\u67e5\u662f\u5426\u6709\u8db3\u591f\u7684\u53ef\u7528\u7a7a\u95f4\n         * \u5982\u679c wrapPoint \u5927\u4e8e cachedGatingSequence\uff0c\u8bf4\u660e\u751f\u4ea7\u8005\u53ef\u80fd\u4f1a\u8986\u76d6\u5c1a\u672a\u88ab\u6d88\u8d39\u8005\u5904\u7406\u7684\u4e8b\u4ef6\uff0c\u9700\u8981\u8fdb\u4e00\u6b65\u9a8c\u8bc1\u662f\u5426\u6709\u8db3\u591f\u7684\u5bb9\u91cf\n         * \u5982\u679c cachedGatingSequence \u5927\u4e8e nextValue\uff0c\u8bf4\u660e\u6d88\u8d39\u8005\u7684\u8fdb\u5ea6\u5feb\u4e8e\u751f\u4ea7\u8005\u7684\u4f4d\u7f6e\u3002\u4e00\u822c\u4e0d\u53ef\u80fd\uff0c\u9664\u975e\u51fa\u95ee\u9898\uff0c\u4f46\u4e5f\u9700\u8981\u68c0\u67e5\u3002\n         */\n        if (wrapPoint > cachedGatingSequence || cachedGatingSequence > nextValue)\n        {\n            //doStore\u5c31\u662f\u662f\u5426\u8981\u52a0\u5165\u7f13\u5b58\u5c4f\u969c\uff0c\u5728\u5355\u7ebf\u7a0b\u7684\u60c5\u51b5\u4e0bnextValue\u59cb\u7ec8\u662f\u4e00\u81f4\u7684\uff0c\u53ea\u6709\u81ea\u5df1\u4f1a\u4fee\u6539\uff0c\u800c\u8c03\u7528setVolatile\uff0c\u662f\u4e3a\u4e86\u4f7f\u7528\u5176\u65b9\u6cd5\u4e2d\u7684\u5185\u5b58\u5c4f\u969c\u4ee3\u7801\n            if (doStore)\n            {\n                cursor.setVolatile(nextValue);  // StoreLoad fence\n            }\n\n            // \u8fd9\u91cc\u91cd\u65b0\u8ba1\u7b97 minSequence\u7684\u4f4d\u7f6e\uff0c\u5e76\u4e14\u66f4\u65b0\u7f13\u5b58\u503c\n            long minSequence = Util.getMinimumSequence(gatingSequences, nextValue);\n            this.cachedValue = minSequence;\n\n            // \u5982\u679c wrapPoint > minSequence \u5219\u624d\u662ffalse\u7a7a\u95f4\u4e0d\u8db3\uff0c\u5426\u5219\u90fd\u662f\u5916\u5c42\u7684true\u5373\u7a7a\u95f4\u8db3\u591f\n            if (wrapPoint > minSequence)\n            {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * @see Sequencer#next()\n     */\n    @Override\n    public long next()\n    {\n        return next(1);\n    }\n\n    /**\n     * @see Sequencer#next(int)\n     */\n    @Override\n    public long next(final int n)\n    {\n        // \u5728\u751f\u4ea7\u73af\u5883\u4e2d\u901a\u5e38\u4e0d\u542f\u7528\u65ad\u8a00\u3002\u5f00\u542f\u53c2\u6570\uff1ajava -ea\n        assert sameThread() : "Accessed by two threads - use ProducerType.MULTI!";\n\n        if (n < 1 || n > bufferSize)\n        {\n            throw new IllegalArgumentException("n must be > 0 and < bufferSize");\n        }\n\n        long nextValue = this.nextValue;\n\n        long nextSequence = nextValue + n;\n        long wrapPoint = nextSequence - bufferSize;\n        long cachedGatingSequence = this.cachedValue;\n\n        if (wrapPoint > cachedGatingSequence || cachedGatingSequence > nextValue)\n        {\n\n            // doStore\u5c31\u662f\u662f\u5426\u8981\u52a0\u5165\u7f13\u5b58\u5c4f\u969c\uff0c\u5728\u5355\u7ebf\u7a0b\u7684\u60c5\u51b5\u4e0bnextValue\u59cb\u7ec8\u662f\u4e00\u81f4\u7684\uff0c\u53ea\u6709\u81ea\u5df1\u4f1a\u4fee\u6539\uff0c\u800c\u8c03\u7528setVolatile\uff0c\u662f\u4e3a\u4e86\u4f7f\u7528\u5176\u65b9\u6cd5\u4e2d\u7684\u5185\u5b58\u5c4f\u969c\u4ee3\u7801\n            cursor.setVolatile(nextValue);  // StoreLoad fence\n\n            long minSequence;\n            // \u7b49\u5f85\u6d88\u8d39\u8005\u6d88\u8d39\uff0c\u540e\u7ee7\u7eed\u83b7\u53d6\u4e0b\u4e00\u4e2a\u5b58\u50a8\u69fd\u4f4d\n            while (wrapPoint > (minSequence = Util.getMinimumSequence(gatingSequences, nextValue)))\n            {\n                LockSupport.parkNanos(1L); // TODO: Use waitStrategy to spin?\n            }\n\n            this.cachedValue = minSequence;\n        }\n\n        this.nextValue = nextSequence;\n\n        return nextSequence;\n    }\n\n    /**\n     * @see Sequencer#tryNext()\n     */\n    @Override\n    public long tryNext() throws InsufficientCapacityException\n    {\n        return tryNext(1);\n    }\n\n    /**\n     * @see Sequencer#tryNext(int)\n     */\n    @Override\n    public long tryNext(final int n) throws InsufficientCapacityException\n    {\n        if (n < 1)\n        {\n            throw new IllegalArgumentException("n must be > 0");\n        }\n\n        // \u8fd9\u91cchasAvailableCapacity \u53c2\u6570doStore\u5c31\u662f\u5728\u5b9e\u9645\u63a8\u8fdbsequence\n        if (!hasAvailableCapacity(n, true))\n        {\n            throw InsufficientCapacityException.INSTANCE;\n        }\n\n        long nextSequence = this.nextValue += n;\n\n        return nextSequence;\n    }\n\n    /**\n     * @see Sequencer#remainingCapacity()\n     */\n    @Override\n    public long remainingCapacity()\n    {\n        long nextValue = this.nextValue;\n\n        long consumed = Util.getMinimumSequence(gatingSequences, nextValue);\n        long produced = nextValue;\n        return getBufferSize() - (produced - consumed);\n    }\n\n    /**\n     * @see Sequencer#claim(long)\n     * @see MultiProducerSequencer#claim(long)\n     */\n    @Override\n    public void claim(final long sequence)\n    {\n        // \u5355\u751f\u4ea7\u8005\u5373\u5355\u7ebf\u7a0b\u4e0d\u9700\u8981\u52a0\u9501\n        this.nextValue = sequence;\n    }\n\n    /**\n     * @see Sequencer#publish(long)\n     */\n    @Override\n    public void publish(final long sequence)\n    {\n        cursor.set(sequence);\n        waitStrategy.signalAllWhenBlocking();\n    }\n\n    /**\n     * \u5355\u751f\u4ea7\u8005\u76f4\u63a5\u63a8\u8fdb\u5230\u9ad8\u4f4dsequence\uff0c\u591a\u751f\u4ea7\u8005\u5219\u9700\u8981\u4e00\u4e2a\u4e00\u4e2a\u63a8\u8fdb\n     *\n     * @see Sequencer#publish(long, long)\n     * @see MultiProducerSequencer#publish(long)\n     */\n    @Override\n    public void publish(final long lo, final long hi)\n    {\n        publish(hi);\n    }\n\n    /**\n     * @see Sequencer#isAvailable(long)\n     */\n    @Override\n    public boolean isAvailable(final long sequence)\n    {\n        final long currentSequence = cursor.get();\n        return sequence <= currentSequence && sequence > currentSequence - bufferSize;\n    }\n\n    @Override\n    public long getHighestPublishedSequence(final long lowerBound, final long availableSequence)\n    {\n        return availableSequence;\n    }\n\n    @Override\n    public String toString()\n    {\n        return "SingleProducerSequencer{" +\n                "bufferSize=" + bufferSize +\n                ", waitStrategy=" + waitStrategy +\n                ", cursor=" + cursor +\n                ", gatingSequences=" + Arrays.toString(gatingSequences) +\n                \'}\';\n    }\n\n    private boolean sameThread()\n    {\n        return ProducerThreadAssertion.isSameThreadProducingTo(this);\n    }\n\n    /**\n     * Only used when assertions are enabled.\n     */\n    private static class ProducerThreadAssertion\n    {\n        /**\n         * Tracks the threads publishing to {@code SingleProducerSequencer}s to identify if more than one\n         * thread accesses any {@code SingleProducerSequencer}.\n         * I.e. it helps developers detect early if they use the wrong\n         * {@link com.lmax.disruptor.dsl.ProducerType}.\n         */\n        private static final Map<SingleProducerSequencer, Thread> PRODUCERS = new HashMap<>();\n\n        public static boolean isSameThreadProducingTo(final SingleProducerSequencer singleProducerSequencer)\n        {\n            synchronized (PRODUCERS)\n            {\n                final Thread currentThread = Thread.currentThread();\n                if (!PRODUCERS.containsKey(singleProducerSequencer))\n                {\n                    PRODUCERS.put(singleProducerSequencer, currentThread);\n                }\n                return PRODUCERS.get(singleProducerSequencer).equals(currentThread);\n            }\n        }\n    }\n}\n\n'})}),"\n",(0,i.jsx)(n.h4,{id:"\u591a\u751f\u4ea7\u8005",children:"\u591a\u751f\u4ea7\u8005"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsxs)(n.strong,{children:["\u591a\u751f\u4ea7\u8005\u76f8\u5bf9\u5355\u751f\u4ea7\u8005\u8981\u590d\u6742\u4e00\u70b9\uff0c\u4f46\u8fd9\u4e5f\u662f",(0,i.jsx)(n.code,{children:"Disruptor"}),"\u5b9e\u73b0\u975e\u5e38\u975e\u5e38\u540a\u7684\u5730\u65b9"]}),"\uff0c\u6d88\u8d39\u8005\u4e2d\u6bcf\u4e2a",(0,i.jsx)(n.code,{children:"Sequence"}),"\u662f\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u5728\u8bbf\u95ee\u7684\uff0c\u800c\u751f\u4ea7\u8005\u662f\u6709\u591a\u4e2a\u7684\uff0c\u4f1a\u4ea7\u751f\u5bf9Sequence\u7684\u4e89\u7528\u548c\u6570\u636e\u8986\u76d6\u7684\u95ee\u9898\uff0c\u4f46Disruptor\u4f9d\u7136\u53ef\u4ee5\u4e0d\u4f7f\u7528\u7528\u9501\u6216\u8005\u522b\u7684\u540c\u6b65\u7b56\u7565\u5c31\u80fd\u5b9e\u73b0\u5e76\u53d1\u5b89\u5168\u3002\u5176\u672c\u8d28\u8fd8\u662f\u901a\u8fc7\u7f13\u5b58\u53ef\u89c1\u6027\u548c\u5185\u5b58\u5c4f\u969c\u6765\u4fdd\u8bc1\u4ee5\u53ca\u539f\u5b50\u6027\u64cd\u4f5c\uff0c\u5e76\u901a\u8fc7\u989d\u5916\u7684\u6570\u636e\u4f4d\u8fd0\u7b97\u6765\u6821\u9a8c\u6570\u636e\u53ef\u7528\u6027\uff0c\u6765\u8fbe\u5230\u9ad8\u6548\u7684\u7ebf\u7a0b\u5e76\u53d1\u5b89\u5168\u3002"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"Disruptor\u4e4b\u6240\u4ee5\u8fd9\u6837\u8bbe\u8ba1\u4e00\u4e2a\u6d88\u8d39\u8005\u4e00\u4e2aSequence\u548c\u591a\u4e2a\u751f\u4ea7\u8005\u4e00\u4e2aSequence\uff0c\u6211\u7406\u89e3\uff1a\u4e0d\u9700\u8981\u901a\u8fc7\u591a\u6d88\u8d39\u8005\u6765\u4e89\u7528Sequence\uff0c\u8981\u591a\u7ebf\u7a0b\u63d0\u9ad8\u5e76\u884c\u6548\u7387\u53ef\u4ee5\u81ea\u5df1\u591a\u7ebf\u7a0b\u6bd4\u5982\u7ebf\u7a0b\u6c60\u6216\u8005forkjoin\u5904\u7406\uff0c\u5e76\u4e14\u6d88\u8d39\u8005\u672c\u8eab\u4e5f\u662f\u81ea\u5df1\u80fd\u63a7\u5236\u7684\uff0c\u800c\u751f\u4ea7\u8005\u5f80\u5f80\u662f\u81ea\u5df1\u4e0d\u80fd\u5904\u63a7\u5236\u7684\uff0c\u5e38\u5e38\u8981\u9700\u8981\u4f9d\u8d56\u5916\u90e8\u6570\u636e\u6e90\u3002"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u5177\u4f53\u7684\u5b9e\u73b0\u5982\u4e0b\uff1a"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:["\u9996\u5148\u63a8\u8fdb",(0,i.jsx)(n.code,{children:"sequence"}),"\u90fd\u662f\u4e00\u6837\u7684\uff0c\u4e0d\u7ba1\u54ea\u4e2a\u751f\u4ea7\u8005\u8981\u5199\u5165\u6570\u636e\u90fd\u662f\u901a\u8fc7",(0,i.jsx)(n.code,{children:"next"}),"\u6216\u8005",(0,i.jsx)(n.code,{children:"tryNext"}),"\u53bb\u7533\u8bf7\u69fd\u4f4d\u79fb\u52a8\u6e38\u6807\uff0c\u4f46\u96be\u70b9\u5728\u4e8e\u591a\u4e2a\u751f\u4ea7\u8005\u5177\u4f53\u5199\u6570\u636e\u65f6\u5982\u4f55\u4e0d\u76f8\u4e92\u8986\u76d6\uff0c\u5373\u5199\u6570\u636e\u65f6\u786e\u8ba4\u5bf9\u5e94\u7684\u69fd\u4f4d\u662f\u53ef\u4ee5\u5199\u7684\uff0c\u8fd9\u4e2a\u95ee\u9898\u5728\u5feb\u901f\u5199\u5165\u6570\u636e\u5230\u6570\u7ec4\u4ee5\u81f3\u4e8e\u53c8\u7ed5\u56de\u5230\u76f8\u540c\u7684\u4f4d\u7f6e\u65f6\u5c31\u5fc5\u7136\u8981\u9047\u5230\u6570\u636e\u8986\u76d6\u7684\u95ee\u9898\u3002\u800c\u5355\u751f\u4ea7\u8005\u4e0d\u5b58\u5728\u662f\u56e0\u4e3a\u6709\u4e00\u4e2a\u6e38\u6807\u5728\u63a7\u5236"]})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsxs)(n.strong,{children:[(0,i.jsx)(n.code,{children:"Disruptor"}),"\u5728\u5904\u7406\u8fd9\u4e2a\u95ee\u9898\u65f6\uff0c\u901a\u8fc7\u7ef4\u62a4\u4e00\u4e2a\u548c",(0,i.jsx)(n.code,{children:"bufferSize"}),"\u540c\u7b49\u5927\u5c0f\u7684\u6570\u7ec4",(0,i.jsx)(n.code,{children:"availableBuffer"}),"\uff0c\u6765\u8bb0\u5f55\u5176\u5143\u7d20\u662f\u5426\u53ef\u4ee5\u88ab\u4fee\u6539\uff0c\u5e76\u901a\u8fc7\u4f4d\u8ba1\u7b97\u6765\u5feb\u901f\u5224\u65ad\u51fa\u8981\u586b\u5199\u6570\u636e\u7684\u4f4d\u7f6e\u548c\u5bf9\u5e94\u4f4d\u7f6e\u7684\u6570\u636e\u662f\u5426\u53ef\u4ee5\u4fee\u6539"]})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-Java",children:"private final int[] availableBuffer;\n// \u8ba1\u7b97RingBuffer\u7d22\u5f15\u7684\u63a9\u7801\u503c\u3002\u6784\u9020\u5176\u4e2d\u8d4b\u503c bufferSize -1\uff0cbufferSize\u4e3a2\u7684\u5e42\uff0c\u5219bufferSize -1\u5c31\u662f\u6709\u6548\u4f4d\u5168\u662f1\nprivate final int indexMask;\n//  \u6784\u9020\u5176\u4e2d\u8d4b\u503cindexShift = Util.log2(bufferSize) \u5c31\u662f\u5728\u786e\u8ba4bufferSize\u76842\u7684\u5bf9\u6570\uff0c\u6bd4\u5982bufferSize=1024\uff0c\u5219indexShift=10\nprivate final int indexShift;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u9996\u5148",(0,i.jsx)(n.code,{children:"sequence"}),"\u662f\u4e00\u4e2a\u4e00\u76f4\u9012\u589e\u7684\u6570\uff0c\u800c",(0,i.jsx)(n.code,{children:"indexShift"}),"\u5219\u662f\u56fa\u5b9a\u7684\u5c31\u662f",(0,i.jsx)(n.code,{children:"bufferSize"}),"\u76842\u7684\u5e42\uff0c\u5bf9",(0,i.jsx)(n.code,{children:"sequence"}),"\u4f5c\u65e0\u7b26\u53f7\u53f3\u79fb\u5e76\u622a\u65ad\u4e3aint\uff0c\u8fd9\u6837\u5f97\u5230\u7684\u6570\u5c31\u662f"]}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"(int) (sequence >>> indexShift)"})," = sequence\u9664\u4ee5 bufferSize\u7684\u503c\u5e76\u51cf\u53bb\u53d6bufferSize\u6a21\u4f59\u6570\u7684\u503c\uff0c\u6309int\u622a\u65ad\u7684\u6570\u503c"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u8fd9\u4e2a\u503c\u53ef\u4ee5\u770b\u6210\u7ed5\u7740bufferSize\u8f6c\u4e86\u591a\u5c11\u6b21\uff0c\u56e0\u4e3a\u4f4d\u8fd0\u7b97\u90fd\u662f\u5bf92\u7684\u5e42\u8fd0\u7b97\uff0c\u5e76\u4e14\u8fd9\u4e2a\u503c\u786e\u5b9e\u4f1a\u4e0d\u65ad\u7684\u589e\u52a0\uff0c\u751a\u81f3\u4f1a\u8d85\u8fc7bufferSize\uff0c\u4f46\u662f\u8fd9\u4e0d\u5f71\u54cd\u5bf9\u69fd\u4f4d\u80fd\u5426\u5199\u5165\u7684\u5224\u65ad\uff0c\u56e0\u4e3a\u9700\u8981\u7684\u53ea\u662f\u4e00\u4e2a\u5224\u65ad\u80fd\u5426\u5199\u5165\uff0c\u800c\u5bf9\u5b9e\u9645\u662f\u4ec0\u4e48\u503c\u4e0d\u5173\u5fc3\u3002\u6bd4\u5982\u5982\u4e0b\u7684\u4f8b\u5b50\uff1a"}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u5047\u8bbe RingBuffer \u5927\u5c0f\u4e3a 1024\uff0c\u56e0\u6b64 indexShift = 10\u3002"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"\u5bf9\u4e8e sequence = 2047\uff0c\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u662f 00000000000000000000011111111111\u3002 \u7ecf\u8fc7 >>> 10 \u7684\u53f3\u79fb\u540e\uff0c\u5f97\u5230 00000000000000000000000000000001\uff0cavailability flag \u662f 1\u3002"}),"\n",(0,i.jsx)(n.li,{children:"\u5bf9\u4e8e sequence = 3071\uff0c\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u662f 00000000000000000000101111111111\u3002 \u7ecf\u8fc7 >>> 10 \u7684\u53f3\u79fb\u540e\uff0c\u5f97\u5230 00000000000000000000000000000010\uff0cavailability flag \u662f 2\u3002"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u6240\u4ee5\u83b7\u5f97\u5bf9\u5e94 sequence\u4f4d\u7f6e\u4e2d availableBuffer\u7684\u4f7f\u7528\u6807\u8bb0\u4f1a\u4e00\u76f4\u6539\u53d8\uff0c\u53ea\u9700\u8981\u91cd\u65b0\u8ba1\u7b97sequence\u7684\u6807\u8bb0\u7136\u540e\u5bf9\u6bd4\u5df2\u6709\u7684\u6570\u636e\u4e2d\u7684\u6807\u8bb0\u5c31\u77e5\u9053\u662f\u5426\u53ef\u4ee5\u7528\u3002"}),"\n",(0,i.jsxs)(n.p,{children:["\u5177\u4f53\u7684\u8ba1\u7b97\u5c31\u5728",(0,i.jsx)(n.code,{children:"MultiProducerSequencer"}),"\u7c7b\u7684",(0,i.jsx)(n.code,{children:"calculateAvailabilityFlag"}),"\u65b9\u6cd5\u4e2d\uff0c\u6bd4\u8f83\u4e5f\u5728\u5176",(0,i.jsx)(n.code,{children:"isAvailable"}),"\u65b9\u6cd5\u4e2d\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"MultiProducerSequencer"}),"\u7684\u6e90\u7801\u5982\u4e0b\uff1a"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'public final class MultiProducerSequencer extends AbstractSequencer\n{\n    //\u521b\u5efa\u4e00\u4e2a\u53ef\u4ee5\u64cd\u4f5c int[] \u6570\u7ec4\u5143\u7d20\u7684 VarHandle AVAILABLE_ARRAY \u4ee5\u9ad8\u6548\u5b89\u5168\u5730\u8bbf\u95ee\u548c\u4fee\u6539\u4e0b\u9762 availableBuffer\u6570\u7ec4\u53d8\u91cf\u4e2d\u7684\u5143\u7d20\uff0c\u800c\u65e0\u9700\u901a\u8fc7\u666e\u901a\u7684\u540c\u6b65\u624b\u6bb5\n    private static final VarHandle AVAILABLE_ARRAY = MethodHandles.arrayElementVarHandle(int[].class);\n\n    private final Sequence gatingSequenceCache = new Sequence(Sequencer.INITIAL_CURSOR_VALUE);\n\n    // availableBuffer tracks the state of each ringbuffer slot\n    // see below for more details on the approach\n    private final int[] availableBuffer;\n    // \u8ba1\u7b97RingBuffer\u7d22\u5f15\u7684\u63a9\u7801\u503c\u3002\u6784\u9020\u5176\u4e2d\u8d4b\u503c bufferSize -1\uff0cbufferSize\u4e3a2\u7684\u5e42\uff0c\u5219bufferSize -1\u5c31\u662f\u6709\u6548\u4f4d\u5168\u662f1\n    private final int indexMask;\n    //  \u6784\u9020\u5176\u4e2d\u8d4b\u503cindexShift = Util.log2(bufferSize) \u5c31\u662f\u5728\u786e\u8ba4bufferSize\u76842\u7684\u5bf9\u6570\uff0c\u6bd4\u5982bufferSize=1024\uff0c\u5219indexShift=10\n    private final int indexShift;\n\n    /**\n     * Construct a Sequencer with the selected wait strategy and buffer size.\n     *\n     * @param bufferSize   the size of the buffer that this will sequence over.\n     * @param waitStrategy for those waiting on sequences.\n     */\n    public MultiProducerSequencer(final int bufferSize, final WaitStrategy waitStrategy)\n    {\n        super(bufferSize, waitStrategy);\n\n        // availableBuffer\u548c ringbuffer\u7684bufferSize\u662f\u4e00\u6837\u7684\uff0c\u7528\u4e8e\u8ffd\u8e2a\u6bcf\u4e2a\u751f\u4ea7\u8005\u5728\u5199\u5165\u5b8c\u6210\u540e\uff0c\u6807\u8bb0\u8be5\u69fd\u4f4d\u5df2\u7ecf\u53ef\u4f9b\u6d88\u8d39\u8005\u8bfb\u53d6\n        availableBuffer = new int[bufferSize];\n        Arrays.fill(availableBuffer, -1);\n\n        indexMask = bufferSize - 1;\n        indexShift = Util.log2(bufferSize);\n    }\n\n    /**\n     * @see Sequencer#hasAvailableCapacity(int)\n     */\n    @Override\n    public boolean hasAvailableCapacity(final int requiredCapacity)\n    {\n        return hasAvailableCapacity(gatingSequences, requiredCapacity, cursor.get());\n    }\n\n    private boolean hasAvailableCapacity(final Sequence[] gatingSequences, final int requiredCapacity, final long cursorValue)\n    {\n        long wrapPoint = (cursorValue + requiredCapacity) - bufferSize;\n        long cachedGatingSequence = gatingSequenceCache.get();\n\n        if (wrapPoint > cachedGatingSequence || cachedGatingSequence > cursorValue)\n        {\n            long minSequence = Util.getMinimumSequence(gatingSequences, cursorValue);\n            gatingSequenceCache.set(minSequence);\n\n            if (wrapPoint > minSequence)\n            {\n                return false;\n            }\n        }\n\n        return true;\n    }\n\n    /**\n     * final \u4fee\u9970\u7b26\u662f\u8ba9\u53c2\u6570\u4e0d\u53ef\u6539\u53d8\uff0c\u6211\u7406\u89e3\u8fd9\u91cc\u53c2\u6570\u52a0final\u4fee\u9970\u7b26\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u786e\u4fddsequence\u4e0d\u4f1a\u88ab\u4fee\u6539\uff0c\u5e76\u4e14\u865a\u62df\u673a\u548c\u7f16\u8bd1\u5668\u5bf9final\u4fee\u9970\u7684\u53d8\u91cf\u4e5f\u6709\u66f4\u597d\u7684\u4f18\u5316\uff0c\n     * \u8fd8\u6709\u5c31\u662f\u4f20\u8fbe\u4e86\u4e00\u4e2a\u660e\u786e\u7684\u7f16\u7a0b\u610f\u56fe\uff1a\u6b64\u53c2\u6570\u4e0d\u80fd\u88ab\u4fee\u6539\u3001\u4ee5\u63d0\u793a\u7ef4\u62a4\u4eba\u5458\u4e0d\u8981\u4e71\u6539sequence\n     *\n     * @see Sequencer#claim(long)\n     * @see SingleProducerSequencer#claim(long)\n     */\n    @Override\n    public void claim(final long sequence)\n    {\n        // cursor\u662f\u4e2aSequence\uff0c\u5176\u6709\u5185\u5b58\u5c4f\u969c\u6765\u7ef4\u62a4\u4e00\u81f4\u6027\n        cursor.set(sequence);\n    }\n\n    /**\n     * @see Sequencer#next()\n     */\n    @Override\n    public long next()\n    {\n        return next(1);\n    }\n\n    /**\n     * @see Sequencer#next(int)\n     */\n    @Override\n    public long next(final int n)\n    {\n        if (n < 1 || n > bufferSize)\n        {\n            throw new IllegalArgumentException("n must be > 0 and < bufferSize");\n        }\n\n        // cursor.getAndAdd(n);\u662f\u539f\u5b50\u6027\u7684\n        long current = cursor.getAndAdd(n);\n\n        long nextSequence = current + n;\n        long wrapPoint = nextSequence - bufferSize;\n        long cachedGatingSequence = gatingSequenceCache.get();\n\n        if (wrapPoint > cachedGatingSequence || cachedGatingSequence > current)\n        {\n            long gatingSequence;\n            while (wrapPoint > (gatingSequence = Util.getMinimumSequence(gatingSequences, current)))\n            {\n                LockSupport.parkNanos(1L); // TODO, should we spin based on the wait strategy?\n            }\n\n            gatingSequenceCache.set(gatingSequence);\n        }\n\n        return nextSequence;\n    }\n\n    /**\n     * @see Sequencer#tryNext()\n     */\n    @Override\n    public long tryNext() throws InsufficientCapacityException\n    {\n        return tryNext(1);\n    }\n\n    /**\n     * @see Sequencer#tryNext(int)\n     */\n    @Override\n    public long tryNext(final int n) throws InsufficientCapacityException\n    {\n        if (n < 1)\n        {\n            throw new IllegalArgumentException("n must be > 0");\n        }\n\n        long current;\n        long next;\n\n        do\n        {\n            current = cursor.get();\n            next = current + n;\n\n            if (!hasAvailableCapacity(gatingSequences, n, current))\n            {\n                throw InsufficientCapacityException.INSTANCE;\n            }\n        }\n        while (!cursor.compareAndSet(current, next));\n\n        return next;\n    }\n\n    /**\n     * @see Sequencer#remainingCapacity()\n     */\n    @Override\n    public long remainingCapacity()\n    {\n        long consumed = Util.getMinimumSequence(gatingSequences, cursor.get());\n        long produced = cursor.get();\n        return getBufferSize() - (produced - consumed);\n    }\n\n    /**\n     * @see Sequencer#publish(long)\n     */\n    @Override\n    public void publish(final long sequence)\n    {\n        setAvailable(sequence);\n        waitStrategy.signalAllWhenBlocking();\n    }\n\n    /**\n     * \u5355\u751f\u4ea7\u8005\u76f4\u63a5\u63a8\u8fdb\u5230\u9ad8\u4f4dsequence\n     * \u591a\u751f\u4ea7\u8005\u6a21\u5f0f\u9700\u8981\u9010\u4e2a\u786e\u4fddavailableBuffer\u4e2d\u7684\u6bcf\u4e2a\u5e8f\u53f7\u88ab\u6b63\u786e\u6807\u8bb0\u4e3a\u5df2\u53d1\u5e03\uff0c\u5e76\u4e14\u53ef\u4ee5\u907f\u514d\u5e76\u53d1\u95ee\u9898\u3002\n     * @see Sequencer#publish(long, long)\n     * @see SingleProducerSequencer#publish(long, long)\n     */\n    @Override\n    public void publish(final long lo, final long hi)\n    {\n        for (long l = lo; l <= hi; l++)\n        {\n            setAvailable(l);\n        }\n        waitStrategy.signalAllWhenBlocking();\n    }\n\n    /**\n     * The below methods work on the availableBuffer flag.\n     *\n     * <p>The prime reason is to avoid a shared sequence object between publisher threads.\n     * (Keeping single pointers tracking start and end would require coordination\n     * between the threads).\n     *\n     * <p>--  Firstly we have the constraint that the delta between the cursor and minimum\n     * gating sequence will never be larger than the buffer size (the code in\n     * next/tryNext in the Sequence takes care of that).\n     * -- Given that; take the sequence value and mask off the lower portion of the\n     * sequence as the index into the buffer (indexMask). (aka modulo operator)\n     * -- The upper portion of the sequence becomes the value to check for availability.\n     * ie: it tells us how many times around the ring buffer we\'ve been (aka division)\n     * -- Because we can\'t wrap without the gating sequences moving forward (i.e. the\n     * minimum gating sequence is effectively our last available position in the\n     * buffer), when we have new data and successfully claimed a slot we can simply\n     * write over the top.\n     * <p>\n     * \u8fd9\u4e2a\u65b9\u6cd5\u7684\u6ce8\u91ca\u5c31\u5728\u5904\u7406\uff0c\u5f53\u5feb\u901f\u6d88\u8d39\uff0csequence\u53c8\u7ed5\u56de\u76f8\u540c\u7684\u6570\u7ec4\u4f4d\u7f6e\u65f6\uff0c\u5982\u4f55\u4fdd\u8bc1\u751f\u4ea7\u8005\u4e0d\u8986\u76d6\u6570\u636e\n     */\n    private void setAvailable(final long sequence)\n    {\n        setAvailableBufferValue(calculateIndex(sequence), calculateAvailabilityFlag(sequence));\n    }\n\n    private void setAvailableBufferValue(final int index, final int flag)\n    {\n        AVAILABLE_ARRAY.setRelease(availableBuffer, index, flag);\n    }\n\n    /**\n     * sequence\u662f\u4e00\u4e2a\u4e00\u76f4\u9012\u589e\u7684\u6570\uff0c\u800cindexShift\u5219\u662f\u56fa\u5b9a\u7684\u5c31\u662fbufferSize\u76842\u7684\u5e42\uff0c\u4e3a\u4ec0\u4e48\u6bd4\u8f83\u4e24\u4e2a\u5c31\u53ef\u4ee5\u77e5\u9053\u662f\u5426\u5176\u53ef\u4ee5\u4f7f\u7528\uff1a\n     * <p> \u5047\u8bbe RingBuffer \u5927\u5c0f\u4e3a 1024\uff0c\u56e0\u6b64 indexShift = 10\u3002\n     * <p> \u5bf9\u4e8e sequence = 2047\uff0c\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u662f 00000000000000000000011111111111\u3002\n     *     \u7ecf\u8fc7 >>> 10 \u7684\u53f3\u79fb\u540e\uff0c\u5f97\u5230 00000000000000000000000000000001\uff0cavailability flag \u662f 1\u3002\n     * <p> \u5bf9\u4e8e sequence = 3071\uff0c\u5176\u4e8c\u8fdb\u5236\u8868\u793a\u662f 00000000000000000000101111111111\u3002\n     *     \u7ecf\u8fc7 >>> 10 \u7684\u53f3\u79fb\u540e\uff0c\u5f97\u5230 00000000000000000000000000000010\uff0cavailability flag \u662f 2\u3002\n     * <p> \u6240\u4ee5\u83b7\u5f97\u5bf9\u5e94 sequence\u4f4d\u7f6e\u4e2d availableBuffer\u7684\u4f7f\u7528\u6807\u8bb0\u4f1a\u4e00\u76f4\u6539\u53d8\uff0c\u53ea\u9700\u8981\u91cd\u65b0\u8ba1\u7b97sequence\u7684\u6807\u8bb0\u7136\u540e\u5bf9\u6bd4\u5df2\u6709\u7684\u6570\u636e\u4e2d\u7684\u6807\u8bb0\u5c31\u77e5\u9053\u662f\u5426\u53ef\u4ee5\u7528\n     * @see Sequencer#isAvailable(long)\n     */\n    @Override\n    public boolean isAvailable(final long sequence)\n    {\n        int index = calculateIndex(sequence);\n        int flag = calculateAvailabilityFlag(sequence);\n        return (int) AVAILABLE_ARRAY.getAcquire(availableBuffer, index) == flag;\n    }\n\n    @Override\n    public long getHighestPublishedSequence(final long lowerBound, final long availableSequence)\n    {\n        for (long sequence = lowerBound; sequence <= availableSequence; sequence++)\n        {\n            if (!isAvailable(sequence))\n            {\n                return sequence - 1;\n            }\n        }\n        return availableSequence;\n    }\n\n    /**\n     * \u8fd4\u56desequence\u9664\u4ee5 bufferSize\u7684\u503c\u5e76\u51cf\u53bb\u53d6bufferSize\u6a21\u4f59\u6570\u7684\u503c\uff0c\u518d\u5c06\u503c\u6309int\u622a\u65ad\uff0c\u8fd9\u4e2a\u503c\u4f1a\u4e0d\u65ad\u7684\u589e\u52a0\uff0c\u751a\u81f3\u4f1a\u8d85\u8fc7bufferSize\n     * \u4f46\u8fd9\u4e0d\u5f71\u54cd\u5176\u5904\u7406 availableBuffer\u6570\u7ec4\u6807\u8bb0\u5bf9\u5e94 RingBuffer \u6807\u8bb0\u4f4d\u7f6e\u7684\u53ef\u7528\u6027\uff0c\u56e0\u4e3aisAvailable(final long sequence)\u4e2d\u53ea\u9700\u8981\u6bd4\u8f83\u524d\u540e\u4e24\u8005\u800c\u4e0d\u662f\u76f4\u63a5\u7528\u5176\u503c\n     */\n    private int calculateAvailabilityFlag(final long sequence)\n    {\n        return (int) (sequence >>> indexShift);\n    }\n\n    private int calculateIndex(final long sequence)\n    {\n        return ((int) sequence) & indexMask;\n    }\n\n    @Override\n    public String toString()\n    {\n        return "MultiProducerSequencer{" +\n                "bufferSize=" + bufferSize +\n                ", waitStrategy=" + waitStrategy +\n                ", cursor=" + cursor +\n                ", gatingSequences=" + Arrays.toString(gatingSequences) +\n                \'}\';\n    }\n}\n\n'})}),"\n",(0,i.jsx)(n.h3,{id:"whats-more",children:"what\u2018s more"}),"\n",(0,i.jsxs)(n.p,{children:["\u5f53\u7136",(0,i.jsx)(n.code,{children:"Disruptor"}),"\u63d0\u4f9b\u4e86\u51e0\u4e4e\u6240\u6709\u5e38\u7528\u573a\u666f\u7684\u5e76\u53d1\u65b9\u6848\u7684\u53ef\u9009\u9879\uff0c\u8fd9\u91cc\u5c31\u4e0d\u8bb2\u4e86\uff0c\u53ef\u4ee5\u8bfb\u4e00\u4e0b\u6211fork\u7684\u6e90\u7801 --",(0,i.jsx)(n.a,{href:"https://github.com/Swagger-Ranger/disruptor.git",children:"disruptor\u6e90\u7801\u89e3\u6790"}),"\uff0c",(0,i.jsx)(n.code,{children:"notes-liufei"}),"\u5206\u652f\uff0c\u6838\u5fc3\u6e90\u7801\u6211\u90fd\u505a\u4e86\u6ce8\u91ca\u3002"]})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>c,x:()=>s});var i=r(6540);const t={},a=i.createContext(t);function c(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);