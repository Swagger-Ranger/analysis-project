"use strict";(self.webpackChunkanalytic_project=self.webpackChunkanalytic_project||[]).push([[9814],{9655:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>a,contentTitle:()=>l,default:()=>o,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var i=t(4848),r=t(8453);const s={title:"data-structure-\u54c8\u5e0c",sidebar_position:11,toc_min_heading_level:2,toc_max_heading_level:5},l=void 0,c={id:"JavaDocs/DSA/data-structure-\u54c8\u5e0c",title:"data-structure-\u54c8\u5e0c",description:"\u9759\u6001\u54c8\u5e0c\u8868",source:"@site/docs/JavaDocs/DSA/data-structure-\u54c8\u5e0c.mdx",sourceDirName:"JavaDocs/DSA",slug:"/JavaDocs/DSA/data-structure-\u54c8\u5e0c",permalink:"/analysis-project/docs/JavaDocs/DSA/data-structure-\u54c8\u5e0c",draft:!1,unlisted:!1,editUrl:"https://github.com/Swagger-Ranger/analysis-project/docs/JavaDocs/DSA/data-structure-\u54c8\u5e0c.mdx",tags:[],version:"current",sidebarPosition:11,frontMatter:{title:"data-structure-\u54c8\u5e0c",sidebar_position:11,toc_min_heading_level:2,toc_max_heading_level:5},sidebar:"jdkSidebar",previous:{title:"algo-\u5171\u8bc6\u7b97\u6cd5-Raft",permalink:"/analysis-project/docs/JavaDocs/DSA/algo-\u5171\u8bc6\u7b97\u6cd5-raft"},next:{title:"data-structure-\u4f4d\u56fe",permalink:"/analysis-project/docs/JavaDocs/DSA/data-structure-\u4f4d\u56fe"}},a={},d=[{value:"\u9759\u6001\u54c8\u5e0c\u8868",id:"\u9759\u6001\u54c8\u5e0c\u8868",level:2},{value:"\u52a8\u6001\u54c8\u5e0c\u8868",id:"\u52a8\u6001\u54c8\u5e0c\u8868",level:2},{value:"\u53ef\u6269\u5c55\u54c8\u5e0c",id:"\u53ef\u6269\u5c55\u54c8\u5e0c",level:3},{value:"\u4ee3\u7801\u5b9e\u73b0",id:"\u4ee3\u7801\u5b9e\u73b0",level:4},{value:"\u7ebf\u6027\u54c8\u5e0c",id:"\u7ebf\u6027\u54c8\u5e0c",level:3},{value:"\u4ee3\u7801\u5b9e\u73b0",id:"\u4ee3\u7801\u5b9e\u73b0-1",level:4},{value:"\u4e00\u81f4\u6027\u54c8\u5e0c",id:"\u4e00\u81f4\u6027\u54c8\u5e0c",level:2},{value:"\u57fa\u672c\u539f\u7406",id:"\u57fa\u672c\u539f\u7406",level:4},{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:4},{value:"\u4ee3\u7801\u5b9e\u73b0",id:"\u4ee3\u7801\u5b9e\u73b0-2",level:4}];function h(n){const e={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h2,{id:"\u9759\u6001\u54c8\u5e0c\u8868",children:"\u9759\u6001\u54c8\u5e0c\u8868"}),"\n",(0,i.jsx)(e.p,{children:"\u6563\u5217\u8868\u4e5f\u53ef\u4ee5\u7528\u4f5c\u7d22\u5f15\u3002\u6709\u7684\u6563\u5217\u8868\u5305\u542b\u8bb8\u591a\u7684\u8bb0\u5f55\uff0c\u4ee5\u81f3\u4e8e\u5b83\u4eec\u4e3b\u8981\u5b58\u653e\u5728\u8f85\u52a9\u5b58\u50a8\u5668\u4e0a\u3002\u5bf9\u4e8e\u5b58\u653e\u5728\u8f85\u52a9\u5b58\u50a8\u5668\u4e0a\u7684\u6563\u5217\u8868\uff0c\u6bcf\u4e00\u4e2a\u6876\u7531\u5b58\u50a8\u5757\u7ec4\u6210\u3002"}),"\n",(0,i.jsxs)(e.p,{children:["\u901a\u8fc7\u6563\u5217\u51fd\u6570h\u5f97\u5230\u7684\u6563\u5217\u503c\uff0c\u8fd9\u4e2a\u6563\u5217\u503c\u5b9a\u4f4d\u5230\u67d0\u4e2a\u6876\u3002\u5982\u679c\u6876\u4e2d\u6709\u592a\u591a\u7684\u8bb0\u5f55\uff0c",(0,i.jsx)(e.strong,{children:"\u90a3\u4e48\u53ef\u4ee5\u7ed9\u8be5\u6876\u52a0\u6ea2\u51fa\u5757\u7684\u94fe\u4ee5\u5b58\u653e\u66f4\u591a\u7684\u8bb0\u5f55"})," \u3002"]}),"\n",(0,i.jsx)(e.p,{children:"\u524d\u9762\u8bf4\u7684\u6563\u5217\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7684\u8ba1\u7b97\u89c4\u5219\u5982\u4e0b\uff1a"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["1\u3001\u5f53\u952e\u4e3a\u6574\u6570\u65f6\uff0c\u6563\u5217\u51fd\u6570\u7684\u4e00\u79cd\u5e38\u89c1\u9009\u62e9\u662f\u8ba1\u7b97 ",(0,i.jsx)(e.strong,{children:"K/B"})," \u7684\u4f59\u6570\uff08K\u8868\u793a\u952e\u503c\uff0cB\u8868\u793a\u6876\u7684\u6570\u91cf\uff09;"]}),"\n",(0,i.jsx)(e.li,{children:"2\u3001\u5f53\u952e\u4e3a\u5b57\u7b26\u4e32\u65f6\uff0c\u53ef\u4ee5\u628a\u6bcf\u4e2a\u5b57\u7b26\u770b\u4f5c\u4e00\u4e2a\u6574\u6570\uff0c\u7136\u540e\u628a\u5b83\u4eec\u7d2f\u52a0\u8d77\u6765\uff0c\u5e76\u5c06\u548c\u5904\u4e8eB,\u7136\u540e\u53d6\u4f59\u6570;"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\u603b\u7684\u6765\u8bf4\u5c31\u662f\uff1a\u4e00\u4e2a\u6876\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u5b58\u50a8\u5757\uff0c\u5e76\u4e14\u6bcf\u4e00\u4e2a\u6876\u8fd8\u6709\u9644\u52a0\u5757\u4ee5\u5b58\u653e\u66f4\u591a\u8bb0\u5f55\u3002\u800c\u4e00\u4e2a\u5b58\u50a8\u5757\uff08\u903b\u8f91\u6982\u5ff5\uff0c\u4e0d\u662f\u5b9e\u9645\u5b58\u5728\u7684\uff09\u662f\u53ef\u4ee5\u5b58\u653e\u591a\u4e2a\u8bb0\u5f55\u7684\u3002"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u5bf9\u4e8e\u6563\u5217\u8868\u7684\u63d2\u5165\uff0c\u5982\u679c\u6839\u636e\u6563\u5217\u51fd\u6570\u5f97\u51fa\u7684\u6876\u6709\u7a7a\u95f2\u7a7a\u95f4\uff0c\u5219\u5c06\u8be5\u8bb0\u5f55\u76f4\u63a5\u653e\u5165\u6876\u4e2d\uff1b\u5982\u679c\u5bf9\u5e94\u7684\u6876\u6ca1\u6709\u7a7a\u95f2\u7a7a\u95f4\uff0c\u6211\u4eec\u5219\u9700\u8981\u589e\u52a0\u4e00\u4e2a\u6ea2\u51fa\u5757\u5230\u8be5\u6876\u7684\u94fe\u4e0a\uff0c\u5e76\u628a\u65b0\u8bb0\u5f55\u5b58\u5165\u8be5\u5757\uff1b"}),"\n",(0,i.jsx)(e.li,{children:"\u5bf9\u4e8e\u6563\u5217\u8868\u7684\u5220\u9664\uff0c\u5927\u81f4\u4e0a\u662f\u901a\u8fc7\u6563\u5217\u51fd\u6570\u627e\u5230\u5bf9\u5e94\u7684\u6876\uff0c\u5e76\u4ece\u6876\u5185\u7684\u5b58\u50a8\u5757\u6216\u8005\u6ea2\u51fa\u5757\u5220\u9664\u5bf9\u5e94\u7684\u8bb0\u5f55\u3002\u5982\u679c\u6b64\u65f6\u6709\u6ea2\u51fa\u5757\uff0c\u5e76\u4e14\u5220\u9664\u7684\u8bb0\u5f55\u662f\u5728\u6876\u5185\u7684\u5b58\u50a8\u5757\u4e2d\uff0c\u5220\u9664\u4e4b\u540e\u7531\u4e8e\u6876\u5185\u5b58\u50a8\u6709\u591a\u4f59\u7684\u7a7a\u95f4\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u6ea2\u51fa\u5757\u7684\u8bb0\u5f55\u79fb\u52a8\u5230\u5b58\u50a8\u5757\u4e2d\u3002\u5982\u679c\u6b64\u65f6\u6ea2\u51fa\u5757\u4e0d\u5305\u542b\u8bb0\u5f55\uff0c\u5219\u53ef\u4ee5\u5220\u9664\u6ea2\u51fa\u5757\u3002"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\u4ece\u6548\u7387\u4e0a\u6765\u770b\uff0c\u5982\u679c\u6709\u8db3\u591f\u591a\u7684\u6876\uff0c\u90a3\u4e48\u4e00\u822c\u7684\u67e5\u627e\u53ea\u9700\u8981\u4e00\u6b21\u78c1\u76d8I/O\u5c31\u53ef\u4ee5\u4e86\u3002\u5f53\u6587\u4ef6\u4e0d\u65ad\u589e\u957f\uff0c\u90a3\u4e48\u6876\u5185\u5c31\u4e0d\u80fd\u5b58\u50a8\u6240\u6709\u7684\u8bb0\u5f55\u3002\u800c\u8bb0\u5f55\u7684\u67e5\u627e\u5c31\u8f6c\u79fb\u5230\u4e86\u94fe\u8868\uff0c\u90a3\u4e48\u5728\u94fe\u8868\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5757\u90fd\u9700\u8981\u4e00\u6b21\u78c1\u76d8I/O\u3002"}),"\n",(0,i.jsxs)(e.p,{children:["\u56e0\u6b64\u76f8\u5bf9\u4e8e\u4e0a\u9762\u7684\u9759\u6001\u6563\u5217\uff0c\u4e0b\u9762\u6211\u4eec\u6765\u770b\u770b\u4e24\u79cd\u52a8\u6001\u6563\u5217\uff1a",(0,i.jsx)(e.strong,{children:"\u53ef\u6269\u5c55\u6563\u5217\u3001\u7ebf\u6027\u6563\u5217"}),"\uff1b"]}),"\n",(0,i.jsx)(e.h2,{id:"\u52a8\u6001\u54c8\u5e0c\u8868",children:"\u52a8\u6001\u54c8\u5e0c\u8868"}),"\n",(0,i.jsx)(e.h3,{id:"\u53ef\u6269\u5c55\u54c8\u5e0c",children:"\u53ef\u6269\u5c55\u54c8\u5e0c"}),"\n",(0,i.jsxs)(e.p,{children:["\u53ef\u6269\u5c55\u6563\u5217\uff08Extendible Hashing\uff09\u662f\u4e00\u79cd\u52a8\u6001\u6563\u5217\u6280\u672f\uff0c\u9002\u7528\u4e8e\u6587\u4ef6\u7cfb\u7edf\u3001\u6570\u636e\u5e93\u7b49\u9700\u8981\u9ad8\u6548\u52a8\u6001\u8c03\u6574\u7684\u5e94\u7528\u573a\u666f\u3002\u5b83\u662f\u4e00\u79cd\u89e3\u51b3\u54c8\u5e0c\u51b2\u7a81\u7684\u65b9\u6cd5\uff0c\u5c24\u5176\u9002\u5408\u5904\u7406\u6570\u636e\u91cf\u52a8\u6001\u53d8\u5316\u7684\u60c5\u51b5\u3002\u4e3a\u4ec0\u4e48\u4f7f\u7528\u6269\u5c55\u54c8\u5e0c\uff0c\u662f\u56e0\u4e3a\u5176\u6876\u90fd\u662f\u56fa\u5b9a\u7684\uff0c\u800c\u6563\u5217\u53ef\u4ee5\u52a8\u6001\u589e\u957f\uff0c\u78c1\u76d8IO\u6bcf\u4e00\u6b21\u7684\u8bfb\u53d6\u90fd\u662f\u56fa\u5b9a\u7684\u5927\u5c0f\u5373\u6570\u636e\u5757\uff0c\u5185\u5b58\u8bfb\u53d6\u4e5f\u662f\u56fa\u5b9a\u7684\u5185\u5b58\u9875\uff0c\u6240\u4ee5\u5f53\u5e95\u5c42\u56fa\u5b9a\u5927\u5c0f\u7684\u6876\u5728\u6570\u636e\u5e93\u4e2d\u5c31\u80fd\u66f4\u597d\u7684\u5229\u7528\u5176IO\u7279\u6027\u3002\u800chashmap\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528\uff0c\u5219\u662f\u56e0\u4e3a\u6269\u5c55\u54c8\u5e0c\u4e2d\u7684\u5c40\u90e8\u6876\u5927\u5c0f\u662f\u56fa\u5b9a\u7684\uff0c\u4e00\u5f00\u59cb\u56fa\u5b9a\u540e\u9762\u5c31\u4e0d\u80fd\u6539\u53d8\uff0c\u8fd9\u610f\u5473\u7740\u5728\u8bbe\u8ba1\u65f6\u9700\u8981\u660e\u786e\u6bcf\u4e2a\u6876\u7684\u5bb9\u91cf\uff0c\u800c ",(0,i.jsx)(e.code,{children:"HashMap"})," \u5219\u662f\u4e00\u4e2a\u901a\u7528\u7684JDK\u5bb9\u5668\uff0c\u5b83\u9700\u8981\u53ef\u4ee5\u52a8\u6001\u8c03\u6574\u6876\u7684\u5927\u5c0f\u548c\u6570\u91cf\uff0c\u8fd9\u6837\u53ef\u4ee5\u66f4\u7075\u6d3b\u5730\u5e94\u5bf9\u5b9e\u9645\u8d1f\u8f7d\u60c5\u51b5\u3002\u5e76\u4e14\u6269\u5c55hash\u9700\u8981\u7ef4\u62a4\u5168\u5c40\u6df1\u5ea6\u7684\u4e00\u4e2a\u76ee\u5f55\u5176\u5728\u5b9e\u73b0\u4e0a\u4e5f\u6bd4",(0,i.jsx)(e.code,{children:"HashMap"}),"\u7684\u5b9e\u73b0\u590d\u6742\u3002"]}),"\n",(0,i.jsxs)(e.p,{children:["\u7b97\u6cd5\u601d\u8def\u5c31\u662f\uff0c\u5c06key \u54c8\u5e0c\u6210\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u4e8c\u8fdb\u5236\u957f\u5ea6\u4e3aK\uff0c\u7136\u540e\u7ef4\u62a4\u6bcf\u4e2a\u6876\u7ed9\u5b9a\u56fa\u5b9a\u5927\u5c0f\uff0c\u7136\u540e\u901a\u8fc7\u7ef4\u62a4\u4e00\u4e2a\u5168\u5c40\u6df1\u5ea6",(0,i.jsx)(e.code,{children:"globalDepth"}),"\u7684\u76ee\u5f55\u8868\uff0c\u6765\u786e\u5b9a\u6876\u7684\u4f4d\u7f6e\uff0c\u53ea\u662f\u5bf9\u5e94\u4f4d\u7f6e\u4e0a\u7684\u6876\u53ef\u4ee5\u662f\u5728\u591a\u6b21\u5206\u88c2\u4e4b\u540e\u76f8\u540c\u7684\u6876\uff0c\u8fd9\u6837\u5b9e\u73b0\u5e73\u8861\u7684\u54c8\u5e0c\u6269\u5c55\uff0c\u7136\u540e\u518d\u4f7f\u7528\u4e00\u4e2a\u672c\u5730\u6df1\u5ea6",(0,i.jsx)(e.code,{children:"localDepth"}),"\u6765\u7ef4\u62a4\u662f\u5426\u9700\u8981\u6269\u5c55\u5168\u5c40\u6df1\u5ea6\u3002"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5173\u952e\u6982\u5ff5\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u76ee\u5f55\uff08Directory\uff09\uff1a\u5b58\u50a8\u6307\u5411\u6876\uff08bucket\uff09\u7684\u6307\u9488\uff0c\u6bcf\u4e2a\u6307\u9488\u5bf9\u5e94\u4e00\u4e2a\u6876\u3002"}),"\n",(0,i.jsxs)(e.li,{children:["\u6876\uff08Bucket\uff09\uff1a\u5b58\u50a8\u5b9e\u9645\u7684\u6570\u636e\u6761\u76ee\uff0c",(0,i.jsx)(e.strong,{children:"\u6bcf\u4e2a\u6876\u6709\u56fa\u5b9a\u7684\u5bb9\u91cf\u3002"})]}),"\n",(0,i.jsx)(e.li,{children:"\u5168\u5c40\u6df1\u5ea6\uff08Global Depth\uff09\uff1a\u76ee\u5f55\u4e2d\u4e8c\u8fdb\u5236\u4f4d\u7684\u6570\u91cf\uff0c\u51b3\u5b9a\u4e86\u76ee\u5f55\u7684\u5927\u5c0f\u3002"}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"globalDepth"})," \u8868\u793a\u76ee\u5f55\u7684\u6df1\u5ea6\uff0c\u7528\u6765\u51b3\u5b9a\u6574\u4e2a\u54c8\u5e0c\u8868\u7684\u54c8\u5e0c\u503c\u4e2d\u6709\u591a\u5c11\u4f4d\u662f\u6709\u6548\u7684\u3002"]}),"\n",(0,i.jsxs)(e.li,{children:["\u5f53\u6574\u4e2a\u54c8\u5e0c\u8868\u7684\u76ee\u5f55\u9700\u8981\u6269\u5c55\u65f6\uff0c",(0,i.jsx)(e.code,{children:"globalDepth"})," \u4f1a\u589e\u52a0\uff0c\u76ee\u5f55\u5927\u5c0f\u7ffb\u500d\u3002"]}),"\n",(0,i.jsxs)(e.li,{children:["\u5c40\u90e8\u6df1\u5ea6\uff08Local Depth\uff09\uff1a\u6bcf\u4e2a\u6876\u4e2d\u4e8c\u8fdb\u5236\u4f4d\u7684\u6570\u91cf\uff0c",(0,i.jsx)(e.strong,{children:"\u6ce8\u610f\uff1a\u5c40\u90e8\u6df1\u5ea6\u5e76\u4e0d\u662f\u6876\u7684\u5927\u5c0f\uff0c\u800c\u662f\u6876\u7684\u5c40\u90e8\u6df1\u5ea6\u4e0e\u6876\u7684\u5206\u88c2\u64cd\u4f5c\u76f8\u5173\u3002\u6876\u7684\u5927\u5c0f\u6839\u636e\u60c5\u51b5\u5236\u5b9a\uff0c\u4e00\u822c\u53ef\u4ee5\u6839\u636e\u5b9e\u9645\u7684\u78c1\u76d8\u7684\u5757\u5927\u5c0f\u548c\u5b58\u50a8\u7684\u6570\u636e\u4e4b\u6bd4\u6765\u51b3\u5b9a\uff0c\u8fd9\u6837\u5728\u8bfb\u53d6\u65f6\u80fd\u5c06\u6574\u5757\u6570\u636e\u4e00\u5e76\u8bfb\u53d6\u51fa\u6765"}),"\u3002"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"localDepth"})," \u8868\u793a\u6bcf\u4e2a\u6876\u7684\u6df1\u5ea6\uff0c\u7528\u6765\u51b3\u5b9a\u8fd9\u4e2a\u6876\u7684\u54c8\u5e0c\u503c\u4e2d\u6709\u591a\u5c11\u4f4d\u662f\u6709\u6548\u7684\u3002\u5b83\u4e0e\u6876\u7684\u5206\u88c2\u64cd\u4f5c\u76f8\u5173\u3002"]}),"\n",(0,i.jsxs)(e.li,{children:["\u5f53\u4e00\u4e2a\u6876\u88ab\u5206\u88c2\u65f6\uff0c",(0,i.jsx)(e.code,{children:"localDepth"})," \u4f1a\u589e\u52a0\uff0c\u4ee5\u53cd\u6620\u8be5\u6876\u7684\u65b0\u7684\u5206\u88c2\u72b6\u6001\u3002\u4f8b\u5982\uff0c\u5982\u679c\u4e00\u4e2a\u6876\u7684 ",(0,i.jsx)(e.code,{children:"localDepth"})," \u4e3a 2\uff0c\u90a3\u4e48\u8be5\u6876\u5bf9\u5e94\u7684\u54c8\u5e0c\u503c\u7684\u524d\u4e24\u4f4d\u662f\u76f8\u540c\u7684\u3002"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.code,{children:"localDepth"}),"\uff08\u5c40\u90e8\u6df1\u5ea6\uff09\u5e76\u4e0d\u662f\u6240\u6709\u6876\u90fd\u76f8\u540c\u3002\u6bcf\u4e2a\u6876\u53ef\u4ee5\u6709\u4e0d\u540c\u7684 ",(0,i.jsx)(e.code,{children:"localDepth"}),"\uff0c\u56e0\u4e3a\u6876\u5728\u4e0d\u540c\u65f6\u95f4\u70b9\u4e0a\u53ef\u80fd\u7ecf\u5386\u8fc7\u4e0d\u540c\u6b21\u6570\u7684\u5206\u88c2\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:["\u5c40\u90e8\u6df1\u5ea6 (",(0,i.jsx)(e.code,{children:"localDepth"}),") \u548c\u5168\u5c40\u6df1\u5ea6 (",(0,i.jsx)(e.code,{children:"globalDepth"}),") \u662f\u53ef\u6269\u5c55\u6563\u5217\u4e2d\u7528\u6765\u7ba1\u7406\u54c8\u5e0c\u8868\u7684\u7ed3\u6784\u4fe1\u606f\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5de5\u4f5c\u673a\u5236\uff1a"})}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u5f53\u63d2\u5165\u6570\u636e\u65f6\uff0c\u4f7f\u7528\u54c8\u5e0c\u51fd\u6570\u8ba1\u7b97\u6570\u636e\u7684\u54c8\u5e0c\u503c\uff0c\u5e76\u53d6\u5168\u5c40\u6df1\u5ea6\u5bf9\u5e94\u7684\u524d\u51e0\u4f4d\u4f5c\u4e3a\u76ee\u5f55\u7d22\u5f15\u3002"}),"\n",(0,i.jsx)(e.li,{children:"\u5982\u679c\u76ee\u6807\u6876\u5df2\u6ee1\uff0c\u68c0\u67e5\u6876\u7684\u5c40\u90e8\u6df1\u5ea6\u662f\u5426\u5c0f\u4e8e\u5168\u5c40\u6df1\u5ea6\uff1a"}),"\n",(0,i.jsx)(e.li,{children:"\u5982\u679c\u662f\uff0c\u5219\u6269\u5c55\u8be5\u6876\uff0c\u589e\u52a0\u5c40\u90e8\u6df1\u5ea6\uff0c\u5e76\u5206\u88c2\u6876\u4e2d\u7684\u6570\u636e\u3002"}),"\n",(0,i.jsx)(e.li,{children:"\u5982\u679c\u5426\uff0c\u5219\u589e\u52a0\u5168\u5c40\u6df1\u5ea6\uff0c\u6269\u5c55\u76ee\u5f55\uff0c\u5e76\u91cd\u65b0\u5206\u914d\u6240\u6709\u6876\u3002"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u4f18\u70b9"})}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u52a8\u6001\u6269\u5c55"}),"\uff1a\u6839\u636e\u9700\u8981\u52a8\u6001\u6269\u5c55\uff0c\u4e0d\u9700\u8981\u9884\u5148\u5206\u914d\u5927\u91cf\u7a7a\u95f4\u3002"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u9ad8\u6548\u67e5\u627e"}),"\uff1a\u901a\u8fc7\u76ee\u5f55\u7d22\u5f15\u76f4\u63a5\u8bbf\u95ee\u6876\uff0c\u63d0\u9ad8\u67e5\u627e\u6548\u7387\u3002"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u51cf\u5c11\u91cd\u6563\u5217"}),"\uff1a\u907f\u514d\u4e86\u4f20\u7edf\u54c8\u5e0c\u8868\u7684\u5168\u8868\u91cd\u6563\u5217\uff0c\u51cf\u5c11\u6027\u80fd\u5f00\u9500\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u7f3a\u70b9"})}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u989d\u5916\u7a7a\u95f4"}),"\uff1a\u9700\u8981\u7ef4\u62a4\u76ee\u5f55\u7ed3\u6784\uff0c\u5360\u7528\u989d\u5916\u7a7a\u95f4\u3002"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5b9e\u73b0\u590d\u6742"}),"\uff1a\u6bd4\u4f20\u7edf\u54c8\u5e0c\u8868\u5b9e\u73b0\u66f4\u590d\u6742\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\u89e3\u51b3\u51b2\u7a81\u65f6\u6269\u5c55\u5168\u5c40\u6df1\u5ea6\u53ea\u662f\u4e00\u4e2a\u62bd\u8c61\u6982\u5ff5\uff0c\u5e76\u4e0d\u4f1a\u5b9e\u9645\u53bb\u6269\u5c55\u7a7a\u95f4\uff0c\u7136\u540e\u8fd9\u6837\u6269\u5c55\u65f6\u5c31\u53ea\u6269\u5c55\u90a3\u4e9b\u5df2\u7ecf\u6ee1\u4e86\u7684\u6876\uff0c\u800c\u4e0d\u9700\u8981\u6269\u5c55\u6240\u6709\u6876\u3002\u8fd9\u79cd\u5c40\u90e8\u6269\u5c55\u7684\u7279\u6027\u4f7f\u5f97\u7cfb\u7edf\u80fd\u591f\u66f4\u6709\u6548\u5730\u7ba1\u7406\u5185\u5b58\uff0c\u907f\u514d\u4e86\u4e0d\u5fc5\u8981\u7684\u8d44\u6e90\u6d6a\u8d39\u3002\u7136\u540e\u4e0d\u7ba1\u662f\u5426\u6269\u5c55\uff0c\u540e\u7eed\u67e5\u627e\u65f6\u90fd\u662f\u6309\u7167\u76ee\u5f55\u6765\u5148\u67e5\u627e\u5230Bucket\uff0c\u518d\u4ecebucket\u4e2d\u83b7\u53d6\u6570\u636e\u3002"}),"\n",(0,i.jsx)(e.h4,{id:"\u4ee3\u7801\u5b9e\u73b0",children:"\u4ee3\u7801\u5b9e\u73b0"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'import java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\n/**\n * \u6269\u5c55\u54c8\u5e0c\n *\n * @author liufei\n * @date 2024/7/1\n **/\npublic class ExtendibleHashing<K, V> {\n    private       int                globalDepth;\n    private       List<Bucket<K, V>> directory;\n    private final int                bucketSize;\n\n    public ExtendibleHashing(int bucketSize) {\n        this.globalDepth = 1;\n        this.bucketSize = bucketSize;\n        this.directory = new ArrayList<>();\n        // \u8fd9\u91cc globalDepth \u6bd4 bucket.localDepth \u59271\uff0c\u56e0\u4e3ainsert\u65f6\u4f1a\u5224\u65adbucket.localDepth == globalDepth\u65f6 doubleDirectory\n        this.directory.add(new Bucket<>(0));\n        this.directory.add(new Bucket<>(0));\n    }\n\n    public V search(K key) {\n        int hash = key.hashCode();\n        int directoryIndex = hash & ((1 << globalDepth) - 1);\n        Bucket<K, V> bucket = directory.get(directoryIndex);\n\n        for (Map.Entry<K, V> entry : bucket.entries) {\n            if (entry.getKey().equals(key)) {\n                return entry.getValue();\n            }\n        }\n        // \u6ca1\u6709\u627e\u5230\u5bf9\u5e94\u7684\u952e\u503c\u5bf9\n        return null;\n    }\n\n\n    /**\n     * hash\u8fd0\u7b97\uff1a\n     * 1 << globalDepth \u8868\u793a\u5c06 1 \u5de6\u79fb globalDepth \u4f4d\uff0c\u7ed3\u679c\u662f\u4e00\u4e2a\u5177\u6709 globalDepth \u4e2a\u4e8c\u8fdb\u5236\u4f4d\u7684\u503c\uff0c\u4f8b\u5982 globalDepth \u4e3a 2 \u65f6\uff0c\u7ed3\u679c\u662f 100\uff08\u5373 4\uff09\u3002\n     * (1 << globalDepth) - 1 \u8868\u793a\u8be5\u503c\u51cf\u53bb 1\uff0c\u7ed3\u679c\u662f\u4e00\u4e2a\u6240\u6709\u4f4e\u4f4d\u6bd4\u7279\u90fd\u4e3a 1 \u7684\u63a9\u7801\uff0c\u4f8b\u5982 globalDepth \u4e3a 2 \u65f6\uff0c\u7ed3\u679c\u662f 011\uff08\u5373 3\uff09\u3002\n     * hash & ((1 << globalDepth) - 1) \u8868\u793a\u5c06\u54c8\u5e0c\u503c\u7684\u4f4e globalDepth \u4f4d\u63d0\u53d6\u51fa\u6765\uff0c\u7528\u4e8e\u786e\u5b9a\u76ee\u5f55\u4e2d\u7684\u4f4d\u7f6e\u3002\n     * &\u4e14\uff0c\u67090\u4e3a0\uff0c\u6bd4\u5982\uff1a1100&1010--\x3e1000\n     *\n     * @param key\n     * @param value\n     */\n    public void insert(K key, V value) {\n        int hash = key.hashCode();\n        //\uff1f\n        int directoryIndex = hash & ((1 << globalDepth) - 1);\n        Bucket<K, V> bucket = directory.get(directoryIndex);\n\n        if (bucket.isFull()) {\n            if (bucket.localDepth == globalDepth) {\n                doubleDirectory();\n            }\n            splitBucket(directoryIndex);\n            insert(key, value);\n        } else {\n            bucket.insert(key, value);\n        }\n    }\n\n    private void doubleDirectory() {\n        List<Bucket<K, V>> newDirectory = new ArrayList<>(directory);\n        newDirectory.addAll(directory);\n        directory = newDirectory;\n        globalDepth++;\n    }\n\n    private void splitBucket(int directoryIndex) {\n        Bucket<K, V> bucket = directory.get(directoryIndex);\n        // \uff1f\n        Bucket<K, V> newBucket = new Bucket<>(bucket.localDepth + 1);\n\n        List<Map.Entry<K, V>> entries = new ArrayList<>(bucket.entries);\n        bucket.clear();\n        bucket.localDepth++;\n\n        // \u6b64\u5904\u5c06\u539f\u6709\u7684\u5143\u7d20\uff0c\u91cd\u65b0\u6563\u5217\u5230\u539f\u6709\u7684bucket\u6216\u8005\u65b0\u7684bucket\u4e2d\uff0c\u6b64mask\u5c31\u662f\u65b0\u7684bucket\u7684\u6563\u5217\u503c\uff0c\u56e0\u4e3a\u5df2\u7ecf\u6267\u884c\u4e86bucket.localDepth++;\n        int mask = 1 << (bucket.localDepth - 1);\n        for (Map.Entry<K, V> entry : entries) {\n            // newDirectoryIndex\u662f\u539f\u6765\u7684bucket\u5bf9\u5e94\u7684hash\u503c\n            int newDirectoryIndex = entry.getKey().hashCode() & ((1 << globalDepth) - 1);\n            // \u65b0\u7684bucket\u7684hash\u503c newDirectoryIndex \u548c\u539f\u6765\u7684\u54c8\u5e0c\u503cmask\u4f4d\u4e0e\u8fd0\u7b97\uff0c\u5982\u679c==0\uff0c\u5219\u8bf4\u660e\u4e0d\u76f8\u7b49\uff0c\u63d2\u5165\u539f\u6765\u7684bucket\u4e2d\n            if ((newDirectoryIndex & mask) == 0) {\n                bucket.insert(entry.getKey(), entry.getValue());\n            } else {\n                newBucket.insert(entry.getKey(), entry.getValue());\n            }\n        }\n\n        for (int i = 0; i < directory.size(); i++) {\n            // (i & mask) != 0 \u5c31\u662f\u5bf9\u5e94\u7684\u65b0\u6876\u63d2\u5165\u7684\u4f4d\u7f6e\uff0cdirectory\u6269\u5c55\u4e4b\u540e\uff0c\u5728\u4e0d\u540c\u7684\u4f4d\u7f6e\u539f\u6765\u90fd\u662f\u76f8\u540c\u7684bucket\u6240\u4ee5\u9996\u5148directory.get(i) == bucket\u6210\u7acb\n            if (directory.get(i) == bucket && (i & mask) != 0) {\n                directory.set(i, newBucket);\n            }\n        }\n    }\n\n    private static class Bucket<K, V> {\n        // localDepth \u5e76\u4e0d\u662f\u6240\u6709\u6876\u90fd\u76f8\u540c\uff0c\u56e0\u4e3a\u6876\u5728\u4e0d\u540c\u65f6\u95f4\u70b9\u4e0a\u53ef\u80fd\u7ecf\u5386\u8fc7\u4e0d\u540c\u6b21\u6570\u7684\u5206\u88c2\u3002\n        private       int                   localDepth;\n        private final List<Map.Entry<K, V>> entries;\n\n        public Bucket(int localDepth) {\n            this.localDepth = localDepth;\n            this.entries = new ArrayList<>();\n        }\n\n        public void insert(K key, V value) {\n            entries.add(new HashMap.SimpleEntry<>(key, value));\n        }\n\n        public boolean isFull() {\n            // \u5177\u4f53\u7684\u5927\u5c0f\u9700\u8981\u6839\u636e\u5b9e\u9645\u7684\u60c5\u51b5\u786e\u8ba4\n            return entries.size() >= 4;\n        }\n\n        public void clear() {\n            entries.clear();\n        }\n    }\n\n    public static void main(String[] args) {\n        ExtendibleHashing<Integer, String> hashing = new ExtendibleHashing<>(4);\n        hashing.insert(1, "One");\n        hashing.insert(2, "Two");\n        hashing.insert(3, "Three");\n        hashing.insert(4, "Four");\n        hashing.insert(5, "Five");\n    }\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"\u7ebf\u6027\u54c8\u5e0c",children:"\u7ebf\u6027\u54c8\u5e0c"}),"\n",(0,i.jsx)(e.p,{children:"\u7ebf\u6027\u6563\u5217\uff08Linear Hashing\uff09\u662f\u4e00\u79cd\u52a8\u6001\u54c8\u5e0c\u6280\u672f\uff0c\u7528\u4e8e\u5728\u6570\u636e\u5e93\u548c\u6587\u4ef6\u7cfb\u7edf\u4e2d\u5b9e\u73b0\u54c8\u5e0c\u8868\u7684\u6269\u5c55\u548c\u7f29\u51cf\u3002\u5176\u4e3b\u8981\u7279\u70b9\u662f\u53ef\u4ee5\u5728\u65e0\u9700\u91cd\u65b0\u54c8\u5e0c\u5168\u90e8\u6570\u636e\u7684\u60c5\u51b5\u4e0b\uff0c\u5e73\u6ed1\u5730\u8c03\u6574\u54c8\u5e0c\u8868\u7684\u5927\u5c0f\uff0c\u4ece\u800c\u6709\u6548\u5730\u5904\u7406\u6570\u636e\u91cf\u7684\u589e\u52a0\u6216\u51cf\u5c11\u3002"}),"\n",(0,i.jsx)(e.p,{children:(0,i.jsx)(e.strong,{children:"\u5173\u952e\u70b9\uff1a\u54c8\u5e0c\u51fd\u6570\u76f4\u63a5\u5c31\u662f\u53d6\u6a21\uff0c\u7ef4\u62a4\u4e00\u4e2a\u54c8\u5e0c\u6307\u9488n\uff0c\u8fd9\u4e2an\u5c31\u662f\u6876\u7684\u6570\u91cf\uff0c\u5e76\u4e14\u7ef4\u62a4\u4e00\u4e2a\u6b63\u5728\u5206\u88c2\u7684\u6876\u7684\u4f4d\u7f6e\u5373\u53d8\u91cfp\uff0c\u7136\u540e\u5c06\u6876\u7684\u589e\u52a0\u548c\u5206\u88c2\u7684\u4f4d\u7f6e\uff0c\u4e0e\u63d2\u5165\u5143\u7d20\u65f6\u6876\u7684\u4f4d\u7f6e\u4f5c\u5206\u79bb\u3002\u8fd0\u884c\u6876\u7684\u5143\u7d20\u6570\u91cf\u8d85\u8fc7\u6876\u7684\u5bb9\u91cf\uff0c\u5141\u8bb8\u6570\u91cf\u6ea2\u51fa\uff0c\u5728\u540e\u7eed\u7684\u63d2\u5165\u4e2d\u53bb\u901a\u8fc7\u5206\u88c2\u6876\u7684\u8fc7\u7a0b\u4e2d\u5e73\u8861\u6876\u4e2d\u5143\u7d20\u7684\u6570\u91cf\u3002"})}),"\n",(0,i.jsx)(e.h4,{id:"\u4ee3\u7801\u5b9e\u73b0-1",children:"\u4ee3\u7801\u5b9e\u73b0"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'import java.util.ArrayList;\nimport java.util.List;\n\npublic class LinearHashing<K, V> {\n\n    private              List<List<Entry<K, V>>> buckets;\n    // \u6bcf\u4e2a\u6876\u7684\u5bb9\u91cf\n    private              int                     bucketCapacity;\n    // \u6700\u5927\u4f7f\u7528\u7684\u54c8\u5e0c\u51fd\u6570\u7684\u6307\u9488\uff0c\u5373\u6709\u591a\u5c11\u4e2a\u6876\n    private              int                     n;\n    // \u5f53\u524d\u6b63\u5728\u5206\u88c2\u7684\u6876\u53d8\u91cf\n    private              int                     p;\n    // \u7ef4\u62a4\u4e00\u4e2a\u5143\u7d20\u603b\u6570\u7684\u53d8\u91cf\n    private              int                     size;\n    // \u5b9a\u4e49\u8d1f\u8f7d\u56e0\u5b50\u4e3a\u5143\u7d20\u603b\u6570\u4e0e\u6876\u603b\u6570\u7684\u6bd4\u503c\u3002\u5f53\u8d1f\u8f7d\u56e0\u5b50\u4f4e\u4e8e\u4e00\u5b9a\u9608\u503c\u65f6\uff0c\u89e6\u53d1\u7f29\u51cf\u64cd\u4f5c\u3002\n    private static final double                  LOAD_FACTOR_THRESHOLD = 0.25;\n\n    static class Entry<K, V> {\n        K key;\n        V value;\n\n        Entry(K key, V value) {\n            this.key = key;\n            this.value = value;\n        }\n    }\n\n    public LinearHashing(int initialBuckets, int bucketCapacity) {\n        this.buckets = new ArrayList<>();\n        for (int i = 0; i < initialBuckets; i++) {\n            buckets.add(new ArrayList<>());\n        }\n        this.bucketCapacity = bucketCapacity;\n        this.n = initialBuckets;\n        this.p = 0;\n        this.size = 0;\n    }\n\n    /**\n     * \u521d\u59cbhash\u51fd\u6570\n     * \u6ce8\u610f\u6b64hash\u51fd\u6570\u662f\u5f88\u91cd\u8981\u7684\uff0c\u5982\u679chash\u51fd\u6570\u6539\u53d8\u4e86\uff0c\u6bd4\u5982\u4e0d\u662f\u53d6\u6a21\uff0c\u5219\u5206\u88c2\u7684\u65b9\u6cd5\u5c31\u9700\u8981\u8c03\u6574\n     *\n     * @param key key\n     * @return \u6876\u7684\u4f4d\u7f6e\n     */\n    private int hash(K key) {\n        return key.hashCode() % n;\n    }\n\n    /**\n     * \u6269\u5c55hash\u51fd\u6570\n     * \u6ce8\u610f\u6b64hash\u51fd\u6570\u662f\u5f88\u91cd\u8981\u7684\uff0c\u5982\u679chash\u51fd\u6570\u6539\u53d8\u4e86\uff0c\u6bd4\u5982\u4e0d\u662f\u53d6\u6a21\uff0c\u5219\u5206\u88c2\u7684\u65b9\u6cd5\u5c31\u9700\u8981\u8c03\u6574\n     *\n     * @param key key\n     * @return \u6876\u7684\u4f4d\u7f6e\n     */\n    private int hash2(K key) {\n        return key.hashCode() % (2 * n);\n    }\n\n    public void insert(K key, V value) {\n        int bucketIndex = hash(key) >= p ? hash(key) : hash2(key);\n\n        buckets.get(bucketIndex).add(new Entry<>(key, value));\n        size++;\n\n        /*\n         * \u5f53\u6dfb\u52a0\u7684\u5143\u7d20\u5927\u4e8e\u4e86\u5176\u5bb9\u91cf\u5c31\u89e6\u53d1\u4e00\u6b21\u5206\u88c2\uff0c\u6b64\u65f6buckets\u4e2d\u7684\u5143\u7d20\u662f\u5b58\u5728\u77ed\u6682\u7684\u5927\u4e8e\u5176\u5bb9\u91cf\u7684\uff0c\u4f46\u8d85\u8fc7\u7684\u5927\u5c0f\u4e0d\u4f1a\u8d85\u8fc7\u6876\u7684\u6570\u91cfn\uff0c\n         * \u56e0\u4e3a\u6bcf\u6b21\u5927\u4e8e\u5bb9\u91cfbucketCapacity\u90fd\u4f1a\u89e6\u53d1\u5206\u88c2\uff0c\u5206\u88c2\u90fd\u662f\u4ece\u5206\u88c2\u70b9\u5f00\u59cb\u7684\uff0c\n         * \u6781\u7aef\u60c5\u51b5\u4e0bn\u6b21\u90fd\u662f\u63d2\u5165\u5230\u6b64\u6876\uff0c\u90a3\u4e5f\u5fc5\u5b9a\u4f1a\u89e6\u53d1\u5f53\u524d\u8d85\u8fc7\u7684\u6876\u7684\u5206\u88c2\uff0c\u56e0\u4e3an\u5c31\u662f\u5c06\u6240\u6709\u7684\u6876\u90fd\u5206\u88c2\u4e86\u4e00\u904d\n         */\n        if (buckets.get(bucketIndex).size() > bucketCapacity) {\n            split();\n        }\n    }\n\n    private void split() {\n\n        List<Entry<K, V>> toRemove = new ArrayList<>();\n        List<Entry<K, V>> newBucket = new ArrayList<>();\n\n        // \u8c03\u6574\u5df2\u6709\u6876\u4e2d\u7684\u5143\u7d20\n        List<Entry<K, V>> oldBucket = buckets.get(p);\n        for (Entry<K, V> entry : oldBucket) {\n            int newIndex = hash2(entry.key);\n            if (newIndex != p) {\n                newBucket.add(entry);\n                toRemove.add(entry);\n            }\n        }\n        oldBucket.removeAll(toRemove);\n\n        /*\n         * \u8fd9\u91cc\u76f4\u63a5 buckets.add(newBucket) \u5373\u53ef\uff0c\u539f\u56e0\u5728\u4e8ehash\u51fd\u6570\u662f\u76f4\u63a5\u53d6\u6a21\uff0c\u5206\u88c2\u662f\u6309\u7167\u987a\u5e8f\u5f80\u4e0b\u5206\u88c2\u7684\n         * \u90a3\u5206\u88c2\u7684\u539f\u6765\u7684\u5143\u7d20\uff0c\u5fc5\u5b9a\u5c31\u5728\u8981\u4e48\u662f\u539f\u6765\u7684bucket\u4e2d\uff0c\u8981\u4e48\u5c31\u5728\u8fd9\u4e2a\u65b0\u589e\u7684bucket\u4e2d\n         * \u6bd4\u5982\uff1a\u521d\u59cb4\u4e2a\u6876- 0\u30011\u30012\u30013\uff0c\u5728\u7ecf\u8fc7\u4e86\u4e00\u6b21\u5206\u88c2\u540e\uff0c\u6b64\u65f6\u518d\u5206\u88c2\u68761\uff0c\u5219\u6b64\u65f6\u7684\u6876\u7684\u60c5\u51b5\u5fc5\u7136\u662f 0\u30011\u30012\u30013\u30014\n         * \u589e\u52a0\u4e00\u4e2a\u6876\u5c31\u662f\u68765\uff0c\u6876\u7684\u60c5\u51b5\u662f0\u30011\u30012\u30013\u30014\u30015\uff0c\u6b64\u65f6\u65b0\u7684\u5143\u7d20\uff0c\u5219\u5fc5\u7136\u5728\u539f\u6765\u7684\u68761\u548c\u65b0\u7684\u68765\u4e2d\n         * \u6bd4\u5982key\u4e3a5\u5219\u539f\u6765\u53d6\u6a214\u662f\u68761\uff0c\u73b0\u5728\u53d6\u6a218\u5c31\u662f\u68765\uff0ckey\u4e3a9\u5219\u539f\u6765\u53d6\u6a214\u662f\u68761\uff0c\u73b0\u5728\u53d6\u6a218\u8fd8\u662f\u68761\n         */\n        buckets.add(newBucket);\n\n        p += 1;\n        if (p == n) {\n            p = 0;\n            n *= 2;\n        }\n    }\n\n    public V search(K key) {\n        int bucketIndex = hash(key) >= p ? hash(key) : hash2(key);\n        if (bucketIndex < buckets.size()) {\n            for (Entry<K, V> entry : buckets.get(bucketIndex)) {\n                if (entry.key.equals(key)) {\n                    return entry.value;\n                }\n            }\n        }\n        return null;\n    }\n\n    public void delete(K key) {\n        int bucketIndex = hash(key) >= p ? hash(key) : hash2(key);\n        if (bucketIndex < buckets.size()) {\n            if (buckets.get(bucketIndex).removeIf(entry -> entry.key.equals(key))) {\n                size--;\n                // Check if we need to merge buckets\n                if ((double) size / buckets.size() < LOAD_FACTOR_THRESHOLD) {\n                    merge();\n                }\n            }\n        }\n    }\n\n    /**\n     * \u5220\u9664\u4e4b\u540e\uff0c\u7f29\u51cf\u54c8\u5e0c\u8868\n     * \u5c06\u90e8\u5206\u6876\u5408\u5e76\uff0c\u5e76\u91cd\u65b0\u8ba1\u7b97\u8fd9\u4e9b\u6876\u4e2d\u7684\u5143\u7d20\u54c8\u5e0c\u503c\n     */\n    private void merge() {\n        if (n <= 1) return; // Can\'t merge any further\n\n        // Merge the last bucket back into the hash table\n        int mergeIndex = n + p - 1;\n        List<Entry<K, V>> mergedBucket = buckets.get(mergeIndex);\n\n        for (Entry<K, V> entry : mergedBucket) {\n            int bucketIndex = hash(entry.key);\n            if (bucketIndex >= buckets.size()) {\n                bucketIndex = hash2(entry.key);\n            }\n            buckets.get(bucketIndex).add(entry);\n        }\n\n        buckets.remove(mergeIndex);\n\n        p -= 1;\n        if (p < 0) {\n            p = n - 1;\n            n /= 2;\n        }\n    }\n\n    public void printBuckets() {\n        for (int i = 0; i < buckets.size(); i++) {\n            System.out.print("Bucket " + i + ": ");\n            for (Entry<K, V> entry : buckets.get(i)) {\n                System.out.print("[" + entry.key + " : " + entry.value + "] ");\n            }\n            System.out.println();\n        }\n    }\n\n    public static void main(String[] args) {\n        LinearHashing<Integer, String> lh = new LinearHashing<>(4, 2);\n\n        // Insert keys and values\n        int[] keys = {12, 23, 34, 45, 56, 67, 78, 89};\n        String[] values = {"A", "B", "C", "D", "E", "F", "G", "H"};\n        for (int i = 0; i < keys.length; i++) {\n            lh.insert(keys[i], values[i]);\n            System.out.println("Inserted " + keys[i] + " : " + values[i]);\n            lh.printBuckets();\n        }\n\n        // Search keys\n        for (int key : keys) {\n            String value = lh.search(key);\n            System.out.println("Key " + key + " found: " + value);\n        }\n\n        // Delete keys\n        for (int key : keys) {\n            lh.delete(key);\n            System.out.println("Deleted " + key);\n            lh.printBuckets();\n        }\n    }\n}\n\n'})}),"\n",(0,i.jsx)(e.h2,{id:"\u4e00\u81f4\u6027\u54c8\u5e0c",children:"\u4e00\u81f4\u6027\u54c8\u5e0c"}),"\n",(0,i.jsx)(e.p,{children:"\u4e00\u81f4\u6027\u54c8\u5e0c\uff08Consistent Hashing\uff09\u662f\u4e00\u79cd\u5206\u5e03\u5f0f\u7cfb\u7edf\u4e2d\u7528\u4e8e\u5c06\u8bf7\u6c42\u6620\u5c04\u5230\u7269\u7406\u8282\u70b9\uff08\u5982\u670d\u52a1\u5668\u3001\u7f13\u5b58\u8282\u70b9\u7b49\uff09\u7684\u65b9\u6cd5\u3002\u5b83\u89e3\u51b3\u4e86\u5728\u5206\u5e03\u5f0f\u73af\u5883\u4e2d\u8282\u70b9\u52a8\u6001\u52a0\u5165\u6216\u9000\u51fa\u65f6\u5982\u4f55\u6709\u6548\u5730\u5206\u914d\u548c\u91cd\u65b0\u5206\u914d\u952e\u7684\u95ee\u9898\u3002\u4e0e\u4f20\u7edf\u7684\u54c8\u5e0c\u7b97\u6cd5\u76f8\u6bd4\uff0c\u4e00\u81f4\u6027\u54c8\u5e0c\u80fd\u591f\u6700\u5c0f\u5316\u6570\u636e\u7684\u91cd\u65b0\u5206\u5e03\uff0c\u51cf\u5c11\u7cfb\u7edf\u5f00\u9500\u548c\u4e2d\u65ad\u3002"}),"\n",(0,i.jsx)(e.h4,{id:"\u57fa\u672c\u539f\u7406",children:"\u57fa\u672c\u539f\u7406"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u54c8\u5e0c\u73af"}),"\uff1a\u4e00\u81f4\u6027\u54c8\u5e0c\u5c06\u54c8\u5e0c\u7a7a\u95f4\u7ec4\u7ec7\u6210\u4e00\u4e2a\u865a\u62df\u7684\u73af\uff08\u901a\u5e38\u662f\u4e00\u4e2a0\u52302^32-1\u7684\u6574\u6570\u73af\uff09\u3002\u73af\u4e0a\u7684\u6bcf\u4e2a\u70b9\u8868\u793a\u4e00\u4e2a\u54c8\u5e0c\u503c\u3002"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u8282\u70b9\u6620\u5c04"}),"\uff1a\u6bcf\u4e2a\u7269\u7406\u8282\u70b9\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u88ab\u6620\u5c04\u5230\u73af\u4e0a\u7684\u4e00\u4e2a\u6216\u591a\u4e2a\u70b9\u3002\u901a\u5e38\u4e00\u4e2a\u8282\u70b9\u4f1a\u88ab\u6620\u5c04\u5230\u591a\u4e2a\u70b9\uff08\u79f0\u4e3a\u865a\u62df\u8282\u70b9\uff09\u4ee5\u5b9e\u73b0\u8d1f\u8f7d\u5747\u8861\u3002"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u6570\u636e\u6620\u5c04"}),"\uff1a\u6570\u636e\u9879\u4e5f\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u88ab\u6620\u5c04\u5230\u73af\u4e0a\u7684\u70b9\u3002\u6bcf\u4e2a\u6570\u636e\u9879\u4f1a\u88ab\u5b58\u50a8\u5728\u987a\u65f6\u9488\u65b9\u5411\u9047\u5230\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u4e0a\u3002"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u8282\u70b9\u589e\u52a0"}),"\uff1a\u5f53\u6709\u65b0\u7684\u8282\u70b9\u52a0\u5165\u65f6\uff0c\u53ea\u9700\u8981\u5c06\u53d7\u5f71\u54cd\u7684\u6570\u636e\u91cd\u65b0\u5206\u914d\u5230\u65b0\u8282\u70b9\u4e0a\uff0c\u5176\u4ed6\u6570\u636e\u4e0d\u53d7\u5f71\u54cd\u3002"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u8282\u70b9\u79fb\u9664"}),"\uff1a\u5f53\u8282\u70b9\u79fb\u9664\u65f6\uff0c\u53ea\u9700\u5c06\u8be5\u8282\u70b9\u4e0a\u7684\u6570\u636e\u91cd\u65b0\u5206\u914d\u5230\u4e0b\u4e00\u4e2a\u987a\u65f6\u9488\u65b9\u5411\u7684\u8282\u70b9\u4e0a\uff0c\u5176\u4ed6\u6570\u636e\u540c\u6837\u4e0d\u53d7\u5f71\u54cd\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\u4e00\u81f4\u6027\u54c8\u5e0c\u7684\u4f18\u52bf\uff1a"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u6700\u5c0f\u5316\u6570\u636e\u79fb\u52a8"}),"\uff1a\u65b0\u8282\u70b9\u7684\u52a0\u5165\u6216\u8282\u70b9\u7684\u5931\u6548\u53ea\u5f71\u54cd\u5230\u73af\u4e0a\u7684\u76f8\u90bb\u8282\u70b9\uff0c\u5176\u4ed6\u8282\u70b9\u7684\u6570\u636e\u65e0\u9700\u79fb\u52a8\u3002"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u6269\u5c55\u6027"}),"\uff1a\u7cfb\u7edf\u4e2d\u6dfb\u52a0\u6216\u79fb\u9664\u8282\u70b9\u65f6\uff0c\u7cfb\u7edf\u8d1f\u8f7d\u53ef\u4ee5\u81ea\u52a8\u5e73\u8861\u3002"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u5bb9\u9519\u6027"}),"\uff1a\u7531\u4e8e\u6bcf\u4e2a\u6570\u636e\u9879\u53ef\u4ee5\u6709\u591a\u4e2a\u526f\u672c\uff08\u5728\u4e0d\u540c\u7684\u8282\u70b9\u4e0a\uff09\uff0c\u5373\u4f7f\u6709\u8282\u70b9\u6545\u969c\uff0c\u6570\u636e\u4e5f\u53ef\u4ee5\u4ece\u5176\u4ed6\u526f\u672c\u6062\u590d\u3002"]}),"\n"]}),"\n",(0,i.jsx)(e.h4,{id:"\u793a\u4f8b",children:"\u793a\u4f8b"}),"\n",(0,i.jsx)(e.p,{children:"\u6bd4\u5982\u5bf9\u6bcf\u4e2a\u8282\u70b9\u5206\u522b\u8bbe\u7f6e 3 \u4e2a\u865a\u62df\u8282\u70b9\uff1a"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsx)(e.li,{children:"\u5bf9\u8282\u70b9 A \u52a0\u4e0a\u7f16\u53f7\u6765\u4f5c\u4e3a\u865a\u62df\u8282\u70b9\uff1aA-01\u3001A-02\u3001A-03"}),"\n",(0,i.jsx)(e.li,{children:"\u5bf9\u8282\u70b9 B \u52a0\u4e0a\u7f16\u53f7\u6765\u4f5c\u4e3a\u865a\u62df\u8282\u70b9\uff1aB-01\u3001B-02\u3001B-03"}),"\n",(0,i.jsx)(e.li,{children:"\u5bf9\u8282\u70b9 C \u52a0\u4e0a\u7f16\u53f7\u6765\u4f5c\u4e3a\u865a\u62df\u8282\u70b9\uff1aC-01\u3001C-02\u3001C-03"}),"\n"]}),"\n",(0,i.jsx)(e.p,{children:"\u5f15\u5165\u865a\u62df\u8282\u70b9\u540e\uff0c\u539f\u672c\u54c8\u5e0c\u73af\u4e0a\u53ea\u6709 3 \u4e2a\u8282\u70b9\u7684\u60c5\u51b5\uff0c\u5c31\u4f1a\u53d8\u6210\u6709 9 \u4e2a\u865a\u62df\u8282\u70b9\u6620\u5c04\u5230\u54c8\u5e0c\u73af\u4e0a\uff0c\u54c8\u5e0c\u73af\u4e0a\u7684\u8282\u70b9\u6570\u91cf\u591a\u4e86 3 \u500d\u3002"}),"\n",(0,i.jsx)("div",{style:{textAlign:"center",width:"100%"},children:(0,i.jsx)("img",{src:"/analysis-project/img/data-structure/hashloop.png",alt:"image",style:{maxWidth:"36%",height:"auto",display:"block",margin:"0 auto"}})}),"\n",(0,i.jsx)(e.p,{children:"\u53ef\u4ee5\u770b\u5230\uff0c\u8282\u70b9\u6570\u91cf\u591a\u4e86\u540e\uff0c\u8282\u70b9\u5728\u54c8\u5e0c\u73af\u4e0a\u7684\u5206\u5e03\u5c31\u76f8\u5bf9\u5747\u5300\u4e86\u3002\u8fd9\u65f6\u5019\uff0c\u5982\u679c\u6709\u8bbf\u95ee\u8bf7\u6c42\u5bfb\u5740\u5230\u300cA-01\u300d\u8fd9\u4e2a\u865a\u62df\u8282\u70b9\uff0c\u63a5\u7740\u518d\u901a\u8fc7\u300cA-01\u300d\u865a\u62df\u8282\u70b9\u627e\u5230\u771f\u5b9e\u8282\u70b9 A\uff0c\u8fd9\u6837\u8bf7\u6c42\u5c31\u80fd\u8bbf\u95ee\u5230\u771f\u5b9e\u8282\u70b9 A \u4e86\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u4e0a\u9762\u4e3a\u4e86\u65b9\u4fbf\u7406\u89e3\uff0c\u6bcf\u4e2a\u771f\u5b9e\u8282\u70b9\u4ec5\u5305\u542b 3 \u4e2a\u865a\u62df\u8282\u70b9\uff0c\u8fd9\u6837\u80fd\u8d77\u5230\u7684\u5747\u8861\u6548\u679c\u5176\u5b9e\u5f88\u6709\u9650\u3002\u800c\u5728\u5b9e\u9645\u7684\u5de5\u7a0b\u4e2d\uff0c\u865a\u62df\u8282\u70b9\u7684\u6570\u91cf\u4f1a\u5927\u5f88\u591a\uff0c\u6bd4\u5982 Nginx \u7684\u4e00\u81f4\u6027\u54c8\u5e0c\u7b97\u6cd5\uff0c\u6bcf\u4e2a\u6743\u91cd\u4e3a 1 \u7684\u771f\u5b9e\u8282\u70b9\u5c31\u542b\u6709160 \u4e2a\u865a\u62df\u8282\u70b9\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u53e6\u5916\uff0c\u865a\u62df\u8282\u70b9\u9664\u4e86\u4f1a\u63d0\u9ad8\u8282\u70b9\u7684\u5747\u8861\u5ea6\uff0c\u8fd8\u4f1a\u63d0\u9ad8\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027\u3002\u5f53\u8282\u70b9\u53d8\u5316\u65f6\uff0c\u4f1a\u6709\u4e0d\u540c\u7684\u8282\u70b9\u5171\u540c\u5206\u62c5\u7cfb\u7edf\u7684\u53d8\u5316\uff0c\u56e0\u6b64\u7a33\u5b9a\u6027\u66f4\u9ad8\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u6bd4\u5982\uff0c\u5f53\u67d0\u4e2a\u8282\u70b9\u88ab\u79fb\u9664\u65f6\uff0c\u5bf9\u5e94\u8be5\u8282\u70b9\u7684\u591a\u4e2a\u865a\u62df\u8282\u70b9\u5747\u4f1a\u79fb\u9664\uff0c\u800c\u8fd9\u4e9b\u865a\u62df\u8282\u70b9\u6309\u987a\u65f6\u9488\u65b9\u5411\u7684\u4e0b\u4e00\u4e2a\u865a\u62df\u8282\u70b9\uff0c\u53ef\u80fd\u4f1a\u5bf9\u5e94\u4e0d\u540c\u7684\u771f\u5b9e\u8282\u70b9\uff0c\u5373\u8fd9\u4e9b\u4e0d\u540c\u7684\u771f\u5b9e\u8282\u70b9\u5171\u540c\u5206\u62c5\u4e86\u8282\u70b9\u53d8\u5316\u5bfc\u81f4\u7684\u538b\u529b\u3002"}),"\n",(0,i.jsx)(e.p,{children:"\u800c\u4e14\uff0c\u6709\u4e86\u865a\u62df\u8282\u70b9\u540e\uff0c\u8fd8\u53ef\u4ee5\u4e3a\u786c\u4ef6\u914d\u7f6e\u66f4\u597d\u7684\u8282\u70b9\u589e\u52a0\u6743\u91cd\uff0c\u6bd4\u5982\u5bf9\u6743\u91cd\u66f4\u9ad8\u7684\u8282\u70b9\u589e\u52a0\u66f4\u591a\u7684\u865a\u62df\u673a\u8282\u70b9\u5373\u53ef\u3002"}),"\n",(0,i.jsx)(e.h4,{id:"\u4ee3\u7801\u5b9e\u73b0-2",children:"\u4ee3\u7801\u5b9e\u73b0"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'import java.util.SortedMap;\nimport java.util.TreeMap;\n\n/**\n * \u4e00\u81f4\u6027\u54c8\u5e0c\n *\n * @author liufei\n * @date 2024/7/2\n **/\npublic class ConsistentHashing {\n\n    // \u6620\u5c04\u7684\u54c8\u5e0c\u73af\n    private final SortedMap<Integer, String> ring = new TreeMap<>();\n    // \u865a\u62df\u8282\u70b9\u7684\u6570\u91cf\n    private final int                        numberOfReplicas;\n\n    public ConsistentHashing(int numberOfReplicas, String[] nodes) {\n        this.numberOfReplicas = numberOfReplicas;\n        for (String node : nodes) {\n            addNode(node);\n        }\n    }\n\n    public void addNode(String node) {\n        for (int i = 0; i < numberOfReplicas; i++) {\n            ring.put((node + i).hashCode(), node);\n        }\n    }\n\n    public void removeNode(String node) {\n        for (int i = 0; i < numberOfReplicas; i++) {\n            ring.remove((node + i).hashCode());\n        }\n    }\n\n    public String getNode(String key) {\n        if (ring.isEmpty()) {\n            return null;\n        }\n        int hash = key.hashCode();\n        if (!ring.containsKey(hash)) {\n            SortedMap<Integer, String> tailMap = ring.tailMap(hash);\n            hash = tailMap.isEmpty() ? ring.firstKey() : tailMap.firstKey();\n        }\n        return ring.get(hash);\n    }\n\n    public static void main(String[] args) {\n        String[] nodes = {"A", "B", "C", "D"};\n        ConsistentHashing ch = new ConsistentHashing(3, nodes);\n\n        System.out.println("Node for key \'myKey\': " + ch.getNode("myKey"));\n        System.out.println("Node for key \'anotherKey\': " + ch.getNode("anotherKey"));\n\n        ch.addNode("E");\n        System.out.println("Node for key \'myKey\' after adding node E: " + ch.getNode("myKey"));\n\n        ch.removeNode("B");\n        System.out.println("Node for key \'myKey\' after removing node B: " + ch.getNode("myKey"));\n    }\n}\n\n'})})]})}function o(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(h,{...n})}):h(n)}},8453:(n,e,t)=>{t.d(e,{R:()=>l,x:()=>c});var i=t(6540);const r={},s=i.createContext(r);function l(n){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:l(n.components),i.createElement(s.Provider,{value:e},n.children)}}}]);