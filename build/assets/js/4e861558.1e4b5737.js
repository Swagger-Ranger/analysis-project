"use strict";(self.webpackChunkanalytic_project=self.webpackChunkanalytic_project||[]).push([[4189],{7380:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>t,metadata:()=>c,toc:()=>o});var i=r(4848),a=r(8453);const t={title:"\u540c\u6b65\u5de5\u5177",sidebar_position:4,toc_min_heading_level:2,toc_max_heading_level:5},s=void 0,c={id:"JavaDocs/JUC/JUC-\u540c\u6b65\u5de5\u5177",title:"\u540c\u6b65\u5de5\u5177",description:"\u5e76\u53d1\u5de5\u5177\u7684\u8bbe\u8ba1\u601d\u8def",source:"@site/docs/JavaDocs/JUC/JUC-\u540c\u6b65\u5de5\u5177.mdx",sourceDirName:"JavaDocs/JUC",slug:"/JavaDocs/JUC/JUC-\u540c\u6b65\u5de5\u5177",permalink:"/analysis-project/docs/JavaDocs/JUC/JUC-\u540c\u6b65\u5de5\u5177",draft:!1,unlisted:!1,editUrl:"https://github.com/Swagger-Ranger/analysis-project/docs/JavaDocs/JUC/JUC-\u540c\u6b65\u5de5\u5177.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"\u540c\u6b65\u5de5\u5177",sidebar_position:4,toc_min_heading_level:2,toc_max_heading_level:5},sidebar:"jdkSidebar",previous:{title:"Atomic\u7c7b",permalink:"/analysis-project/docs/JavaDocs/JUC/JUC-Atomic\u7c7b"},next:{title:"\u5e76\u53d1\u5bb9\u5668",permalink:"/analysis-project/docs/JavaDocs/JUC/JUC-\u5e76\u53d1\u5bb9\u5668"}},l={},o=[{value:"\u5e76\u53d1\u5de5\u5177\u7684\u8bbe\u8ba1\u601d\u8def",id:"\u5e76\u53d1\u5de5\u5177\u7684\u8bbe\u8ba1\u601d\u8def",level:2},{value:"\u4e00\u4e2a\u6574\u578b\u8868\u793a\u591a\u4e2a\u72b6\u6001",id:"\u4e00\u4e2a\u6574\u578b\u8868\u793a\u591a\u4e2a\u72b6\u6001",level:3},{value:"\u65e0synchronized\u5e76\u53d1",id:"\u65e0synchronized\u5e76\u53d1",level:3},{value:"\u5de5\u5177\u7c7b",id:"\u5de5\u5177\u7c7b",level:2},{value:"Semaphore",id:"semaphore",level:3},{value:"CountDownLatch",id:"countdownlatch",level:3},{value:"CyclicBarrier",id:"cyclicbarrier",level:3},{value:"Phaser",id:"phaser",level:3},{value:"Phaser \u529f\u80fd",id:"phaser-\u529f\u80fd",level:4},{value:"\u5b9e\u73b0\u903b\u8f91",id:"\u5b9e\u73b0\u903b\u8f91",level:4},{value:"\u4ee3\u7801\u793a\u4f8b",id:"\u4ee3\u7801\u793a\u4f8b",level:4},{value:"\u9644\u4e00\u4e2aTreiberStack\u5b9e\u73b0",id:"\u9644\u4e00\u4e2atreiberstack\u5b9e\u73b0",level:4}];function d(e){const n={blockquote:"blockquote",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"\u5e76\u53d1\u5de5\u5177\u7684\u8bbe\u8ba1\u601d\u8def",children:"\u5e76\u53d1\u5de5\u5177\u7684\u8bbe\u8ba1\u601d\u8def"}),"\n",(0,i.jsx)(n.h3,{id:"\u4e00\u4e2a\u6574\u578b\u8868\u793a\u591a\u4e2a\u72b6\u6001",children:"\u4e00\u4e2a\u6574\u578b\u8868\u793a\u591a\u4e2a\u72b6\u6001"}),"\n",(0,i.jsxs)(n.p,{children:["\u5728jdk\u63d0\u4f9b\u7684\u8bf8\u591a\u5de5\u5177\u7c7b\uff0c\u6216\u8005\u6574\u4e2ajuc\u5e76\u53d1\u5305\u4e2d\u90fd\u5e38\u5e38\u4f1a\u4f7f\u7528\u4e00\u4e2a\u6574\u578b\u6765\u8868\u793a\u591a\u4e2a\u72b6\u6001\uff0c\u6bd4\u5982\uff1a",(0,i.jsx)(n.code,{children:"StampedLock"}),"\u5b9e\u73b0\u8bfb\u5199\u9501\uff0c\u5c31\u662f\u7528\u4e00\u4e2along\uff0c\u7b2c8\u4f4d\u8868\u793a\u4e00\u4e2a\u5199\u9501\u3001\u540e7\u4f4d\u8868\u793a\u591a\u4e2a\u8bfb\u9501\uff1b"]}),"\n",(0,i.jsxs)(n.p,{children:["\u53c8\u6bd4\u5982",(0,i.jsx)(n.code,{children:"Phrase"}),"\u8fd9\u4e2a\u534f\u8c03\u5de5\u5177\uff0c\u5c06long\u578b\u7684",(0,i.jsx)(n.code,{children:"state"}),"\u53d8\u91cf\u517664\u4f4d\u62c6\u5206\u62101+31+16+16\u6765\u8868\u793a\u591a\u4e2a\u72b6\u6001\u3002"]}),"\n",(0,i.jsx)("div",{style:{textAlign:"center",width:"100%"},children:(0,i.jsx)("img",{src:"/analysis-project/img/juc/juc-12.png",alt:"image",style:{maxWidth:"60%",height:"auto",display:"block",margin:"0 auto"}})}),"\n",(0,i.jsx)(n.p,{children:"\u8fd9\u6837\u5b9e\u73b0\u7684\uff0c\u6211\u7406\u89e3\u662f\u7531\u4e8e\u4e0b\u9762\u7684\u539f\u56e0\uff1a"}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u539f\u5b50\u6027\u64cd\u4f5c\u7684\u9650\u5236"}),"\uff1a\u5e95\u5c42\u662f\u4f7f\u7528Java\u4e2d\u7684\u539f\u5b50\u64cd\u4f5c",(0,i.jsx)(n.code,{children:"CAS"}),"\u6765\u4fdd\u8bc1\u591a\u53d8\u91cf\u72b6\u6001\u66f4\u65b0\u7684\u539f\u5b50\u6027\uff0c\u800c",(0,i.jsx)(n.code,{children:"CAS"}),"\u4e00\u6b21\u53ea\u80fd\u4fdd\u8bc1\u4e00\u4e2a\u53d8\u91cf\u7684\u539f\u5b50\u6027\u3002\u8fd9\u5bf9\u4e8e\u591a\u7ebf\u7a0b\u73af\u5883\u4e2d\u7684\u5e76\u53d1\u5b89\u5168\u975e\u5e38\u91cd\u8981\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0c\u5982\u679c\u7528\u591a\u4e2a\u53d8\u91cf\u6765\u8868\u793a\u591a\u4e2a\u72b6\u6001\uff0c\u9700\u8981\u4f7f\u7528\u590d\u6742\u7684\u540c\u6b65\u673a\u5236\u6765\u4fdd\u8bc1\u4e00\u81f4\u6027\uff0c\u8fd9\u5728\u5b89\u5168\u6027\u548c\u6548\u7387\u4e0a\u90fd\u4f1a\u5927\u6253\u6298\u6263\u3002"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u66f4\u9ad8\u7684\u7a7a\u95f4\u6548\u7387"}),"\uff1a\u4f7f\u7528\u4e00\u4e2a\u6574\u578b\u53d8\u91cf\u6765\u8868\u793a\u591a\u4e2a\u72b6\u6001\u6216\u53d8\u91cf\uff0c\u53ef\u4ee5\u8282\u7701\u5185\u5b58\u7a7a\u95f4\uff0c\u5c24\u5176\u662f\u5728\u9700\u8981\u5927\u91cf\u72b6\u6001\u53d8\u91cf\u7684\u60c5\u51b5\u4e0b\u3002\u8fd9\u79cd\u65b9\u5f0f\u5229\u7528\u4e86\u4f4d\u64cd\u4f5c\uff0c\u901a\u8fc7\u4f4d\u63a9\u7801\u548c\u4f4d\u79fb\u64cd\u4f5c\uff0c\u53ef\u4ee5\u65b9\u4fbf\u5730\u8bfb\u53d6\u548c\u4fee\u6539\u7279\u5b9a\u7684\u72b6\u6001\u4f4d\u3002"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"\u65e0synchronized\u5e76\u53d1",children:"\u65e0synchronized\u5e76\u53d1"}),"\n",(0,i.jsxs)(n.p,{children:["juc\u4e00\u822c\u4e0d\u4f1a\u4f7f\u7528\u5e95\u5c42\u7684",(0,i.jsx)(n.code,{children:"synchronized"}),"\u5173\u952e\u5b57\u800c\u662f\u901a\u5e38\u91c7\u7528\uff1a",(0,i.jsx)(n.code,{children:"state"}),"\u53d8\u91cf\u3001",(0,i.jsx)(n.code,{children:"cas"}),"\u539f\u5b50\u64cd\u4f5c\u3001",(0,i.jsx)(n.code,{children:"LockSupport.park/unpark"}),"\u963b\u585e\u961f\u5217\uff0c\u8fd9\u4e09\u8005\u6765\u5b9e\u73b0\u5e76\u53d1\u7ba1\u7406\u3002",(0,i.jsx)(n.code,{children:"state"}),"\u53d8\u91cf\u5c31\u662f\u4e0a\u4e00\u6b65\u63d0\u5230\u7684\uff0c\u5f80\u5f80\u662f\u4f9d\u8d56\u5de5\u5177\u81ea\u5df1\u7684\u903b\u8f91\u6765\u81ea\u5b9a\u4e49\u53d8\u91cf\u7684\u542b\u4e49\uff1b\u800cpark/unpark\u5219\u662f\u5e95\u5c42\u9488\u5bf9\u7ebf\u7a0b\u4e00\u5bf9\u4e00\u7684\u5524\u9192\u548c\u963b\u585e\u3002"]}),"\n",(0,i.jsx)(n.h2,{id:"\u5de5\u5177\u7c7b",children:"\u5de5\u5177\u7c7b"}),"\n",(0,i.jsx)(n.h3,{id:"semaphore",children:"Semaphore"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Semaphore"})," \u5176\u4e3b\u8981\u529f\u80fd\u662f\u901a\u8fc7\u5141\u8bb8\u4e00\u5b9a\u6570\u91cf\u7684\u7ebf\u7a0b\u540c\u65f6\u8bbf\u95ee\u5171\u4eab\u8d44\u6e90\u6765\u5b9e\u73b0\u6d41\u91cf\u63a7\u5236\uff0c\u5185\u90e8\u5b9e\u73b0\u4f9d\u8d56\u4e8e\u8ba1\u6570\u5668\u548c\u961f\u5217\u673a\u5236\u3002"]}),"\n",(0,i.jsx)("div",{style:{textAlign:"center",width:"100%"},children:(0,i.jsx)("img",{src:"/analysis-project/img/juc/juc-7.png",alt:"image",style:{maxWidth:"60%",height:"auto",display:"block",margin:"0 auto"}})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Semaphore"}),"\u5c31\u662f\u57fa\u4e8eAQS\u5b9e\u73b0\uff0c\u8d44\u6e90\u603b\u6570\u5c31\u662f",(0,i.jsx)(n.code,{children:"state"}),"\u7684\u521d\u59cb\u503c\uff0c\u5728acquire\u91cc\u5bf9state\u53d8\u91cf\u8fdb\u884cCAS\u51cf\u64cd\u4f5c\uff0c\u51cf\u52300\u4e4b\u540e\uff0c\u7ebf\u7a0b\u963b\u585e;\u5728release\u91cc\u5bf9state\u53d8\u91cf\u8fdb\u884cCAS\u52a0\u64cd\u4f5c\u3002\u5f53\u521d\u59cb\u7684\u8d44\u6e90\u4e2a\u6570\u4e3a1\u7684\u65f6\u5019\uff0cSemaphore\u9000\u5316\u4e3a\u6392\u4ed6\u9501\u3002\u6b63\u56e0\u4e3a\u5982\u6b64\uff0cSemaphone\u7684\u5b9e\u73b0\u539f\u7406\u548c\u9501\u5341\u5206\u7c7b\u4f3c\uff0c\u5e76\u4e14\u6709\u516c\u5e73\u548c\u975e\u516c\u5e73\u4e4b\u5206\u3002\u5173\u952e\u4ee3\u7801\u5982\u4e0b\uff1a"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"public Semaphore(int permits) {\n        sync = new NonfairSync(permits);\n    }\n\npublic Semaphore(int permits, boolean fair) {\n        sync = fair ? new FairSync(permits) : new NonfairSync(permits);\n    }\n\npublic void acquire() throws InterruptedException {\n        sync.acquireSharedInterruptibly(1);\n    }\n\npublic void release() {\n        sync.releaseShared(1);\n    }\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u4e00\u4e2a\u6709\u8da3\u7684\u4f8b\u5b50\uff1a"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'package org.liufei.junit5.test;\n\nimport java.util.concurrent.Semaphore;\nimport java.util.concurrent.atomic.AtomicInteger;\n\n/**\n * \u6a21\u62df\u4e00\u4e2a\u8bfb\u5199\u961f\u5217\uff0c\u603b\u51715\u4e2a\u7f13\u51b2\u5927\u5c0f\uff0c\u56e0\u4e3a\u7f13\u51b2\u5927\u5c0f\u51b3\u5b9a\u4e86\u6700\u591a\u80fd\u6709\u591a\u5c11\u4e2a\u5199\u5165\uff0c\u9664\u975e\u5df2\u7ecf\u88ab\u8bfb\u53d6\uff0c\u5426\u5219\u7f13\u51b2\u7528\u5b8c\u5c31\u4e0d\u80fd\u7ee7\u7eed\u5199\u5165\n * \u5199\u7ebf\u7a0b\u6d88\u8017\u4fe1\u53f7\u91cf\uff0c\u8bfb\u7ebf\u7a0b\u91ca\u653e\u4fe1\u53f7\u91cf\n * \u901a\u8fc7\u4f4d\u7f6e\u6807\u8bb0\u534f\u8c03\u8bfb\u5199\u4f4d\u7f6e\n *\n * @author liufei\n */\npublic class SemaphoreExample {\n\n    private static final int           BUFFER_SIZE = 5;\n    private final        Semaphore     semaphore   = new Semaphore(BUFFER_SIZE);\n    private final        int[]         buffer      = new int[BUFFER_SIZE];\n    private final        AtomicInteger writePos    = new AtomicInteger(0);\n    private final        AtomicInteger readPos     = new AtomicInteger(0);\n\n    // \u5199\u5165\u7f13\u51b2\u533a\u7684\u65b9\u6cd5\n    public void write(int value) throws InterruptedException {\n        semaphore.acquire(); // \u83b7\u53d6\u5199\u8bb8\u53ef\n        int pos = writePos.getAndIncrement() % BUFFER_SIZE;\n        buffer[pos] = value;\n        /*\n         * \u8fd9\u91ccItems in buffer\u5c31\u662f\u4e0b\u6b21\u8981\u5199\u7684\u4f4d\u7f6e\uff0cwritePos\u548creadPos\u4e00\u76f4\u9012\u589e\uff0c\u6240\u4ee5\u76f8\u51cf\u5c31\u662f\u6570\u7ec4\u4e2d\u7684\u4f4d\u7f6e\u3002\n         * \u5b9e\u9645\u751f\u4ea7\u4e2d\u8981\u8003\u8651integer\u6ea2\u51fa\uff0c\u8ba1\u6570\u91cd\u7f6e\u7684\u60c5\u51b5\uff0c\u8fd9\u91cc\u6ca1\u6709\u5199\n         */\n        System.out.println("Written " + value + " to buffer at position " + pos +\n                ". Items in buffer: " + (writePos.get() - readPos.get()));\n    }\n\n    // \u8bfb\u53d6\u7f13\u51b2\u533a\u7684\u65b9\u6cd5\n    public int read() throws InterruptedException {\n        while (writePos.get() == readPos.get()) {\n            Thread.yield(); // \u5982\u679c\u7f13\u51b2\u533a\u4e3a\u7a7a\uff0c\u7b49\u5f85\u6709\u6570\u636e\u53ef\u8bfb\n        }\n        int pos = readPos.getAndIncrement() % BUFFER_SIZE;\n        int value = buffer[pos];\n        System.out.println("Read " + value + " from buffer at position " + pos +\n                ". Items in buffer: " + (writePos.get() - readPos.get()));\n        semaphore.release(); // \u91ca\u653e\u5199\u8bb8\u53ef\n        return value;\n    }\n\n    public static void main(String[] args) {\n        SemaphoreExample example = new SemaphoreExample();\n\n        // \u5199\u7ebf\u7a0b\n        Thread writer = new Thread(() -> {\n            for (int i = 0; i < 10; i++) {\n                try {\n                    example.write(i);\n                    Thread.sleep(100); // \u6a21\u62df\u5199\u64cd\u4f5c\u7684\u5ef6\u8fdf\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n\n        // \u8bfb\u7ebf\u7a0b\n        Thread reader = new Thread(() -> {\n            for (int i = 0; i < 10; i++) {\n                try {\n                    int value = example.read();\n                    Thread.sleep(150); // \u6a21\u62df\u8bfb\u64cd\u4f5c\u7684\u5ef6\u8fdf\n                } catch (InterruptedException e) {\n                    e.printStackTrace();\n                }\n            }\n        });\n\n        writer.start();\n        reader.start();\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"countdownlatch",children:"CountDownLatch"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"CountDownLatch"})," \u662f Java \u4e2d\u7684\u4e00\u4e2a\u540c\u6b65\u8f85\u52a9\u5de5\u5177\uff0c\u5b83\u5141\u8bb8\u4e00\u4e2a\u6216\u591a\u4e2a\u7ebf\u7a0b\u7b49\u5f85\u76f4\u5230\u4e00\u7ec4\u64cd\u4f5c\u5b8c\u6210\u3002\u5728\u5177\u4f53\u5b9e\u73b0\u4e2d\uff0c",(0,i.jsx)(n.code,{children:"CountDownLatch"})," \u4e5f\u57fa\u4e8e AQS \u963b\u585e\u961f\u5217\u6765\u5b9e\u73b0\u7684\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5012\u8ba1\u65f6\u7684\u529f\u80fd\uff0c\u7ebf\u7a0b\u53ef\u4ee5\u5728\u8fd9\u4e2a\u5012\u8ba1\u65f6\u5230\u96f6\u4e4b\u524d\u8fdb\u884c\u7b49\u5f85\uff0c\u5728\u5012\u8ba1\u65f6\u7ed3\u675f\u524d\u540c\u65f6\u8ba9\u591a\u4e2a\u7ebf\u7a0b\u90fd\u963b\u585e\u5728state=0\u6761\u4ef6\u4e0a\uff0c\u901a\u8fc7",(0,i.jsx)(n.code,{children:"countDown()"}),"\u4e00\u76f4\u7d2f\u51cf",(0,i.jsx)(n.code,{children:"state"}),"\uff0c\u51cf\u52300\u540e\u4e00\u6b21\u6027\u5524\u9192\u6240\u6709\u7ebf\u7a0b\uff0c\u5982\u679c\u5728\u8bbe\u7f6e ",(0,i.jsx)(n.code,{children:"await"})," \u8d85\u65f6\u65f6\u95f4\u540e\u8fd8\u672a\u51cf\u4e3a0\uff0c\u5373\u4f7f\u8ba1\u6570\u5668\u7684\u503c\u6ca1\u6709\u964d\u5230\u96f6\uff0c\u4ecd\u7136\u4f1a\u91ca\u653e\u9501\u5f00\u59cb\u6267\u884c\uff0c\u5e76\u4e14\u540e\u7eed\u7684CountDownLatch\u4e2d\u7684\u7ebf\u7a0b\u4e5f\u4e0d\u4f1a\u518d\u88ab\u963b\u585e\uff1b\u5982\u679c\u4e0d\u8bbe\u7f6e\u8d85\u65f6\u5c31\u662f\u4e00\u76f4\u4e0d\u8d85\u65f6\uff0c\u4e00\u76f4\u7b49\u5f85\u51cf\u4e3a0\u3002"]}),"\n",(0,i.jsxs)(n.p,{children:["\u6bd4\u5982\u4e0b\u56fe\u4e2d\uff1a\u5047\u8bbe\u521d\u59cb\u603b\u6570M\uff0cN\u4e2a\u7ebf\u7a0b",(0,i.jsx)(n.code,{children:"await()"}),"\uff0cM\u4e2a\u7ebf\u7a0b",(0,i.jsx)(n.code,{children:"countDown()"}),"\uff0c\u51cf\u52300\u4e4b\u540e\uff0cN\u4e2a\u7ebf\u7a0b\u88ab\u5524\u9192\u3002"]}),"\n",(0,i.jsx)("div",{style:{textAlign:"center",width:"100%"},children:(0,i.jsx)("img",{src:"/analysis-project/img/juc/juc-8.png",alt:"image",style:{maxWidth:"60%",height:"auto",display:"block",margin:"0 auto"}})}),"\n",(0,i.jsx)(n.p,{children:"\u6838\u5fc3\u65b9\u6cd5\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"CountDownLatch doneSignal = new CountDownLatch \uff0810\uff09\uff1b//\u521d\u59cb\u529b10\ndoneSignal.await\uff08\uff09\uff1b //\u4e3b\u7ebf\u7a0b\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u963b\u585e\u5728\u8fd9\ndoneSignal.await\uff08long timeout, TimeUnit unit\uff09\uff1b //\u8bbe\u7f6e\u8d85\u65f6\uff0c\u4e3b\u7ebf\u7a0b\u8c03\u7528\u8be5\u65b9\u6cd5\uff0c\u8d85\u65f6\u524d\u963b\u585e\u5728\u8fd9\ndonesignal.countDown\uff08\uff09\uff1b//10\u4e2aworker\u7ebf\u7a0b \u6bcf\u4e2a\u7ebf\u7a0b\u5de5\u4f5c\u5b8c\u6bd5\u4e4b\u540e \u8c03\u75281\u6b21countDown()\uff0c\u8ba1\u7b97\u5668\u51cf1\u3002\u5f53\u51cf\u52300\u4e4b\u540e\uff0c\u4e3b\u7ebf\u7a0b\u5c31\u4f1a\u88ab\u5524\u9192\n"})}),"\n",(0,i.jsx)(n.p,{children:"\u793a\u4f8b\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'package org.liufei.junit5.test;\n\nimport java.util.concurrent.CountDownLatch;\nimport java.util.concurrent.TimeUnit;\n\n/**\n * @author liufei\n **/\npublic class CountDownLatchTimeoutExample {\n\n    private static final int NUMBER_OF_WORKERS = 5;\n\n    public static void main(String[] args) {\n        CountDownLatch latch = new CountDownLatch(NUMBER_OF_WORKERS);\n\n        // \u542f\u52a8\u591a\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\n        for (int i = 0; i < NUMBER_OF_WORKERS; i++) {\n            new Thread(new Worker(latch)).start();\n        }\n\n        try {\n            // \u4e3b\u7ebf\u7a0b\u7b49\u5f85\uff0c\u8d85\u65f6\u65f6\u95f4\u4e3a 3 \u79d2\n            boolean finished = latch.await(3, TimeUnit.SECONDS);\n            if (finished) {\n                System.out.println("All workers finished within the timeout.");\n            } else {\n                System.out.println("Timeout occurred before all workers finished.");\n            }\n        } catch (InterruptedException e) {\n            e.printStackTrace();\n        }\n    }\n\n    static class Worker implements Runnable {\n        private final CountDownLatch latch;\n\n        Worker(CountDownLatch latch) {\n            this.latch = latch;\n        }\n\n        @Override\n        public void run() {\n            try {\n                // \u6a21\u62df\u5de5\u4f5c\u65f6\u95f4\n                Thread.sleep((long) (Math.random() * 5000));\n                System.out.println(Thread.currentThread().getName() + " has finished working.");\n            } catch (InterruptedException e) {\n                e.printStackTrace();\n            } finally {\n                latch.countDown(); // \u5b8c\u6210\u5de5\u4f5c\u540e\uff0c\u51cf\u5c11\u8ba1\u6570\u5668\n            }\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"cyclicbarrier",children:"CyclicBarrier"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"CyclicBarrier"})," \u662f Java \u4e2d\u7684\u4e00\u4e2a\u540c\u6b65\u8f85\u52a9\u5de5\u5177\uff0c\u5b83\u5141\u8bb8\u4e00\u7ec4\u7ebf\u7a0b\u76f8\u4e92\u7b49\u5f85\uff0c\u76f4\u5230\u6240\u6709\u7ebf\u7a0b\u90fd\u8fbe\u5230\u67d0\u4e2a\u516c\u5171\u5c4f\u969c\u70b9\u3002\u4e0e ",(0,i.jsx)(n.code,{children:"CountDownLatch"})," \u4e0d\u540c\u7684\u662f\uff0c",(0,i.jsx)(n.code,{children:"CyclicBarrier"})," \u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\uff0c\u5373\u5c4f\u969c\u53ef\u4ee5\u5728\u6bcf\u6b21\u88ab\u89e6\u53d1\u540e\u91cd\u7f6e\uff0c\u5e76\u5728\u4e4b\u540e\u518d\u6b21\u4f7f\u7528\u3002"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u5b9e\u73b0\u539f\u7406"})}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"CyclicBarrier"}),"\u57fa\u4e8e",(0,i.jsx)(n.code,{children:"ReentrantLock"}),"+",(0,i.jsx)(n.code,{children:"Condition"}),"\u5b9e\u73b0\u7684\uff0c\u5e76\u4e14\u53ef\u4ee5\u8bbe\u7f6e\u51fa\u53d1\u51fd\u6570"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"public CyclicBarrier(int parties, Runnable barrierAction) {\n        if (parties <= 0) throw new IllegalArgumentException();\n        this.parties = parties;\n        this.count = parties;\n        this.barrierCommand = barrierAction;\n    }\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u540c\u65f6",(0,i.jsx)(n.code,{children:"CyclicBarrier"}),"\u662f\u53ef\u4ee5\u88ab\u91cd\u7528\u7684\uff0c\u6bcf\u4e00\u8f6e\u91cd\u7528\u5c31\u662f\u4e00\u6b21\u540c\u6b65\u70b9\uff0c\u90fd\u662f\u4e00\u4e2a\u88ab\u79f0\u4e3a",(0,i.jsx)(n.code,{children:"Generation"}),"\u7684\u5185\u90e8\u7c7b\u5b9e\u4f8b\u3002\u5e76\u4e14",(0,i.jsx)(n.code,{children:"CyclicBarrier"}),"\u4f1a\u54cd\u5e94\u4e2d\u65ad\uff0c\u7b49\u5f85\u7684\u7ebf\u7a0b\u5982\u679c\u6709\u7ebf\u7a0b\u6536\u5230\u4e86\u4e2d\u65ad\u4fe1\u53f7\uff0c\u6240\u6709\u963b\u585e\u7684\u7ebf\u7a0b\u4e5f\u4f1a\u88ab\u5524\u9192\uff0c\u5c31\u662f\u7531break Barrier()\u51fd\u6570\u5904\u7406\u3002\u7136\u540ecount\u88ab\u91cd\u7f6e\u4e3a\u521d\u59cb\u503c(parties)\uff0c\u91cd\u65b0\u5f00\u59cb\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"private void breakBarrier() {\n        generation.broken = true;\n        count = parties;\n        trip.signalAll();\n    }\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u4ece",(0,i.jsx)(n.code,{children:"breakBarrier"}),"\u65b9\u6cd5\u8ffd\u6eaf\u8c03\u7528\u5730\u65b9\u53ef\u4ee5\u77e5\u9053\uff0c",(0,i.jsx)(n.code,{children:"CyclicBarrier"})," \u5728\u5904\u7406\u7ebf\u7a0b",(0,i.jsx)(n.strong,{children:"\u4e2d\u65ad"}),"\u548c",(0,i.jsx)(n.strong,{children:"\u5f02\u5e38"}),"\u65f6\uff0c\u4f1a\u5c06\u6240\u6709\u7ebf\u7a0b\u5524\u9192\uff0c\u5e76\u4f7f\u5c4f\u969c\u72b6\u6001\u7834\u635f\uff0c\u8fdb\u5165\u4e0b\u4e00\u8f6e\u5c4f\u969c\u7b49\u5f85\u7684\u72b6\u6001\u3002\u5728\u5c4f\u969c\u52a8\u4f5c\u6267\u884c\u8fc7\u7a0b\u4e2d\u51fa\u73b0\u5f02\u5e38\u4e5f\u4f1a\u5bfc\u81f4\u6240\u6709\u7ebf\u7a0b\u88ab\u5524\u9192\uff0c\u5e76\u8fdb\u5165\u7834\u635f\u72b6\u6001\uff0c\u5e76\u629b\u51fa\u5f02\u5e38\u3002"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u5f02\u5e38\u793a\u4f8b"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'package org.liufei.junit5.test;\n\nimport java.util.concurrent.CyclicBarrier;\nimport java.util.concurrent.BrokenBarrierException;\n\n/**\n * @author liufei\n **/\npublic class CyclicBarrierInterruptExample {\n\n    private static final int NUMBER_OF_THREADS = 4;\n\n    public static void main(String[] args) {\n        // \u521b\u5efa\u4e00\u4e2a CyclicBarrier\uff0c\u671f\u671b 4 \u4e2a\u7ebf\u7a0b\u5230\u8fbe\u5c4f\u969c\uff0c\u5e76\u5728\u6240\u6709\u7ebf\u7a0b\u5230\u8fbe\u540e\u6267\u884c\u5c4f\u969c\u52a8\u4f5c\n        CyclicBarrier barrier = new CyclicBarrier(NUMBER_OF_THREADS, () -> {\n            System.out.println("All threads have reached the barrier. Proceeding to next phase...");\n        });\n\n        // \u542f\u52a8\u591a\u4e2a\u7ebf\u7a0b\n        for (int i = 0; i < NUMBER_OF_THREADS; i++) {\n            new Thread(new Worker(barrier)).start();\n        }\n    }\n\n    static class Worker implements Runnable {\n        private final CyclicBarrier barrier;\n\n        Worker(CyclicBarrier barrier) {\n            this.barrier = barrier;\n        }\n\n        @Override\n        public void run() {\n            try {\n                // \u6a21\u62df\u5de5\u4f5c\n                Thread.sleep((long) (Math.random() * 1000));\n\n                // \u5982\u679c\u662f\u7b2c\u4e09\u4e2a\u7ebf\u7a0b\uff0c\u6a21\u62df\u4e2d\u65ad\n                if (Thread.currentThread().getName().equals("Thread-2")) {\n                    Thread.currentThread().interrupt(); // \u6a21\u62df\u4e2d\u65ad\n                }\n\n                System.out.println(Thread.currentThread().getName() + " is waiting at the barrier...");\n                barrier.await(); // \u7b49\u5f85\u5728\u5c4f\u969c\u70b9\n\n                System.out.println(Thread.currentThread().getName() + " has passed the barrier.");\n\n            } catch (InterruptedException e) {\n                System.out.println(Thread.currentThread().getName() + " was interrupted at the barrier.");\n            } catch (BrokenBarrierException e) {\n                System.out.println(Thread.currentThread().getName() + " encountered a broken barrier.");\n            }\n        }\n    }\n}\n'})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["\u6ce8\u610f\uff1a",(0,i.jsx)(n.code,{children:"barrierAction"}),"\u53ea\u4f1a\u88ab\u7b2c10\u4e2a\u7ebf\u7a0b\u6267\u884c1\u6b21 (\u5728\u5524\u9192\u5176\u4ed69\u4e2a\u7ebf\u7a0b\u4e4b\u524d)\uff0c\u800c\u4e0d\u662f10\u4e2a\u7ebf\u7a0b\u6bcf\u4e2a\u90fd\u6267\u884c1\u6b21\u3002"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u4f7f\u7528\u793a\u4f8b"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'package org.liufei.junit5.test;\n\n\nimport java.util.concurrent.CyclicBarrier;\nimport java.util.concurrent.BrokenBarrierException;\n\n/**\n * @author liufei\n **/\npublic class SingleBarrierMultiplePhases {\n\n    private static final int NUMBER_OF_THREADS = 4;\n\n    public static void main(String[] args) {\n        // \u521b\u5efa\u4e00\u4e2a CyclicBarrier\uff0c\u671f\u671b 4 \u4e2a\u7ebf\u7a0b\u5230\u8fbe\u5c4f\u969c\uff0c\u5e76\u5728\u6bcf\u4e2a\u9636\u6bb5\u6267\u884c\u4e0d\u540c\u7684\u52a8\u4f5c\n        CyclicBarrier barrier = new CyclicBarrier(NUMBER_OF_THREADS, () -> {\n            System.out.println("All threads have reached the barrier. Proceeding to next phase...");\n        });\n\n        // \u542f\u52a8\u591a\u4e2a\u7ebf\u7a0b\n        for (int i = 0; i < NUMBER_OF_THREADS; i++) {\n            new Thread(new Worker(barrier)).start();\n        }\n    }\n\n    /**\n     * \u591a\u4e2a\u9636\u6bb5\u534f\u8c03\u6267\u884c\n     * \u8fd9\u4e2a\u5c31\u662f CyclicBarrier \u548cCountDownLatch \u7684\u5dee\u522b\uff0cCyclicBarrier\u53ef\u4ee5\u590d\u7528\u591a\u6b21\u6267\u884c\n     */\n    static class Worker implements Runnable {\n        private final CyclicBarrier barrier;\n\n        Worker(CyclicBarrier barrier) {\n            this.barrier = barrier;\n        }\n\n        @Override\n        public void run() {\n            try {\n                // \u9636\u6bb5 1\n                System.out.println(Thread.currentThread().getName() + " is working on phase 1...");\n                // Simulate work\n                Thread.sleep((long) (Math.random() * 1000));\n                barrier.await(); // Wait at barrier for phase 1\n\n                // \u9636\u6bb5 2\n                System.out.println(Thread.currentThread().getName() + " is working on phase 2...");\n                // Simulate work\n                Thread.sleep((long) (Math.random() * 1000));\n                barrier.await(); // Wait at barrier for phase 2\n\n                // \u9636\u6bb5 3\n                System.out.println(Thread.currentThread().getName() + " is working on phase 3...");\n                // Simulate work\n                Thread.sleep((long) (Math.random() * 1000));\n                barrier.await(); // Wait at barrier for phase 3\n\n            } catch (InterruptedException | BrokenBarrierException e) {\n                e.printStackTrace();\n            }\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h3,{id:"phaser",children:"Phaser"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Phaser"})," \u662f Java \u4e2d\u7684\u4e00\u79cd\u540c\u6b65\u8f85\u52a9\u5de5\u5177\uff0c\u7528\u4e8e\u534f\u8c03\u591a\u4e2a\u7ebf\u7a0b\u7684\u6267\u884c\uff0c\u652f\u6301\u7075\u6d3b\u7684\u540c\u6b65\u9636\u6bb5\u3002\u5b83\u53ef\u4ee5\u770b\u4f5c\u662f ",(0,i.jsx)(n.code,{children:"CountDownLatch"})," \u548c ",(0,i.jsx)(n.code,{children:"CyclicBarrier"})," \u7684\u4e00\u79cd\u6269\u5c55\uff0c\u5141\u8bb8\u5728\u591a\u4e2a\u9636\u6bb5\u4e4b\u95f4\u8fdb\u884c\u7ebf\u7a0b\u540c\u6b65\uff0c\u5e76\u4e14\u80fd\u591f\u52a8\u6001\u5730\u6dfb\u52a0\u548c\u5220\u9664\u53c2\u4e0e\u7684\u7ebf\u7a0b\u3002\u5e76\u4e14",(0,i.jsx)(n.code,{children:"Phaser"}),"\u4e0d\u4f9d\u8d56\u4e8e AQS\uff0c\u800c\u662f\u57fa\u4e8e\u5185\u90e8\u8ba1\u6570\u5668\u548c\u72b6\u6001\u7ba1\u7406\u6765\u5b9e\u73b0\u7ebf\u7a0b\u540c\u6b65\u3002"]}),"\n",(0,i.jsx)(n.h4,{id:"phaser-\u529f\u80fd",children:"Phaser \u529f\u80fd"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"api"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"//\u6ce8\u518c\u4e00\u4e2a\u65b0\u7684party\npublic int register()\n//\u6279\u91cf\u6ce8\u518c\npublic int bulkRegister(int parties)\n//\u4f7f\u5f53\u524d\u7ebf\u7a0b\u5230\u8fbephaser\uff0c\u4e0d\u7b49\u5f85\u5176\u4ed6\u4efb\u52a1\u5230\u8fbe\u3002\u8fd4\u56dearrival phase number\npublic int arrive()\n//\u4f7f\u5f53\u524d\u7ebf\u7a0b\u5230\u8fbephaser\u5e76\u64a4\u9500\u6ce8\u518c\uff0c\u8fd4\u56dearrival phase number\npublic int arriveAndDeregister()\n/*\n * \u4f7f\u5f53\u524d\u7ebf\u7a0b\u5230\u8fbephaser\u5e76\u7b49\u5f85\u5176\u4ed6\u4efb\u52a1\u5230\u8fbe\uff0c\u7b49\u4ef7\u4e8eawaitAdvance(arrive())\u3002\n * \u5982\u679c\u9700\u8981\u7b49\u5f85\u4e2d\u65ad\u6216\u8d85\u65f6\uff0c\u53ef\u4ee5\u4f7f\u7528awaitAdvance\u65b9\u6cd5\u5b8c\u6210\u4e00\u4e2a\u7c7b\u4f3c\u7684\u6784\u9020\u3002\n * \u5982\u679c\u9700\u8981\u5728\u5230\u8fbe\u540e\u53d6\u6d88\u6ce8\u518c\uff0c\u53ef\u4ee5\u4f7f\u7528awaitAdvance(arriveAndDeregister())\u3002\n */\npublic int arriveAndAwaitAdvance()\n//\u7b49\u5f85\u7ed9\u5b9aphase\u6570\uff0c\u8fd4\u56de\u4e0b\u4e00\u4e2a arrival phase number\npublic int awaitAdvance(int phase)\n//\u54cd\u5e94\u4e2d\u65ad\u7248awaitAdvance\npublic int awaitAdvanceInterruptibly(int phase) throws InterruptedException\npublic int awaitAdvanceInterruptibly(int phase, long timeout, TimeUnit unit)\n    throws InterruptedException, TimeoutException\n//\u4f7f\u5f53\u524dphaser\u8fdb\u5165\u7ec8\u6b62\u72b6\u6001\uff0c\u5df2\u6ce8\u518c\u7684parties\u4e0d\u53d7\u5f71\u54cd\uff0c\u5982\u679c\u662f\u5206\u5c42\u7ed3\u6784\uff0c\u5219\u7ec8\u6b62\u6240\u6709phaser\npublic void forceTermination()\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u529f\u80fd\u6269\u5c55\uff1a"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u591a\u9636\u6bb5\u540c\u6b65"}),"\uff1a",(0,i.jsx)(n.code,{children:"Phaser"}),' \u5141\u8bb8\u7ebf\u7a0b\u5728\u591a\u4e2a\u9636\u6bb5\u4e4b\u95f4\u8fdb\u884c\u540c\u6b65\uff0c\u6bcf\u4e2a\u9636\u6bb5\u79f0\u4e3a\u4e00\u4e2a "phase"\u3002\u8fd9\u79cd\u7075\u6d3b\u6027\u9002\u7528\u4e8e\u9700\u8981\u5728\u591a\u4e2a\u9636\u6bb5\u4e2d\u8fdb\u884c\u590d\u6742\u534f\u8c03\u7684\u573a\u666f\uff0c\u4f8b\u5982\u5728\u6570\u636e\u5904\u7406\u7ba1\u9053\u3001\u5206\u5e03\u5f0f\u8ba1\u7b97\u3001\u5e76\u884c\u4efb\u52a1\u8c03\u5ea6\u7b49\u573a\u666f\u4e2d\u3002']}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"\u591a\u4e2aPhaser\u53ef\u4ee5\u7ec4\u6210\u5982\u4e0b\u56fe\u6240\u793a\u7684\u6811\u72b6\u7ed3\u6784\uff0c\u53ef\u4ee5\u901a\u8fc7\u5728\u6784\u9020\u51fd \u6570\u4e2d\u4f20\u5165\u7236Phaser\u6765\u5b9e\u73b0"}),"\n",(0,i.jsx)("div",{style:{textAlign:"center",width:"100%"},children:(0,i.jsx)("img",{src:"/analysis-project/img/juc/juc-11.png",alt:"image",style:{maxWidth:"60%",height:"auto",display:"block",margin:"0 auto"}})}),"\n",(0,i.jsx)("div",{style:{textAlign:"center",width:"100%"},children:(0,i.jsx)("img",{src:"/analysis-project/img/juc/juc-9.png",alt:"image",style:{maxWidth:"60%",height:"auto",display:"block",margin:"0 auto"}})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"\u52a8\u6001\u7ebf\u7a0b\u7ba1\u7406"}),"\uff1a\u4e0e ",(0,i.jsx)(n.code,{children:"CyclicBarrier"})," \u548c ",(0,i.jsx)(n.code,{children:"CountDownLatch"})," \u4e0d\u540c\uff0c",(0,i.jsx)(n.code,{children:"Phaser"})," \u652f\u6301\u52a8\u6001\u8c03\u6574\u53c2\u4e0e\u8005\uff08\u7ebf\u7a0b\uff09\u7684\u6570\u91cf\u3002\u4f60\u53ef\u4ee5\u5728\u8fd0\u884c\u65f6\u6ce8\u518c\u6216\u6ce8\u9500\u7ebf\u7a0b\uff0c\u800c\u4e0d\u9700\u8981\u5728\u8bbe\u8ba1\u65f6\u56fa\u5b9a\u7ebf\u7a0b\u6570\u91cf\u3002\u8fd9\u5bf9\u4e8e\u9700\u8981\u52a8\u6001\u8c03\u6574\u7ebf\u7a0b\u6c60\u5927\u5c0f\u6216\u5728\u8fd0\u884c\u65f6\u6539\u53d8\u7ebf\u7a0b\u6570\u7684\u5e94\u7528\u7a0b\u5e8f\u975e\u5e38\u6709\u7528\u3002"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"register () // \u6ce8\u518c1\u4e2a\nbulkRegister (int parties) // \u6ce8\u518c\u591a\u4e2a\narriveAndDeregister () // \u89e3\u6ce8\u518c\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u9636\u6bb5\u5b8c\u6210\u7684\u901a\u77e5"}),"\uff1a",(0,i.jsx)(n.code,{children:"Phaser"})," \u53ef\u4ee5\u5728\u6bcf\u4e2a\u9636\u6bb5\u5b8c\u6210\u65f6\u63d0\u4f9b\u901a\u77e5\uff0c\u5141\u8bb8\u7ebf\u7a0b\u5728\u5230\u8fbe\u67d0\u4e2a\u9636\u6bb5\u540e\u6267\u884c\u7279\u5b9a\u7684\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u5728\u6bcf\u4e2a\u9636\u6bb5\u5f00\u59cb\u65f6\u3002\u8fd9\u79cd\u673a\u5236\u5728\u5904\u7406\u9636\u6bb5\u7ed3\u675f\u540e\u7684\u6e05\u7406\u6216\u72b6\u6001\u66f4\u65b0\u65f6\u5f88\u6709\u5e2e\u52a9\u3002"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"\u7075\u6d3b\u7684\u540c\u6b65\u63a7\u5236"}),"\uff1a",(0,i.jsx)(n.code,{children:"Phaser"})," \u63d0\u4f9b\u4e86\u6bd4 ",(0,i.jsx)(n.code,{children:"CountDownLatch"})," \u548c ",(0,i.jsx)(n.code,{children:"CyclicBarrier"})," \u66f4\u5f3a\u7684\u7075\u6d3b\u6027\uff0c\u56e0\u4e3a\u5b83\u4e0d\u4ec5\u53ef\u4ee5\u63a7\u5236\u7ebf\u7a0b\u5728\u67d0\u4e2a\u9636\u6bb5\u7684\u540c\u6b65\uff0c\u8fd8\u652f\u6301\u5728\u76f8\u540c\u9636\u6bb5\u4e2d\u4e0d\u540c\u7ebf\u7a0b\u7684\u4e0d\u540c\u64cd\u4f5c\uff0c\u9002\u7528\u4e8e\u66f4\u590d\u6742\u7684\u540c\u6b65\u9700\u6c42\u3002"]}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"\u5b9e\u73b0\u903b\u8f91",children:"\u5b9e\u73b0\u903b\u8f91"}),"\n",(0,i.jsx)("div",{style:{textAlign:"center",width:"100%"},children:(0,i.jsx)("img",{src:"/analysis-project/img/juc/juc-10.png",alt:"image",style:{maxWidth:"60%",height:"auto",display:"block",margin:"0 auto"}})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsxs)(n.p,{children:["\u8fd9\u91cc\u8bf4\u7684",(0,i.jsx)(n.code,{children:'This class implements an extension of X10 "clocks".  Thanks to Vijay Saraswat for the idea, and to Vivek Sarkar for enhancements to extend functionality.'}),'\uff0cX10 \u662f\u4e00\u79cd\u5e76\u884c\u7f16\u7a0b\u8bed\u8a00\uff0c\u4e3b\u8981\u7528\u4e8e\u7f16\u5199\u5e76\u884c\u548c\u5206\u5e03\u5f0f\u7a0b\u5e8f\u3002\u63d0\u4f9b\u4e86\u4e00\u4e2a\u540d\u4e3a "clocks" \u7684\u6982\u5ff5\uff0c\u7528\u4e8e\u7ba1\u7406\u548c\u534f\u8c03\u5e76\u884c\u6267\u884c\u7684\u4efb\u52a1\u3002X10 \u4e2d\u7684 "clocks" \u662f\u4e00\u79cd\u7528\u4e8e\u63a7\u5236\u5e76\u884c\u4efb\u52a1\u540c\u6b65\u7684\u673a\u5236\uff0c\u5141\u8bb8\u7a0b\u5e8f\u5458\u5728\u4e0d\u540c\u7684 "clock" \u4e0a\u8fd0\u884c\u5e76\u53d1\u4efb\u52a1\uff0c\u5e76\u5bf9\u5b83\u4eec\u8fdb\u884c\u534f\u8c03\u3002']}),"\n"]}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.code,{children:"Phaser"}),"\u4e0d\u4f9d\u8d56\u4e8e AQS\uff0c\u800c\u662f\u57fa\u4e8e\u5185\u90e8\u8ba1\u6570\u5668\u548c\u72b6\u6001\u7ba1\u7406\u6765\u5b9e\u73b0\u7ebf\u7a0b\u540c\u6b65\u3002\u4f46\u5176\u4ecd\u7136\u662f\u548caqs\u4e00\u6837\u7684\u5b9e\u73b0\u601d\u60f3\uff1a",(0,i.jsx)(n.code,{children:"state"}),"\u53d8\u91cf\u3001",(0,i.jsx)(n.code,{children:"cas"}),"\u539f\u5b50\u64cd\u4f5c\u3001",(0,i.jsx)(n.code,{children:"LockSupport.park/unpark"}),"\u963b\u585e\u961f\u5217\u3002\u53ea\u662f\u5176\u5177\u4f53\u7684\u505a\u6cd5\u662f\u5c06long\u578b\u7684",(0,i.jsx)(n.code,{children:"state"}),"\u53d8\u91cf\u517664\u4f4d\u62c6\u5206\u62101+31+16+16\u6765\u8868\u793a\u591a\u4e2a\u72b6\u6001\uff0c\u7136\u540e\u5185\u90e8\u72b6\u6001\u7684\u7ba1\u7406\uff0c\u5c31\u662f\u76f4\u63a5\u8bfb\u53d6state\u7684\u6570\u636e\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"private volatile long state;\n\n    private static final int  MAX_PARTIES     = 0xffff;\n    private static final int  MAX_PHASE       = Integer.MAX_VALUE;\n    private static final int  PARTIES_SHIFT   = 16;\n    private static final int  PHASE_SHIFT     = 32;\n    private static final int  UNARRIVED_MASK  = 0xffff;      // to mask ints\n    private static final long PARTIES_MASK    = 0xffff0000L; // to mask longs\n    private static final long COUNTS_MASK     = 0xffffffffL;\n    private static final long TERMINATION_BIT = 1L << 63;\n\n    // some special values\n    private static final int  ONE_ARRIVAL     = 1;\n    private static final int  ONE_PARTY       = 1 << PARTIES_SHIFT;\n    private static final int  ONE_DEREGISTER  = ONE_ARRIVAL|ONE_PARTY;\n    private static final int  EMPTY           = 1;\n"})}),"\n",(0,i.jsx)("div",{style:{textAlign:"center",width:"100%"},children:(0,i.jsx)("img",{src:"/analysis-project/img/juc/juc-12.png",alt:"image",style:{maxWidth:"60%",height:"auto",display:"block",margin:"0 auto"}})}),"\n",(0,i.jsx)(n.p,{children:"\u6bd4\u5982\u5982\u4e0b\u6e90\u7801\uff1a"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"// \u83b7\u53d6\u4efb\u52a1\u662f\u5426\u5b8c\u6210\uff1a\u56e0\u4e3a\u7b2c\u4e00\u4f4d\u662f\u7b26\u53f7\u4f4d\uff0c\u5982\u679c\u662f1\u5c31\u662f\u8d1f\u6570\uff0c\u5728phrase\u4e2d\u7528\u7b2c\u4e00\u4f4d\u4e3a1\u6765\u8868\u793a\u5b8c\u6210\npublic boolean isTerminated() {\n        return root.state < 0L;\n    }\n\n// \u8bfb\u53d6\u53c2\u4e0e\u8005\u7684\u6570\u91cf\uff1a\u5c31\u662f\u8f6c\u5316\u6210int\uff0c\u5373\u622a\u53d6\u540e\u9762\u768416\u4f4d\uff0c\u7136\u540e\u5411\u53f3\u65e0\u7b26\u53f7\u4f4d\u79fb16\u4f4d\uff0c\u8bfb\u53d6\u7684\u6570\u636e\u5c31\u662f\u4e0a\u56fe\u4e2d\u7684\u603b\u7ebf\u7a0b\u6570\nprivate static int partiesOf(long s) {\n        return (int)s >>> PARTIES_SHIFT;\n    }\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u4f46\u548c",(0,i.jsx)(n.code,{children:"AQS"}),"\u4e0d\u540c\u7684\u662f\u6ca1\u6709\u4f7f\u7528waiting queue\u800c\u662f\u4f7f\u7528\u7684",(0,i.jsx)(n.code,{children:"Treiber stacks"}),"\uff0c\u5e76\u4e14\u4f7f\u7528\u4e86\u4e24\u4e2a\u5947\u5076\u6570\u6765\u964d\u4f4e",(0,i.jsx)(n.code,{children:"Treiber stacks"}),"\u5934\u8282\u70b9\u7684cas\u7ade\u4e89\u3002\u4ee3\u7801\u4e2d\u901a\u8fc7",(0,i.jsx)(n.code,{children:"AtomicReference<QNode> head = (phase & 1) == 0 ? evenQ : oddQ;"}),"\u53731\u4e0e\u5176\u505a\u4e0e\u8fd0\u7b97\u6765\u5224\u65ad\u662f\u5426\u662f\u5947\u5076\u6570\u6765\u51b3\u5b9a\u5176head\u662f\u54ea\u4e2a\u6808\u3002"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"/**\n     * Heads of Treiber stacks for waiting threads. To eliminate\n     * contention when releasing some threads while adding others, we\n     * use two of them, alternating across even and odd phases.\n     * Subphasers share queues with root to speed up releases.\n     */\n    private final AtomicReference<QNode> evenQ;\n    private final AtomicReference<QNode> oddQ;\n"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"/**\n     * Wait nodes for Treiber stack representing wait queue.\n     */\n    static final class QNode implements ForkJoinPool.ManagedBlocker {\n        final Phaser phaser;\n        final int phase;\n        final boolean interruptible;\n        final boolean timed;\n        boolean wasInterrupted;\n        long nanos;\n        final long deadline;\n        volatile Thread thread; // nulled to cancel wait\n        QNode next;\n"})}),"\n",(0,i.jsxs)(n.p,{children:["\u7136\u540e\u5176\u7c7b\u4f3c",(0,i.jsx)(n.code,{children:"AQS"}),"\u7684",(0,i.jsx)(n.code,{children:"acquire"}),"\u65b9\u6cd5\u7684\u6838\u5fc3\u65b9\u6cd5\u5c31\u662f",(0,i.jsx)(n.code,{children:"await*()"}),"\u65b9\u6cd5\u6765\u52a0\u5165\u7b49\u5f85\u961f\u5217\uff0c\u5e76\u4e14\u4f7f\u7528",(0,i.jsx)(n.code,{children:"ForkJoinPool.ManagedBlocker"}),"\u6765\u5904\u7406\u7ebf\u7a0b\u963b\u585e,  ",(0,i.jsx)(n.code,{children:"doArrive(int adjust)"}),"\u548c\u534f\u8c03\u72b6\u6001\u7684",(0,i.jsx)(n.code,{children:"reconcileState() "}),"\u65b9\u6cd5\uff0c\u540c\u65f6",(0,i.jsx)(n.code,{children:"register"}),"\u7c7b\u7684\u65b9\u6cd5\u4e5f\u4f1a\u4e00\u8d77\u8c03\u7528",(0,i.jsx)(n.code,{children:"reconcileState() "}),"\u5904\u7406phaser\u72b6\u6001\u3002"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"\u800cPhaser\u7684\u5b50phaser\u5d4c\u5957\u7684\u5b9e\u73b0\u662fQNode\u4e2d\u7ef4\u62a4\u6709\u4e00\u4e2aphaser\u7684\u53c2\u6570\u3001\u540c\u65f6\u4e5f\u6709thead\u53c2\u6570\u548cnext\u7684QNode\uff0c\u8fd9\u6837\u6574\u4e2aphaser\u6811\u90fd\u901a\u8fc7QNode\u6765\u6784\u5efa\u597d\u4e86\uff0c\u6267\u884c\u5c31\u901a\u8fc7QNode\u7684\u91ca\u653e\u6765\u6267\u884cphaser\u6811\uff0c\u800cQNode\u7684\u91ca\u653e\u5c31\u662f\u901a\u8fc7phaser\u7684\u9636\u6bb5\u63a8\u8fdb\u6765\u5224\u65ad\uff0c\u800cphaser\u9636\u6bb5\u63a8\u8fdb\u5c31\u901a\u8fc7register\u3001arrival\u7b49\u65b9\u6cd5\u6765\u8ba1\u7b97state\u4e2d\u7684\u4f4d\u8fd0\u7b97\u3002"})}),"\n",(0,i.jsxs)(n.blockquote,{children:["\n",(0,i.jsx)(n.p,{children:"\u4e0d\u5f97\u4e0d\u8bf4\uff0c\u8fd9\u91cc\u9762\u7684\u4f4d\u8fd0\u7b97\u5c31\u548c\u53d8\u620f\u6cd5\u4e00\u6837\uff0c\u5934\u90fd\u770b\u75db\u4e86\u4e5f\u6ca1\u5b8c\u5168\u641e\u660e\u767d\u3002"}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"\u4ee3\u7801\u793a\u4f8b",children:"\u4ee3\u7801\u793a\u4f8b"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'package org.liufei.junit5.test;\n\nimport java.util.concurrent.Phaser;\n\n/**\n * \u901a\u8fc7Phaser\u63a7\u5236\u591a\u4e2a\u7ebf\u7a0b\u7684\u6267\u884c\u65f6\u673a\uff1a\u6709\u65f6\u5019\u6211\u4eec\u5e0c\u671b\u6240\u6709\u7ebf\u7a0b\u5230\u8fbe\u6307\u5b9a\u70b9\u540e\u518d\u540c\u65f6\u5f00\u59cb\u6267\u884c\n *\n * @author liufei\n */\npublic class PhaserSimple {\n    public static void main(String[] args) {\n        Phaser phaser = new Phaser();\n        for (int i = 0; i < 5; i++) {\n            phaser.register();                  // \u6ce8\u518c\u5404\u4e2a\u53c2\u4e0e\u8005\u7ebf\u7a0b\n            new Thread(new Tasker(phaser), "Thread-" + i).start();\n        }\n    }\n\n\n   static class Tasker implements Runnable {\n        private final Phaser phaser;\n\n        Tasker(Phaser phaser) {\n            this.phaser = phaser;\n        }\n\n        @Override\n        public void run() {\n            /**\n             * int i = phaser.arriveAndAwaitAdvance(); \u7ebf\u7a0b\u4f1a\u7b49\u5f85\u5176\u4ed6\u7ebf\u7a0b\u4ee5\u524d\u5230\u8fbe\uff0c\u518d\u4e00\u8d77\u6267\u884c\uff0c\u6b64\u65f6\u56e0\u4e3a\u5168\u90e8\u8fbe\u5230\uff0c\n             * \u5f53\u524dphase =\u4f1a\u6253\u5370\u5168\u90e8\u90fd\u662f1\uff0c\u56e0\u4e3aphaser\u6267\u884c\u5b8c\u540e\u5c31\u4f1a\u81ea\u52a8\u8fdb\u5165\u4e0b\u4e00\u9636\u6bb5\uff0c\u5176\u8f6e\u6570\u4f1a+1\n             * int i = phaser.arrive();\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210\uff0c\u4f46\u4e0d\u7b49\u5f85\u5176\u4ed6\u5230\u8fbe\uff0c\n             * \u5f53\u524dphase =\u4f1a\u6253\u53701\u4e5f\u4f1a\u6253\u53700\uff0c\u56e0\u4e3aphaser\u6ca1\u6709\u6267\u884c\u5b8c\uff0c\u6709\u7684\u7ebf\u7a0b\u5728\u524d\u9762\u5c31\u4f1a\u6253\u53700\uff0c\u800c\u540e\u9762\u90fd\u6267\u884c\u5b8c\u4e86\u7ebf\u7a0bphaser\u9636\u6bb5+1\u5c31\u4f1a\u6253\u53701\n             */\n//        int i = phaser.arriveAndAwaitAdvance();     // \u7b49\u5f85\u5176\u5b83\u53c2\u4e0e\u8005\u7ebf\u7a0b\u5230\u8fbe\n            int i = phaser.arrive();     // \u7b49\u5f85\u5176\u5b83\u53c2\u4e0e\u8005\u7ebf\u7a0b\u5230\u8fbe\n            // do something\n            System.out.println(Thread.currentThread().getName() + ": \u6267\u884c\u5b8c\u4efb\u52a1\uff0c\u5f53\u524dphase =" + i + "");\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'package org.liufei.junit5.test;\n\nimport java.io.BufferedReader;\nimport java.io.IOException;\nimport java.io.InputStreamReader;\nimport java.util.concurrent.Phaser;\n\n/**\n * \u901a\u8fc7Phaser\u5b9e\u73b0\u5f00\u5173\u3002\u5728\u4ee5\u524d\u8bb2CountDownLatch\u65f6\uff0c\u6211\u4eec\u7ed9\u51fa\u8fc7\u4ee5CountDownLatch\u5b9e\u73b0\u5f00\u5173\u7684\u793a\u4f8b\uff0c\n * \u4e5f\u5c31\u662f\u8bf4\uff0c\u6211\u4eec\u5e0c\u671b\u4e00\u4e9b\u5916\u90e8\u6761\u4ef6\u5f97\u5230\u6ee1\u8db3\u540e\uff0c\u7136\u540e\u6253\u5f00\u5f00\u5173\uff0c\u7ebf\u7a0b\u624d\u80fd\u7ee7\u7eed\u6267\u884c\uff0c\u6211\u4eec\u770b\u4e0b\u5982\u4f55\u7528Phaser\u6765\u5b9e\u73b0\u6b64\u529f\u80fd\n *\n * @author liufei\n */\npublic class PhaserLatch {\n\n    public static void main(String[] args) throws IOException {\n        Phaser phaser = new Phaser(1);       // \u6ce8\u518c\u4e3b\u7ebf\u7a0b,\u5f53\u5916\u90e8\u6761\u4ef6\u6ee1\u8db3\u65f6,\u7531\u4e3b\u7ebf\u7a0b\u6253\u5f00\u5f00\u5173,\u8fd9\u91cc\u662f1\u5c31\u6bd4\u540e\u9762\u7684\u591a\u4e86\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u6240\u4ee5\u540e\u9762arriveAndDeregister\u4e4b\u540e\u624d\u80fd\u6b63\u5e38\u6267\u884c\n        for (int i = 0; i < 10; i++) {\n            phaser.register();                      // \u6ce8\u518c\u5404\u4e2a\u53c2\u4e0e\u8005\u7ebf\u7a0b\n            new Thread(new Tasker(phaser), "Thread-" + i).start();\n        }\n\n        // \u5916\u90e8\u6761\u4ef6:\u7b49\u5f85\u7528\u6237\u8f93\u5165\u547d\u4ee4\n        System.out.println("Press ENTER to continue");\n        BufferedReader reader = new BufferedReader(new InputStreamReader(System.in));\n        reader.readLine();\n\n        // \u6253\u5f00\u5f00\u5173\n        phaser.arriveAndDeregister();\n        System.out.println("\u4e3b\u7ebf\u7a0b\u6253\u5f00\u4e86\u5f00\u5173");\n    }\n\n    static class Tasker implements Runnable {\n        private final Phaser phaser;\n\n        Tasker(Phaser phaser) {\n            this.phaser = phaser;\n        }\n\n        @Override\n        public void run() {\n            int i = phaser.arriveAndAwaitAdvance();     // \u7b49\u5f85\u5176\u5b83\u53c2\u4e0e\u8005\u7ebf\u7a0b\u5230\u8fbe\n\n            // do something\n            System.out.println(Thread.currentThread().getName() + ": \u6267\u884c\u5b8c\u4efb\u52a1\uff0c\u5f53\u524dphase =" + i + "");\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:'package org.liufei.junit5.test;\n\nimport java.io.IOException;\nimport java.util.concurrent.Phaser;\n\n/**\n * \u91cd\u5199 onAdvance \u65b9\u6cd5\uff0c\u53ef\u4ee5\u5728 Phaser \u8fdb\u5165\u6bcf\u4e2a\u65b0\u9636\u6bb5\u65f6\u6267\u884c\u81ea\u5b9a\u4e49\u903b\u8f91\uff0c\u5e76\u6839\u636e\u9700\u8981\u63a7\u5236 Phaser \u7684\u751f\u547d\u5468\u671f\n *\n * @author liufei\n **/\npublic class PhaserOnAdvance {\n    private static final int TASKS_PER_PHASER = 4;      // \u6bcf\u4e2aPhaser\u5bf9\u8c61\u5bf9\u5e94\u7684\u5de5\u4f5c\u7ebf\u7a0b\uff08\u4efb\u52a1\uff09\u6570\n\n    public static void main(String[] args) throws IOException {\n\n        int repeats = 3;    // \u6307\u5b9a\u4efb\u52a1\u6700\u591a\u6267\u884c\u7684\u6b21\u6570\n        Phaser phaser = new Phaser() {\n            @Override\n            protected boolean onAdvance(int phase, int registeredParties) {\n                System.out.println("---------------PHASE[" + phase + "],Parties[" + registeredParties + "] ---------------");\n                // registeredParties == 0\u6ca1\u6709\u53c2\u4e0e\u8005\u5c31\u7ec8\u6b62\uff0c\u6216\u8005\u8fdb\u5165\u4e0b\u4e00\u9636\u6bb5 phase + 1 >= repeats\n                return phase + 1 >= repeats || registeredParties == 0;\n            }\n        };\n\n        Tasker[] taskers = new Tasker[10];\n        build(taskers, 0, taskers.length, phaser);       // \u6839\u636e\u4efb\u52a1\u6570,\u4e3a\u6bcf\u4e2a\u4efb\u52a1\u5206\u914dPhaser\u5bf9\u8c61\n\n        for (int i = 0; i < taskers.length; i++) {          // \u6267\u884c\u4efb\u52a1\n            Thread thread = new Thread(taskers[i]);\n            thread.start();\n        }\n    }\n\n    private static void build(Tasker[] taskers, int lo, int hi, Phaser phaser) {\n        if (hi - lo > TASKS_PER_PHASER) {\n            for (int i = lo; i < hi; i += TASKS_PER_PHASER) {\n                int j = Math.min(i + TASKS_PER_PHASER, hi);\n                build(taskers, i, j, new Phaser(phaser));\n            }\n        } else {\n            for (int i = lo; i < hi; ++i)\n                taskers[i] = new Tasker(phaser);\n        }\n\n    }\n\n    static class Tasker implements Runnable {\n        private final Phaser phaser;\n\n        Tasker(Phaser phaser) {\n            this.phaser = phaser;\n            this.phaser.register();\n        }\n\n        @Override\n        public void run() {\n            while (!phaser.isTerminated()) {   //\u53ea\u8981Phaser\u6ca1\u6709\u7ec8\u6b62, \u5404\u4e2a\u7ebf\u7a0b\u7684\u4efb\u52a1\u5c31\u4f1a\u4e00\u76f4\u6267\u884c\n                int i = phaser.arriveAndAwaitAdvance();     // \u7b49\u5f85\u5176\u5b83\u53c2\u4e0e\u8005\u7ebf\u7a0b\u5230\u8fbe\n                // do something\n                System.out.println(Thread.currentThread().getName() + ": \u6267\u884c\u5b8c\u4efb\u52a1");\n            }\n        }\n    }\n}\n'})}),"\n",(0,i.jsx)(n.h4,{id:"\u9644\u4e00\u4e2atreiberstack\u5b9e\u73b0",children:"\u9644\u4e00\u4e2aTreiberStack\u5b9e\u73b0"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-java",children:"package org.liufei.junit5.test;\n\nimport java.util.concurrent.atomic.AtomicReference;\n\n/**\n * @author liufei\n */\npublic class TreiberStack<E> {\n\n    // TreiberStack \u53ea\u7ef4\u62a4\u4e00\u4e2a\u6808\u9876\uff0c\u5e76\u4e14\u5fc5\u987b\u4f7f\u7528AtomicReference\u6765\u4fdd\u8bc1\u5165\u6808\u548c\u51fa\u6808\u7684\u539f\u5b50\u6027\u64cd\u4f5c\n    private AtomicReference<Node<E>> top = new AtomicReference<>();\n\n    public void push(E elem) {\n        Node<E> newHead = new Node<>(elem);\n        Node<E> oldHead;\n        do {\n            oldHead = top.get();\n            newHead.next = oldHead;\n        } while (!top.compareAndSet(oldHead, newHead));\n    }\n\n    public E pop() {\n        Node<E> oldHead;\n        Node<E> newHead;\n        do {\n            oldHead = top.get();\n            if (oldHead == null)\n                return null;\n            newHead = oldHead.next;\n        } while (!top.compareAndSet(oldHead, newHead));\n        return oldHead.item;\n    }\n\n    /**\n     * \u7ef4\u62a4\u540e\u7eed\u5143\u7d20\n     *\n     * @param <E>\n     */\n    private static class Node<E> {\n        public final E       item;\n        public       Node<E> next;\n\n        public Node(E item) {\n            this.item = item;\n        }\n    }\n}\n"})})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>s,x:()=>c});var i=r(6540);const a={},t=i.createContext(a);function s(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);