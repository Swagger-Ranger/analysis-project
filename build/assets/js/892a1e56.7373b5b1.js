"use strict";(self.webpackChunkanalytic_project=self.webpackChunkanalytic_project||[]).push([[2506],{4776:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var l=t(4848),r=t(8453);const s={title:"CompletableFuture",sidebar_position:8,toc_min_heading_level:2,toc_max_heading_level:5},o=void 0,a={id:"JavaDocs/JUC/JUC-CompletableFuture",title:"CompletableFuture",description:"\u4eceJDK8\u5f00\u59cb\uff0c\u5728Concurrent\u5305\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u5f02\u6b65\u7f16\u7a0b\u5de5\u5177CompletableFuture\u3002\u5728JDK8\u4e4b\u524d\uff0c\u5f02\u6b65\u7f16\u7a0b\u53ef\u4ee5\u901a\u8fc7\u7ebf\u7a0b\u6c60\u548cFuture\u6765\u5b9e\u73b0\uff0c\u4f46\u529f\u80fd\u8fd8\u4e0d\u591f\u5f3a\u5927\u3002CompletableFuture\u4f7fJava\u7684\u5f02\u6b65\u7f16\u7a0b\u80fd\u529b\u5411\u524d\u8fc8\u8fdb\u4e86\u4e00\u5927\u6b65\u3002",source:"@site/docs/JavaDocs/JUC/JUC-CompletableFuture.mdx",sourceDirName:"JavaDocs/JUC",slug:"/JavaDocs/JUC/JUC-CompletableFuture",permalink:"/analysis-project/docs/JavaDocs/JUC/JUC-CompletableFuture",draft:!1,unlisted:!1,editUrl:"https://github.com/Swagger-Ranger/analysis-project/docs/JavaDocs/JUC/JUC-CompletableFuture.mdx",tags:[],version:"current",sidebarPosition:8,frontMatter:{title:"CompletableFuture",sidebar_position:8,toc_min_heading_level:2,toc_max_heading_level:5},sidebar:"jdkSidebar",previous:{title:"ForkJoinPool",permalink:"/analysis-project/docs/JavaDocs/JUC/JUC-ForkJoinPool"},next:{title:"\u865a\u62df\u7ebf\u7a0b",permalink:"/analysis-project/docs/JavaDocs/JUC/JUC-\u865a\u62df\u7ebf\u7a0b"}},i={},c=[{value:"\u57fa\u672c\u7528\u6cd5",id:"\u57fa\u672c\u7528\u6cd5",level:2},{value:"\u6838\u5fc3API",id:"\u6838\u5fc3api",level:3},{value:"\u5b9e\u6218\u7528\u6cd5",id:"\u5b9e\u6218\u7528\u6cd5",level:3},{value:"\u5185\u90e8\u539f\u7406",id:"\u5185\u90e8\u539f\u7406",level:2}];function u(e){const n={code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsxs)(n.p,{children:["\u4eceJDK8\u5f00\u59cb\uff0c\u5728",(0,l.jsx)(n.code,{children:"Concurrent"}),"\u5305\u4e2d\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f3a\u5927\u7684\u5f02\u6b65\u7f16\u7a0b\u5de5\u5177",(0,l.jsx)(n.code,{children:"CompletableFuture"}),"\u3002\u5728JDK8\u4e4b\u524d\uff0c\u5f02\u6b65\u7f16\u7a0b\u53ef\u4ee5\u901a\u8fc7\u7ebf\u7a0b\u6c60\u548c",(0,l.jsx)(n.code,{children:"Future"}),"\u6765\u5b9e\u73b0\uff0c\u4f46\u529f\u80fd\u8fd8\u4e0d\u591f\u5f3a\u5927\u3002",(0,l.jsx)(n.code,{children:"CompletableFuture"}),"\u4f7fJava\u7684\u5f02\u6b65\u7f16\u7a0b\u80fd\u529b\u5411\u524d\u8fc8\u8fdb\u4e86\u4e00\u5927\u6b65\u3002"]}),"\n",(0,l.jsx)(n.h2,{id:"\u57fa\u672c\u7528\u6cd5",children:"\u57fa\u672c\u7528\u6cd5"}),"\n",(0,l.jsx)(n.h3,{id:"\u6838\u5fc3api",children:"\u6838\u5fc3API"}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"CompletableFuture"}),"\u5c31\u662f\u901a\u8fc7\u5b9e\u73b0",(0,l.jsx)(n.code,{children:"Future"}),"\u63a5\u53e3\u548c",(0,l.jsx)(n.code,{children:"CompletionStage"}),"\u63a5\u53e3\u6765\u63d0\u4f9b\u4e30\u5bcc\u7684\u5f02\u6b65\u7ec4\u80fd\u80fd\u529b\uff0c\u5176\u4e2d",(0,l.jsx)(n.code,{children:"Future"})," \u63d0\u4f9b\u4efb\u52a1\u7684\u57fa\u7840\u5f02\u6b65\u64cd\u4f5c\uff0c\u901a\u8fc7 ",(0,l.jsx)(n.code,{children:"CompletionStage"})," \u652f\u6301\u591a\u79cd\u5f02\u6b65\u64cd\u4f5c\u7684\u7ec4\u5408\u548c\u94fe\u5f0f\u8c03\u7528\u3002"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.code,{children:"Future"})," \u63a5\u53e3\u65b9\u6cd5"]})}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"\u65b9\u6cd5\u7b7e\u540d"}),(0,l.jsx)(n.th,{children:"\u63cf\u8ff0"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"V get()"})}),(0,l.jsx)(n.td,{children:"\u963b\u585e\u76f4\u5230\u4efb\u52a1\u5b8c\u6210\u5e76\u8fd4\u56de\u7ed3\u679c\u3002"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"V get(long timeout, TimeUnit unit)"})}),(0,l.jsx)(n.td,{children:"\u5e26\u8d85\u65f6\u7684\u963b\u585e\u65b9\u6cd5\uff0c\u7b49\u5f85\u4efb\u52a1\u5b8c\u6210\u5e76\u8fd4\u56de\u7ed3\u679c\u3002"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"boolean cancel(boolean mayInterruptIfRunning)"})}),(0,l.jsx)(n.td,{children:"\u53d6\u6d88\u4efb\u52a1\u3002\u5982\u679c\u4efb\u52a1\u6b63\u5728\u8fd0\u884c\uff0c\u53ef\u4ee5\u9009\u62e9\u4e2d\u65ad\u3002"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"boolean isDone()"})}),(0,l.jsx)(n.td,{children:"\u68c0\u67e5\u4efb\u52a1\u662f\u5426\u5b8c\u6210\u3002"})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.td,{children:(0,l.jsx)(n.code,{children:"boolean isCancelled()"})}),(0,l.jsx)(n.td,{children:"\u68c0\u67e5\u4efb\u52a1\u662f\u5426\u88ab\u53d6\u6d88\u3002"})]})]})]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsxs)(n.strong,{children:[(0,l.jsx)(n.code,{children:"CompletionStage"})," \u63a5\u53e3\u65b9\u6cd5"]})}),"\n",(0,l.jsxs)(n.table,{children:[(0,l.jsx)(n.thead,{children:(0,l.jsxs)(n.tr,{children:[(0,l.jsx)(n.th,{children:"\u65b9\u6cd5\u7b7e\u540d"}),(0,l.jsx)(n.th,{children:"\u63cf\u8ff0"})]})}),(0,l.jsxs)(n.tbody,{children:[(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"CompletionStage<U>"})," thenApply ",(0,l.jsx)(n.code,{children:"(Function<? super T, ? extends U> fn)"})]}),(0,l.jsxs)(n.td,{children:["\u5728\u5f53\u524d\u4efb\u52a1\u5b8c\u6210\u540e\uff0c\u4f7f\u7528 ",(0,l.jsx)(n.code,{children:"Function"})," \u5904\u7406\u7ed3\u679c\u5e76\u8fd4\u56de\u65b0\u7684 ",(0,l.jsx)(n.code,{children:"CompletionStage"}),"\u3002"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"CompletionStage<Void>"}),"  thenAccept ",(0,l.jsx)(n.code,{children:"(Consumer<? super T> action)"})]}),(0,l.jsxs)(n.td,{children:["\u5728\u5f53\u524d\u4efb\u52a1\u5b8c\u6210\u540e\uff0c\u4f7f\u7528 ",(0,l.jsx)(n.code,{children:"Consumer"})," \u5904\u7406\u7ed3\u679c\uff0c\u4e0d\u8fd4\u56de\u65b0\u7684 ",(0,l.jsx)(n.code,{children:"CompletionStage"}),"\u3002"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"CompletionStage<U>"})," thenCompose ",(0,l.jsx)(n.code,{children:"(Function<? super T, ? extends CompletionStage<U>> fn)"})]}),(0,l.jsxs)(n.td,{children:["\u5728\u5f53\u524d\u4efb\u52a1\u5b8c\u6210\u540e\uff0c\u4f7f\u7528 ",(0,l.jsx)(n.code,{children:"Function"})," \u8fd4\u56de\u4e00\u4e2a\u65b0\u7684 ",(0,l.jsx)(n.code,{children:"CompletionStage"}),"\u3002"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"CompletionStage<T> "})," exceptionally ",(0,l.jsx)(n.code,{children:"(Function<Throwable, ? extends T> fn)"})]}),(0,l.jsxs)(n.td,{children:["\u5982\u679c\u4efb\u52a1\u51fa\u73b0\u5f02\u5e38\uff0c\u4f7f\u7528 ",(0,l.jsx)(n.code,{children:"Function"})," \u5904\u7406\u5f02\u5e38\u3002"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"CompletionStage<U>"})," handle ",(0,l.jsx)(n.code,{children:"(BiFunction<? super T, Throwable, ? extends U> fn)"})]}),(0,l.jsxs)(n.td,{children:["\u65e0\u8bba\u6210\u529f\u8fd8\u662f\u5931\u8d25\uff0c\u4f7f\u7528 ",(0,l.jsx)(n.code,{children:"BiFunction"})," \u5904\u7406\u7ed3\u679c\u6216\u5f02\u5e38\u3002"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"static CompletableFuture<Void>"}),"  allOf ",(0,l.jsx)(n.code,{children:"(CompletableFuture<?>... cfs)"})]}),(0,l.jsxs)(n.td,{children:["\u5f53\u6240\u6709\u63d0\u4f9b\u7684 ",(0,l.jsx)(n.code,{children:"CompletableFuture"})," \u5b8c\u6210\u65f6\uff0c\u8be5 ",(0,l.jsx)(n.code,{children:"CompletableFuture"})," \u624d\u4f1a\u5b8c\u6210\u3002"]})]}),(0,l.jsxs)(n.tr,{children:[(0,l.jsxs)(n.td,{children:[(0,l.jsx)(n.code,{children:"static CompletableFuture<Object>"})," anyOf ",(0,l.jsx)(n.code,{children:"(CompletableFuture<?>... cfs)"})]}),(0,l.jsxs)(n.td,{children:["\u5f53\u4efb\u610f\u4e00\u4e2a\u63d0\u4f9b\u7684 ",(0,l.jsx)(n.code,{children:"CompletableFuture"})," \u5b8c\u6210\u65f6\uff0c\u8be5 ",(0,l.jsx)(n.code,{children:"CompletableFuture"})," \u624d\u4f1a\u5b8c\u6210\u3002"]})]})]})]}),"\n",(0,l.jsxs)(n.p,{children:["\u4e0a\u9762api\u53ea\u662f\u4e00\u90e8\u5206\uff0c\u4f46\u53ef\u4ee5\u5bf9\u6240\u6709\u7684",(0,l.jsx)(n.code,{children:"CompletableFuture"}),"\u65b9\u6cd5\u505a\u4e00\u4e2a\u5206\u7c7b\uff1a"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsxs)(n.strong,{children:["\u63d0\u4ea4\u4efb\u52a1\uff1a",(0,l.jsx)(n.code,{children:"runAsync"}),"\u4e0e",(0,l.jsx)(n.code,{children:"supplyAsync"})]})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"  <U> CompletableFuture<U> supplyAsync(Supplier<U> supplier) // \u6709\u8fd4\u56de\u503c\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:" CompletableFuture<Void> runAsync(Runnable runnable) // \u6ca1\u6709\u8fd4\u56de\u503c\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsxs)(n.strong,{children:["\u94fe\u5f0f\u7684\u4efb\u52a1\u94fe\u63a5\uff1a",(0,l.jsx)(n.code,{children:"thenRun"}),"\uff0c",(0,l.jsx)(n.code,{children:"thenAccept"}),"\uff0c",(0,l.jsx)(n.code,{children:"thenApply"})]})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:" CompletableFuture<Void> thenRun(Runnable action) // \u65e0\u53c2\u6570\u3001\u65e0\u8fd4\u56de\u503c\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"  CompletableFuture<Void> thenAccept(Consumer<? super T> action) // \u6709\u53c2\u6570\u3001\u65e0\u8fd4\u56de\u503c\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"  public <U> CompletableFuture<U> thenApply(\n      Function<? super T,? extends U> fn)  //\u6709\u53c2\u6570\u3001\u6709\u8fd4\u56de\u503c\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsxs)(n.strong,{children:["\u7ec4\u5408\u4e24\u4e2a",(0,l.jsx)(n.code,{children:"CompletableFuture"}),"\uff1a ",(0,l.jsx)(n.code,{children:"thenCompose"}),"\u548c",(0,l.jsx)(n.code,{children:"thenCombine"})]})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:" thenCombine"})," \u5c06\u4e24\u4e2a",(0,l.jsx)(n.code,{children:"CompletableFuture"}),"\u7684\u7ed3\u679c\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u8fd9\u4e00\u7ec4\u5408\u8fc7\u7a0b\u662f\u540c\u6b65\u7684\uff0c\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\u3002"]}),"\n",(0,l.jsxs)(n.li,{children:[(0,l.jsx)(n.code,{children:"thenCompose"})," \u7684\u4e3b\u8981\u529f\u80fd\u662f\u5c06\u4e00\u4e2a ",(0,l.jsx)(n.code,{children:"CompletableFuture"})," \u7684\u7ed3\u679c\u4f5c\u4e3a\u8f93\u5165\uff0c\u6765\u542f\u52a8\u751f\u6210\u4e00\u4e2a\u65b0\u7684 ",(0,l.jsx)(n.code,{children:"CompletableFuture"})]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsxs)(n.strong,{children:["\u7ec4\u5408\u4efb\u610f\u4e2a",(0,l.jsx)(n.code,{children:"CompletableFuture"}),"\uff1a",(0,l.jsx)(n.code,{children:"allOf"}),"\u548c",(0,l.jsx)(n.code,{children:"anyOf"})]})}),"\n",(0,l.jsxs)(n.ul,{children:["\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"  public static CompletableFuture<Void> allOf(CompletableFuture<?>... cfs) //\u6240\u6709\u7684\u5b8c\u6210\u5219\u5b8c\u6210\uff0c\u6ca1\u6709\u8fd4\u56de\u503c\uff0c\u6240\u6709\u4e00\u822c\u540e\u9762\u4f1a\u8ddf\u4e00\u4e2a\u56de\u8c03\u51fd\u6570.whenComplete\n"})}),"\n"]}),"\n",(0,l.jsxs)(n.li,{children:["\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"  public static CompletableFuture<Object> anyOf(CompletableFuture<?>... cfs) // \u4efb\u610f\u4e00\u4e2a\u5b8c\u6210\u5c31\u5b8c\u6210\n"})}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(n.p,{children:(0,l.jsxs)(n.strong,{children:["\u5e76\u4e14\u5982\u679c\u65b9\u6cd5\u540e\u7f00\u5e26",(0,l.jsx)(n.code,{children:"Async"}),"\u90fd\u662f\u5f02\u6b65\u65b9\u6cd5\uff0c\u5426\u5219\u90fd\u662f\u540c\u6b65\u65b9\u6cd5"]})}),"\n",(0,l.jsx)(n.h3,{id:"\u5b9e\u6218\u7528\u6cd5",children:"\u5b9e\u6218\u7528\u6cd5"}),"\n",(0,l.jsx)(n.p,{children:"\u4e0b\u9762\u6709\u5b9e\u9645\u7684\u4f8b\u5b50(jdk21)\uff1a"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-xml",children:"      \x3c!-- JUnit 5 API --\x3e\n      <dependency>\n        <groupId>org.junit.jupiter</groupId>\n        <artifactId>junit-jupiter-api</artifactId>\n        <version>5.7.1</version>\n        <scope>test</scope>\n      </dependency>\n      \x3c!-- JUnit 5 Engine --\x3e\n      <dependency>\n        <groupId>org.junit.jupiter</groupId>\n        <artifactId>junit-jupiter-engine</artifactId>\n        <version>5.7.1</version>\n        <scope>test</scope>\n      </dependency>\n"})}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:'import org.junit.jupiter.api.DisplayName;\nimport org.junit.jupiter.api.Test;\n\nimport java.util.Arrays;\nimport java.util.List;\nimport java.util.concurrent.*;\n\nimport static java.lang.Character.isUpperCase;\nimport static org.junit.jupiter.api.Assertions.*;\n\n/**\n * @author liufei\n **/\npublic class CompletableFutureTest {\n\n    @Test\n    @DisplayName("\u521b\u5efa\u4e00\u4e2a\u5b8c\u6210\u7684CompletableFuture")\n    void completedFutureExample() {\n        CompletableFuture<String> cf = CompletableFuture.completedFuture("message");\n        assertTrue(cf.isDone());\n        // getNow(T valueIfAbsent) \u5c31\u662f((r = result) == null) ? valueIfAbsent : (T) reportJoin(r);\n        assertEquals("message", cf.getNow(null));\n    }\n\n\n    @Test\n    @DisplayName("\u8fd0\u884c\u4e00\u4e2a\u7b80\u5355\u7684\u5f02\u6b65\u9636\u6bb5")\n    void runAsyncExample() {\n        // CompletableFuture<Void> runAsync(Runnable runnable)\n        CompletableFuture<Void> cf = CompletableFuture.runAsync(() -> {\n            // \u6267\u884c\u4efb\u52a1\u7684\u7ebf\u7a0b\u662f\u7531 ForkJoinPool.commonPool() \u63d0\u4f9b\u7684\u3002ForkJoinPool\u4e2d\u521b\u5efa\u7684\u7ebf\u7a0bForkJoinWorkerThread\u90fd\u662f\u5b88\u62a4\u7ebf\u7a0b\n            System.out.println(Thread.currentThread().getName());\n            assertTrue(Thread.currentThread().isDaemon());\n            randomSleep();\n        });\n        assertFalse(cf.isDone());\n        sleepEnough();\n        assertTrue(cf.isDone());\n    }\n\n    @Test\n    @DisplayName("\u8fd0\u884c\u4e00\u4e2a\u7b80\u5355\u7684\u5e26\u8fd4\u56de\u7ed3\u679c\u7684\u5f02\u6b65\u9636\u6bb5")\n    void supplyAsyncExample() {\n        // runAsync\u6ca1\u6709\u8fd4\u56de\u503c\uff0csupplyAsync\u6709\u8fd4\u56de\u503c\n        CompletableFuture<String> cf = CompletableFuture.supplyAsync(() -> {\n            // \u6267\u884c\u4efb\u52a1\u7684\u7ebf\u7a0b\u662f\u7531 ForkJoinPool.commonPool() \u63d0\u4f9b\u7684\u3002ForkJoinPool\u4e2d\u521b\u5efa\u7684\u7ebf\u7a0bForkJoinWorkerThread\u90fd\u662f\u5b88\u62a4\u7ebf\u7a0b\n            System.out.println(Thread.currentThread().getName());\n            assertTrue(Thread.currentThread().isDaemon());\n            randomSleep();\n            return "done";\n        });\n        assertFalse(cf.isDone());\n        sleepEnough();\n        assertTrue(cf.isDone());\n        System.out.println(cf.getNow(null));\n    }\n\n    @Test\n    @DisplayName("\u5728\u524d\u4e00\u4e2a\u9636\u6bb5\u4e0a\u5e94\u7528\u51fd\u6570")\n    void thenApplyExample() {\n        // thenApply\u7b49\u5f85\u5b8c\u6210\u7ed3\u679c\uff0cgetNow\u4f1a\u963b\u585e\n        CompletableFuture<String> cf = CompletableFuture.completedFuture("message").thenApply(s -> {\n            assertFalse(Thread.currentThread().isDaemon());\n            return s.toUpperCase();\n        });\n        assertEquals("MESSAGE", cf.getNow(null));\n    }\n\n    @Test\n    @DisplayName("\u5728\u524d\u4e00\u4e2a\u9636\u6bb5\u4e0a\u5f02\u6b65\u5e94\u7528\u51fd\u6570")\n    void thenApplyAsyncExample() {\n        CompletableFuture<String> cf = CompletableFuture.completedFuture("message").thenApplyAsync(s -> {\n            assertTrue(Thread.currentThread().isDaemon());\n            randomSleep();\n            return s.toUpperCase();\n        });\n        assertNull(cf.getNow(null));\n        // join \u65b9\u6cd5\u662f\u4e00\u4e2a\u963b\u585e\u64cd\u4f5c\uff0c\u4f1a\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\uff0c\u7b49\u5f85join\u7684\u7ebf\u7a0b\u5b8c\u6210\u8fd4\u56de\n        assertEquals("MESSAGE", cf.join());\n    }\n\n\n    @Test\n    @DisplayName("\u4f7f\u7528\u5b9a\u5236\u7684Executor\u5728\u524d\u4e00\u4e2a\u9636\u6bb5\u4e0a\u5f02\u6b65\u5e94\u7528\u51fd\u6570")\n    void thenApplyAsyncWithExecutorExample() {\n        CompletableFuture<String> cf = CompletableFuture.completedFuture("message").thenApplyAsync(s -> {\n            assertTrue(Thread.currentThread().getName().startsWith("custom-executor-"));\n            assertFalse(Thread.currentThread().isDaemon());\n            randomSleep();\n            return s.toUpperCase();\n        }, executor);\n\n        assertNull(cf.getNow(null));\n        assertEquals("MESSAGE", cf.join());\n    }\n\n    @Test\n    @DisplayName("\u6d88\u8d39\u524d\u4e00\u9636\u6bb5\u7684\u7ed3\u679c")\n    void thenAcceptExample() {\n        StringBuilder result = new StringBuilder();\n        // thenAccept\u662f\u5f53\u524d\u7ebf\u7a0b\u4e2d\u540c\u6b65\u6267\u884c\n        CompletableFuture.completedFuture("thenAccept message").thenAccept(result::append);\n        assertFalse(result.isEmpty(), "Result was empty");\n    }\n\n    @Test\n    @DisplayName("\u5f02\u6b65\u5730\u6d88\u8d39\u524d\u4e00\u9636\u6bb5\u7684\u7ed3\u679c")\n    void thenAcceptAsyncExample() {\n        StringBuilder result = new StringBuilder();\n        // thenAcceptAsync: \u5728\u5f02\u6b65\u7ebf\u7a0b\u4e2d\u6267\u884c\u56de\u8c03\uff0c\u53ef\u4ee5\u63d0\u4f9b\u81ea\u5b9a\u4e49\u7ebf\u7a0b\u6c60\u3002\n        CompletableFuture<Void> cf = CompletableFuture.completedFuture("thenAcceptAsync message")\n                .thenAcceptAsync(result::append);\n        cf.join();\n        assertFalse(result.isEmpty(), "Result was empty");\n    }\n\n    @Test\n    @DisplayName("\u5b8c\u6210\u8ba1\u7b97\u5f02\u5e38")\n    void completeExceptionallyExample() {\n        String MSG = "message upon cancel";\n        String MSG1 = "completed exceptionally";\n        CompletableFuture<String> cf = CompletableFuture.completedFuture("message").thenApplyAsync(String::toUpperCase,\n                CompletableFuture.delayedExecutor(1, TimeUnit.SECONDS));\n        CompletableFuture<String> exceptionHandler = cf.handle((s, th) -> (th != null) ? MSG : "");\n        /*\n         * cf.completeExceptionally(new RuntimeException(MSG1))\uff0c\u8c03\u7528\uff1a\n         * \u8fd4\u56detrue\u5219\u8868\u793aCompletableFuture\u8fd8\u4e3a\u5b8c\u6210\uff0c\u8bbe\u7f6e\u6210\u529f\uff0c\u540e\u7eed\u7684\u8c03\u7528\u90fd\u4f1a\u629b\u51fa\u5f02\u5e38\uff1b\n         * \u8fd4\u56defalse\u5219\u8868\u793a\u5df2\u7ecf\u5b8c\u6210\uff0c\u4e0d\u5f71\u54cd\u8c03\u7528\u7ed3\u679c\u7684\u6b63\u5e38\u8fd4\u56de\u3002\u6bd4\u5982 \u52a0\u4e00\u4e2aTimeUnit.SECONDS.sleep(2);\u7761\u7720\uff0c\u6b64\u65f6cf\u5df2\u7ecf\u5b8c\u6210\uff0ccf.completeExceptionally\u5c31\u4f1a\u8fd4\u56defalse\n         */\n        cf.completeExceptionally(new RuntimeException(MSG1));\n        assertTrue(cf.isCompletedExceptionally(), "Was not completed exceptionally");\n        try {\n            cf.join();\n            fail("Should have thrown an exception");\n        } catch (CompletionException ex) { // just for testing\n            assertEquals(MSG1, ex.getCause().getMessage());\n        }\n\n        assertEquals(MSG, exceptionHandler.join());\n    }\n\n    @Test\n    @DisplayName("\u53d6\u6d88\u8ba1\u7b97")\n    void cancelExample() {\n        CompletableFuture<String> cf = CompletableFuture.completedFuture("message").thenApplyAsync(String::toUpperCase,\n                CompletableFuture.delayedExecutor(1, TimeUnit.SECONDS));\n\n        // exceptionally\u5c31\u662f\u5f53CompletableFuture\u51fa\u73b0\u5f02\u5e38\u65f6\u4f7f\u7528exceptionally\u5b9a\u4e49\u7684\u5f02\u5e38\u6765\u8fd4\u56de\n        CompletableFuture<String> cf2 = cf.exceptionally(throwable -> "canceled message");\n\n        // cancel\u6ca1\u6709\u4f7f\u7528\u4e2d\u65ad\u64cd\u4f5c\uff0c\u800c\u662f\u7b49\u4ef7\u4e8ecompleteExceptionally(new CancellationException()\n        assertTrue(cf.cancel(true), "Was not canceled");\n\n        // isCompletedExceptionally() \u65b9\u6cd5\u7528\u4e8e\u68c0\u67e5\u662f\u5426\u56e0\u5f02\u5e38\u6216\u53d6\u6d88\u800c\u5b8c\u6210\u3002\u8fd9\u91cc\u671f\u5f85\u8fd4\u56de true\uff0c\u8868\u793acf\u56e0\u53d6\u6d88\u800c\u5f02\u5e38\u5b8c\u6210\u3002\n        assertTrue(cf.isCompletedExceptionally(), "Was not completed exceptionally");\n        assertEquals("canceled message", cf2.join());\n    }\n\n    @Test\n    @DisplayName("\u5728\u4e24\u4e2a\u5b8c\u6210\u7684\u9636\u6bb5\u5176\u4e2d\u4e4b\u4e00\u4e0a\u5e94\u7528\u51fd\u6570")\n    void applyToEitherExample() {\n        String original = "Message";\n        CompletableFuture<String> cf1 =\n                CompletableFuture.completedFuture(original).thenApplyAsync(this::delayedUpperCase);\n\n        // applyToEither \u65b9\u6cd5\u3002applyToEither \u7528\u4e8e\u5904\u7406\u4e24\u4e2a CompletableFuture \u4e2d\u6700\u5148\u5b8c\u6210\u7684\u90a3\u4e2a\uff0c\u5e76\u5c06\u7ed3\u679c\u5e94\u7528\u4e8e\u63d0\u4f9b\u7684\u51fd\u6570\n        CompletableFuture<String> cf2 = cf1.applyToEither(\n                CompletableFuture.completedFuture(original).thenApplyAsync(this::delayedLowerCase),\n                s -> s + " from applyToEither");\n        assertTrue(cf2.join().endsWith(" from applyToEither"));\n    }\n\n    @Test\n    @DisplayName("\u5728\u4e24\u4e2a\u5b8c\u6210\u7684\u9636\u6bb5\u5176\u4e2d\u4e4b\u4e00\u4e0a\u8c03\u7528\u6d88\u8d39\u51fd\u6570")\n    void acceptEitherExample() {\n        String original = "Message";\n        StringBuilder result = new StringBuilder();\n        CompletableFuture<Void> cf = CompletableFuture.completedFuture(original)\n                .thenApplyAsync(this::delayedUpperCase)\n                // \u548c\u4e0a\u4e00\u4e2a\u7684\u5dee\u5f02\u65f6\uff0c\u8c03\u7528Function\u8fd8\u662f\u8c03\u7528\u7684 Consumer\uff1bFunction\u6709\u8fd4\u56de\uff0cConsumer\u6ca1\u6709\u8fd4\u56de\n                .acceptEither(\n                        CompletableFuture.completedFuture(original).thenApplyAsync(this::delayedLowerCase),\n                        s -> result.append(s).append("acceptEither"));\n        cf.join();\n\n        assertTrue(result.toString().endsWith("acceptEither"), "Result was empty");\n    }\n\n\n    @Test\n    @DisplayName("\u5728\u4e24\u4e2a\u9636\u6bb5\u90fd\u6267\u884c\u5b8c\u540e\u8fd0\u884c\u4e00\u4e2a")\n    void runAfterBothExample() {\n        String original = "Message";\n        StringBuilder result = new StringBuilder();\n        CompletableFuture.completedFuture(original)\n                .thenApply(String::toUpperCase)\n                .runAfterBoth(\n                        CompletableFuture.completedFuture(original).thenApply(String::toLowerCase),\n                        // \u5728\u4e24\u4e2a\u90fd\u5b8c\u6210\u4e4b\u540e\uff0c\u8fd0\u884c\u4e0b\u9762\u7684\u51fd\u6570\n                        () -> result.append("done"));\n        assertFalse(result.isEmpty(), "Result was empty");\n    }\n\n    @Test\n    @DisplayName("\u4f7f\u7528BiConsumer\u5904\u7406\u4e24\u4e2a\u9636\u6bb5\u7684\u7ed3\u679c")\n    void thenAcceptBothExample() {\n        String original = "Message";\n        StringBuilder result = new StringBuilder();\n        CompletableFuture.completedFuture(original)\n                .thenApply(String::toUpperCase)\n                .thenAcceptBoth(\n                        CompletableFuture.completedFuture(original).thenApply(String::toLowerCase),\n                        (s1, s2) -> result.append(s1).append(s2));\n        assertEquals("MESSAGEmessage", result.toString());\n    }\n\n    @Test\n    @DisplayName("\u4f7f\u7528BiFunction\u5904\u7406\u4e24\u4e2a\u9636\u6bb5\u7684\u7ed3\u679c")\n    void thenCombineExample() {\n        String original = "Message";\n        CompletableFuture<String> cf =\n                CompletableFuture.completedFuture(original)\n                        .thenApply(this::delayedUpperCase)\n                        // \u8fd9\u91ccthenCombine\u662f\u540c\u6b65\u7684\uff0c\u9700\u8981\u7b49\u5f85\u4e24\u4e2a\u90fd\u5b8c\u6210\u518d\u6267\u884c\n                        .thenCombine(CompletableFuture.completedFuture(original).thenApply(this::delayedLowerCase),\n                                (s1, s2) -> s1 + s2);\n        assertEquals("MESSAGEmessage", cf.getNow(null));\n    }\n\n    @Test\n    @DisplayName("\u5f02\u6b65\u4f7f\u7528BiFunction\u5904\u7406\u4e24\u4e2a\u9636\u6bb5\u7684\u7ed3\u679c")\n    void thenCombineAsyncExample() {\n        String original = "Message";\n        CompletableFuture<String> cf = CompletableFuture.completedFuture(original)\n                .thenApplyAsync(this::delayedUpperCase)\n                // thenCombine \u53ea\u662f\u5c06\u4e24\u4e2aCompletableFuture\u7684\u7ed3\u679c\u7ec4\u5408\u5728\u4e00\u8d77\uff0c\u8fd9\u4e00\u7ec4\u5408\u8fc7\u7a0b\u662f\u540c\u6b65\u7684\u3002\n                .thenCombine(CompletableFuture.completedFuture(original).thenApplyAsync(this::delayedLowerCase),\n                        (s1, s2) -> s1 + s2);\n        assertNull(cf.getNow(null));\n        // \u6240\u4ee5\u8fd9\u91cc\u8981join\u624d\u80fd\u62ff\u5230\u7ed3\u679c\n        assertEquals("MESSAGEmessage", cf.join());\n    }\n\n    @Test\n    @DisplayName("\u7ec4\u5408CompletableFuture")\n    void thenComposeExample() {\n        String original = "Message";\n        CompletableFuture<String> cf =\n                CompletableFuture.completedFuture(original)\n                        .thenApply(this::delayedUpperCase)\n                        // \u4e0ethenCombine\u7684\u5de5\u4f5c\u65b9\u5f0f\u4e0d\u540c\u3002thenCompose \u66f4\u9002\u5408\u5904\u7406\u4f9d\u8d56\u5173\u7cfb\u7684\u94fe\u5f0f\u5f02\u6b65\u64cd\u4f5c\u3002\n                        // thenCombine\u662f\u7ec4\u5408\u4e24\u4e2a\u72ec\u7acb\u7684 CompletableFuture\uff0c\u5e76\u5c06\u5b83\u4eec\u7684\u7ed3\u679c\u901a\u8fc7\u7ec4\u5408\u51fd\u6570\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u7ed3\u679c\u3002\n\n                        // thenCompose \u7684\u4e3b\u8981\u529f\u80fd\u662f\u5c06\u4e00\u4e2a CompletableFuture \u7684\u7ed3\u679c\u4f5c\u4e3a\u8f93\u5165\uff0c\u6765\u542f\u52a8\u751f\u6210\u4e00\u4e2a\u65b0\u7684 CompletableFuture\u3002\n                        // \u6362\u53e5\u8bdd\u8bf4\uff0c\u5b83\u5141\u8bb8\u4f60\u5728\u4e00\u4e2a CompletableFuture \u5b8c\u6210\u540e\uff0c\u57fa\u4e8e\u8be5\u7ed3\u679c\u542f\u52a8\u53e6\u4e00\u4e2a\u5f02\u6b65\u64cd\u4f5c\uff0c\u5e76\u8fd4\u56de\u8fd9\u4e2a\u65b0\u7684 CompletableFuture\u3002\n                        .thenCompose(\n                                upper -> CompletableFuture.completedFuture(original)\n                                        .thenApply(this::delayedLowerCase)\n                                        .thenApply(s -> upper + s));\n        assertEquals("MESSAGEmessage", cf.join());\n    }\n\n    @Test\n    @DisplayName("\u5f53\u51e0\u4e2a\u9636\u6bb5\u4e2d\u7684\u4e00\u4e2a\u5b8c\u6210\uff0c\u521b\u5efa\u4e00\u4e2a\u5b8c\u6210\u7684\u9636\u6bb5")\n    void anyOfExample() {\n        StringBuilder result = new StringBuilder();\n        List<String> messages = Arrays.asList("a", "b", "c");\n        List<CompletableFuture<String>> futures =\n                messages.stream()\n                        .map(msg -> CompletableFuture.completedFuture(msg).thenApply(this::delayedUpperCase))\n                        .toList();\n\n        // \u4efb\u4f55\u4e00\u4e2a\u5b8c\u6210\uff0c\u5c31\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5b8c\u6210\u7684\uff0c\u5e76\u751f\u6210\u4e00\u4e2a\u65b0\u7684CompletableFuture\n        CompletableFuture.anyOf(futures.toArray(new CompletableFuture[0]))\n                .whenComplete((res, th) -> {\n                    if (th == null) {\n                        assertTrue(isAllUpperCase((String) res));\n                        result.append(res);\n                    }\n                });\n        assertFalse(result.isEmpty(), "Result was empty");\n    }\n\n    @Test\n    @DisplayName("\u5f53\u6240\u6709\u7684\u9636\u6bb5\u90fd\u5b8c\u6210\u540e\u521b\u5efa\u4e00\u4e2a\u9636\u6bb5")\n    void allOfExample() {\n        StringBuilder result = new StringBuilder();\n        List<String> messages = Arrays.asList("a", "b", "c");\n        List<CompletableFuture<String>> futures =\n                messages.stream()\n                        .map(msg -> CompletableFuture.completedFuture(msg).thenApply(this::delayedUpperCase))\n                        .toList();\n        CompletableFuture.allOf(futures.toArray(new CompletableFuture[0]))\n                .whenComplete((v, th) -> {\n                    futures.forEach(cf -> assertTrue(isAllUpperCase(cf.getNow(null))));\n                    result.append("done");\n                });\n        System.out.println(result);\n        assertFalse(result.isEmpty(), "Result was empty");\n    }\n\n    @Test\n    @DisplayName("\u5f53\u6240\u6709\u7684\u9636\u6bb5\u90fd\u5b8c\u6210\u540e\u5f02\u6b65\u5730\u521b\u5efa\u4e00\u4e2a\u9636\u6bb5")\n    void allOfAsyncExample() {\n        StringBuilder result = new StringBuilder();\n        List<String> messages = Arrays.asList("a", "b", "c");\n        List<CompletableFuture<String>> futures =\n                messages.stream()\n                        .map(msg -> CompletableFuture.completedFuture(msg).thenApplyAsync(this::delayedUpperCase))\n                        .toList();\n        CompletableFuture<Void> allOf =\n                CompletableFuture.allOf(futures.toArray(new CompletableFuture[0]))\n                        .whenComplete((v, th) -> {\n                            futures.forEach(cf -> assertTrue(isAllUpperCase(cf.getNow(null))));\n                            result.append("done");\n                        });\n        allOf.join();\n        System.out.println(result);\n        assertFalse(result.isEmpty(), "Result was empty");\n    }\n\n    private boolean isAllUpperCase(String str) {\n        return str.equals(str.toUpperCase());\n    }\n\n    private String delayedLowerCase(String s) {\n        sleepEnough(1);\n        if (s == null) {\n            return null;\n        }\n        return s.toLowerCase();\n    }\n\n    private String delayedUpperCase(String s) {\n        sleepEnough(1);\n        if (s == null) {\n            return null;\n        }\n        return s.toUpperCase();\n    }\n\n\n    //\u5f02\u6b65\u65b9\u6cd5\u80fd\u591f\u63d0\u4f9b\u4e00\u4e2aExecutor\u6765\u5f02\u6b65\u5730\u6267\u884cCompletableFuture\n    ExecutorService executor = Executors.newFixedThreadPool(3, new ThreadFactory() {\n        int count = 1;\n\n        @Override\n        public Thread newThread(Runnable runnable) {\n            return new Thread(runnable, "custom-executor-" + count++);\n        }\n    });\n\n    private void sleepEnough() {\n        sleepEnough(3);\n    }\n\n    private void sleepEnough(int elapse) {\n        try {\n            TimeUnit.SECONDS.sleep(elapse);\n        } catch (InterruptedException e) {\n            //... \u4e0d\u505a\u64cd\u4f5c\uff0c\u76f4\u63a5\u9000\u51fa\n        }\n    }\n\n    private void randomSleep() {\n        try {\n            Thread.sleep((long) (Math.random() * 1000));\n        } catch (InterruptedException e) {\n            //... \u4e0d\u505a\u64cd\u4f5c\uff0c\u76f4\u63a5\u9000\u51fa\n        }\n    }\n}\n'})}),"\n",(0,l.jsx)(n.h2,{id:"\u5185\u90e8\u539f\u7406",children:"\u5185\u90e8\u539f\u7406"}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"public static CompletableFuture<Void> runAsync(Runnable runnable) {\n        return asyncRunStage(ASYNC_POOL, runnable);\n    }\n\n    private static final boolean USE_COMMON_POOL =\n        (ForkJoinPool.getCommonPoolParallelism() > 1);\n    /**\n     * Default executor -- ForkJoinPool.commonPool() unless it cannot\n     * support parallelism.\n     * ASYNC_POOL\u5c31\u662f\u51b3\u5b9a\u662f\u5426\u4f7f\u7528 ForkJoinPool.commonPool()\u8fd8\u662f\u65b0\u5f00\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u8fd9\u91cc\u53d6\u51b3\u4e8e\u5e95\u5c42\u786c\u4ef6\u662f\u5426\n     * \u652f\u6301\u5e76\u53d1\uff0cgetCommonPoolParallelism\u65b9\u6cd5\u4e2d\u4f9d\u8d56\u4e8e\u5e95\u5c42\u5224\u65ad\uff0c\u6ca1\u6709\u5bf9\u5916\u63d0\u4f9b\u660e\u786e\u7684\u903b\u8f91\n     */\n    private static final Executor ASYNC_POOL = USE_COMMON_POOL ?\n        ForkJoinPool.commonPool() : new ThreadPerTaskExecutor();\n"})}),"\n",(0,l.jsxs)(n.p,{children:[(0,l.jsx)(n.code,{children:"CompletableFuture"}),"\u7684\u6267\u884c\u90fd\u4f9d\u8d56\u4e8e",(0,l.jsx)(n.code,{children:"ForkJoinPool"}),"\u3002\u800c",(0,l.jsx)(n.code,{children:"ForkJoinPool"}),"\u63a5\u53d7\u7684\u4efb\u52a1\u662f",(0,l.jsx)(n.code,{children:"ForkJoinTask"})," \u7c7b\u578b\uff0c\u800c\u6211\u4eec\u5411",(0,l.jsx)(n.code,{children:"CompletableFuture"})," \u63d0 \u4ea4 \u7684 \u4efb \u52a1 \u662f ",(0,l.jsx)(n.code,{children:"Runnable/Supplier/Consumer/Function"})," \u3002 \u56e0\u6b64\uff0c\u80af\u5b9a\u9700\u8981\u4e00\u4e2a\u9002\u914d\u673a\u5236\uff0c\u628a\u8fd9\u56db\u79cd\u7c7b\u578b\u7684\u4efb\u52a1\u8f6c\u6362\u6210",(0,l.jsx)(n.code,{children:"ForkJoinTask"}),"\uff0c\u7136\u540e\u63d0\u4ea4\u7ed9",(0,l.jsx)(n.code,{children:"ForkJoinPool"}),"\uff0c\u4ece\u4e0b\u9762\u7684\u6e90\u7801\u5c31\u53ef\u4ee5\u770b\u5230\uff1a"]}),"\n",(0,l.jsx)(n.pre,{children:(0,l.jsx)(n.code,{className:"language-java",children:"static CompletableFuture<Void> asyncRunStage(Executor e, Runnable f) {\n        if (f == null) throw new NullPointerException();\n        CompletableFuture<Void> d = new CompletableFuture<Void>();\n        e.execute(new AsyncRun(d, f));\n        return d;\n    }\n\n// \u53ef\u4ee5\u770b\u5230\u6bcf\u4e2a\u4efb\u52a1\u7684\u63d0\u4ea4\u6700\u540e\u90fd\u662f\u4ea4\u7ed9\u4e86ForkJoinTask\u5c01\u88c5\u7684\u5bf9\u8c61\nstatic final class AsyncRun extends ForkJoinTask<Void>\n        implements Runnable, AsynchronousCompletionTask {\n        CompletableFuture<Void> dep; Runnable fn;\n        AsyncRun(CompletableFuture<Void> dep, Runnable fn) {\n            this.dep = dep; this.fn = fn;\n        }\n\n        public final Void getRawResult() { return null; }\n        public final void setRawResult(Void v) {}\n        public final boolean exec() { run(); return false; }\n\n        public void run() {\n            CompletableFuture<Void> d; Runnable f;\n            if ((d = dep) != null && (f = fn) != null) {\n                dep = null; fn = null;\n                if (d.result == null) {\n                    try {\n                        f.run();\n                        d.completeNull();\n                    } catch (Throwable ex) {\n                        d.completeThrowable(ex);\n                    }\n                }\n                d.postComplete();\n            }\n        }\n    }\n\n\nstatic final class AsyncSupply<T> extends ForkJoinTask<Void>\n        implements Runnable, AsynchronousCompletionTask {\n  ...\n\nabstract static class Completion extends ForkJoinTask<Void>\n        implements Runnable, AsynchronousCompletionTask {\n        volatile Completion next;\n  ...\n"})}),"\n",(0,l.jsxs)(n.p,{children:["\u6240\u6709\u7684\u4efb\u52a1\u7c7b\u578b\u90fd\u8f6c\u5316\u4e3a\u4e86",(0,l.jsx)(n.code,{children:"ForkJoinTask "}),"\uff0c\u5373",(0,l.jsx)(n.code,{children:"Runnable"}),"/",(0,l.jsx)(n.code,{children:"Supplier"}),"/",(0,l.jsx)(n.code,{children:"Consumer"}),"/",(0,l.jsx)(n.code,{children:"Function"}),"\u5230",(0,l.jsx)(n.code,{children:"ForkJoinTask"}),"\u7684\u8f6c\u6362\u95ee\u9898"]}),"\n",(0,l.jsx)("div",{style:{textAlign:"center",width:"100%"},children:(0,l.jsx)("img",{src:"/analysis-project/img/juc/juc-24.png",alt:"image",style:{maxWidth:"56%",height:"auto",display:"block",margin:"0 auto"}})}),"\n",(0,l.jsxs)(n.p,{children:["\u5185\u90e8",(0,l.jsx)(n.code,{children:"ForkJoinTask"}),"\u4efb\u52a1\u5b50\u7c7b\uff1a",(0,l.jsx)(n.code,{children:"AsyncRun"}),",",(0,l.jsx)(n.code,{children:"Completion"}),"\u7b49\u5bf9\u8c61\u7684\u7ee7\u627f\u5173\u7cfb\u56fe\u5982\u4e0b\uff1a"]}),"\n",(0,l.jsx)("div",{style:{textAlign:"center",width:"100%"},children:(0,l.jsx)("img",{src:"/analysis-project/img/juc/juc-25.png",alt:"image",style:{maxWidth:"56%",height:"auto",display:"block",margin:"0 auto"}})}),"\n",(0,l.jsxs)(n.p,{children:["\u6574\u4e2a",(0,l.jsx)(n.code,{children:"CompletableFuture"}),"\u7684\u6267\u884c\u94fe\u8def\u548c\u903b\u8f91\uff0c\u633a\u957f\u7684\uff0c\u540e\u9762\u518d\u5199"]}),"\n",(0,l.jsx)(n.p,{children:"...todo"})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,l.jsx)(n,{...e,children:(0,l.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>a});var l=t(6540);const r={},s=l.createContext(r);function o(e){const n=l.useContext(s);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),l.createElement(s.Provider,{value:n},e.children)}}}]);